{"version":3,"file":"static/js/258.33ffb8b2.chunk.js","mappings":"mTACA,EAAuB,oBAAvB,EAAkD,oBAAlD,EAAoH,oBAApH,EAA8I,mBAA9I,EAAgL,4BAAhL,EAAoN,qBAApN,EAAoP,wBAApP,EAAyR,0BAAzR,EAA8T,wBAA9T,EAAkW,yB,UC2HlW,EAzGwB,WACtB,IAAMA,GAAUC,EAAAA,EAAAA,IAAYC,EAAAA,IACtBC,GAAWC,EAAAA,EAAAA,KAGXC,EACkB,iBAHPC,EAAAA,EAAAA,MAGNC,SACL,0FACA,gJAWNC,GAAyCC,EAAAA,EAAAA,IAAwB,CAC/DC,cAAe,CACbC,MAAO,GACPC,SAAU,MAHNC,EAAOL,EAAPK,QAASC,EAAYN,EAAZM,aAAcC,EAAKP,EAALO,MAYzBC,EAAkB,SAACC,GACvB,OAAIA,EACI,GAANC,OAAUC,EAAU,KAAAD,OAAIC,GAEjBA,CAEX,EAEA,OAAInB,GACKoB,EAAAA,EAAAA,KAACC,EAAAA,GAAQ,CAACC,GAAG,OAIpBF,EAAAA,EAAAA,KAAA,WAASG,UAAWJ,EAAOK,UACzBJ,EAAAA,EAAAA,KAACK,EAAAA,EAAS,CAAAD,UACRE,EAAAA,EAAAA,MAAA,OAAKH,UAAWJ,EAAMK,SAAA,EACpBE,EAAAA,EAAAA,MAAA,OAAKH,UAAWJ,EAAeK,SAAA,EAC7BJ,EAAAA,EAAAA,KAACO,EAAAA,GAAO,CAACJ,UAAWP,GAAgB,GAAOM,GAAG,cAAcM,KAAG,EAAAJ,UAC7DJ,EAAAA,EAAAA,KAAA,MAAIG,UAAWJ,EAAQK,SAAC,gCAE1BJ,EAAAA,EAAAA,KAACO,EAAAA,GAAO,CAACJ,UAAWP,GAAgB,GAAQM,GAAG,iBAAgBE,UAC7DJ,EAAAA,EAAAA,KAAA,MAAIG,UAAWJ,EAAQK,SAAC,uEAG5BJ,EAAAA,EAAAA,KAACS,EAAAA,EAAI,CAACC,UAAU,cAAcC,KAAM1B,KACpCqB,EAAAA,EAAAA,MAAA,KAAGM,KAAI,GAAAd,OA5CJ,6DA4CqB,WAAWK,UAAWJ,EAAYK,SAAA,EACxDJ,EAAAA,EAAAA,KAACa,EAAAA,IAAQ,CAACC,KAAM,KAAM,aAGxBR,EAAAA,EAAAA,MAAA,QAAMH,UAAWJ,EAAQgB,SAAUrB,GAlC1B,SAACsB,GAChBjC,GAASkC,EAAAA,EAAAA,IAAMD,IACfrB,GACF,IA+BkES,SAAA,EACxDJ,EAAAA,EAAAA,KAACkB,EAAAA,GAAU,CACTzB,QAASA,EACT0B,KAAK,QACLC,MAAO,CACLC,UAAU,EACVC,QAAS,4CAEXC,OAAQ,SAAAC,GAAA,IAAAC,EAAAD,EAAGE,MAASC,EAAQF,EAARE,SAAUC,EAAKH,EAALG,MAASC,EAAUL,EAAVK,WAAU,OAC/C7B,EAAAA,EAAAA,KAAC8B,EAAAA,GAASC,EAAAA,EAAAA,GAAA,CACRH,MAAOA,EACPnC,QAASA,EACTuC,aAAcL,EACdM,MAAOJ,EAAWI,OACdC,EAAAA,EAAO3C,OACX,KAGNS,EAAAA,EAAAA,KAACkB,EAAAA,GAAU,CACTzB,QAASA,EACT0B,KAAK,WACLC,MAAO,CAAEC,UAAU,EAAMc,UAAW,EAAGC,UAAW,IAClDb,OAAQ,SAAAc,GAAA,IAAAC,EAAAD,EAAGX,MAASC,EAAQW,EAARX,SAAUC,EAAKU,EAALV,MAASC,EAAUQ,EAAVR,WAAU,OAC/C7B,EAAAA,EAAAA,KAAC8B,EAAAA,GAASC,EAAAA,EAAAA,GAAA,CACRH,MAAOA,EACPnC,QAASA,EACTuC,aAAcL,EACdM,MAAOJ,EAAWI,OACdC,EAAAA,EAAO1C,UACX,KAGNQ,EAAAA,EAAAA,KAAA,OAAKG,UAAWJ,EAAOK,UACrBJ,EAAAA,EAAAA,KAACuC,EAAAA,EAAM,CAAC5B,KAAK,uCAAS6B,SAAS,mBAGnCxC,EAAAA,EAAAA,KAACyC,EAAAA,GAAI,CAACtC,UAAWJ,EAAYG,GAAG,IAAGE,SAAC,qIAO9C,C,mECzHA,EAA4B,6B,UCU5B,EAJ4C,SAAHoB,GAAsB,IAAhBpB,EAAQoB,EAARpB,SAC3C,OAAOJ,EAAAA,EAAAA,KAAA,OAAKG,UAAWJ,EAAYK,SAAEA,GACzC,C,kGCRA,GAAgB,MAAQ,yBAAyB,MAAQ,yBAAyB,MAAQ,yBAAyB,KAAO,wBAAwB,MAAQ,yBAAyB,WAAa,8BAA8B,OAAS,0BAA0B,UAAY,8B,UCmH7Q,GA7FkBsC,EAAAA,EAAAA,aAA8C,SAACC,EAAOC,GACtE,IAAMC,EAAaF,EAAMxC,UAAS,GAAAL,OAAMC,EAAE+C,MAAK,KAAAhD,OAAIC,EAAE4C,EAAMxC,YAAU,GAAAL,OAAQC,EAAE+C,OACzEC,EAAaJ,EAAMxC,UAAS,GAAAL,OAAMC,EAAEiD,MAAK,KAAAlD,OAAIC,EAAE4C,EAAMxC,YAAU,GAAAL,OAAQC,EAAEiD,OACzEC,EAAYN,EAAMxC,UAAS,GAAAL,OAAMC,EAAEmD,KAAI,KAAApD,OAAIC,EAAE4C,EAAMxC,YAAU,GAAAL,OAAQC,EAAEmD,MACvEC,EAAiBR,EAAMQ,eACvBC,GAAWC,EAAAA,EAAAA,eAAc,CAAEC,SAAU,IAAKC,SAAU,OAC1DC,GAAoCC,EAAAA,EAAAA,UAAiBd,EAAMf,OAAS,IAAG8B,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAhEI,EAAUF,EAAA,GAAEG,EAAaH,EAAA,GAEhCI,GAA8BL,EAAAA,EAAAA,WAAkB,GAAMM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA/CE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAEpBG,GAAoBC,EAAAA,EAAAA,cAAY,SAACC,GACrC,IAAMC,EAAWD,EAAEE,OAAO1C,MAC1BiC,EAAcQ,GAEV1B,EAAMX,cACRW,EAAMX,aAAaoC,GAGnBH,EADe,KAAbI,EAKN,GAAG,CAAC1B,KAEJ4B,EAAAA,EAAAA,YAAU,WACY,KAAhB5B,EAAMf,MACRiC,EAAc,IAEVlB,EAAMf,OACRiC,EAAclB,EAAMf,MAG1B,GAAG,CAACe,EAAMf,SAGV2C,EAAAA,EAAAA,YAAU,WACR,GAAIpB,EAAJ,CACEU,EAAc,IACdI,GAAW,GAOXC,EANkB,CAChBI,OAAQ,CACN1C,MAAO,KAOb,CACF,GAAG,CAACuB,EAAgBe,IAcpB,OACI5D,EAAAA,EAAAA,MAAA,SAAOH,UAAW0C,EAAWzC,SAAA,EAC3BJ,EAAAA,EAAAA,KAAA,SACE4C,IAAKA,EACLzC,UAAW4C,EACXyB,KAAM7B,EAAM6B,KACZrD,KAAMwB,EAAMxB,KACZS,MAAOgC,EACPjC,SAAUuC,EACVO,QArBY,WACd9B,EAAM8B,SACR9B,EAAM8B,SAEV,EAkBQC,OAhBW,WACb/B,EAAM+B,QACR/B,EAAM+B,QAEV,EAaQrD,SAAUsB,EAAMtB,SAChBsD,MAAOhC,EAAMgC,SAEK,WAApBhC,EAAMxC,WAA8C,cAApBwC,EAAMxC,aAA+B6D,IACrE1D,EAAAA,EAAAA,MAAA,QAAMH,UAAW8C,EAAU7C,SAAA,EACzBJ,EAAAA,EAAAA,KAAC4E,EAAAA,IAAQ,CAAC9D,KAAM,GAAI+D,MAAO,CAAEC,YAAa1B,EAAW,MAAQ,OAAQ2B,WAAY,UAChFpC,EAAMqC,eAGU,WAApBrC,EAAMxC,WAA8C,cAApBwC,EAAMxC,YAA8B6D,IACnEhE,EAAAA,EAAAA,KAAA,QAAMG,UAAW8C,EAAU7C,SACxBuC,EAAMqC,cAGRrC,EAAMV,QAASjC,EAAAA,EAAAA,KAAA,KAAGG,UAAWJ,EAAEkC,MAAM7B,SAAEuC,EAAMgC,UAGtD,G,uDChHO,IAAMzC,EAAS,CACpB+C,SAAU,CACRnC,MAAO,YACP3B,KAAM,WACNqD,KAAM,OACNQ,YAAa,aACbL,MAAO,kEACPtD,UAAU,GAEZ9B,MAAO,CACLuD,MAAO,QACP3B,KAAM,QACNqD,KAAM,OACNQ,YAAa,SACbL,MAAO,uBACPtD,UAAU,GAEZ7B,SAAU,CACRsD,MAAO,WACP3B,KAAM,WACNqD,KAAM,WACNQ,YAAa,YACbL,MAAO,sEACPtD,UAAU,GAEZ6D,QAAS,CACPpC,MAAO,UACP3B,KAAM,UACNqD,KAAM,OACNQ,YAAa,GACbL,MAAO,oDACPtD,UAAU,GAEZ8D,OAAQ,CACNrC,MAAO,SACP3B,KAAM,SACNqD,KAAM,OACNQ,YAAa,2GACbL,MAAO,oDACPtD,UAAU,GAEZ+D,eAAgB,CACdtC,MAAO,iBACP3B,KAAM,iBACNqD,KAAM,OACNQ,YAAa,gLACbL,MAAO,oDACPtD,UAAU,G","sources":["webpack://notes-organizer/./src/components/Auth/Login/Login.module.scss?26f7","components/Auth/Login/Login.tsx","webpack://notes-organizer/./src/components/Shared/Container/Container.module.scss?7328","components/Shared/Container/Container.tsx","webpack://notes-organizer/./src/components/Shared/TextField/TextField.module.scss?3228","components/Shared/TextField/TextField.tsx","components/Shared/TextField/fields.ts"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"Login_form__nrLsp\",\"wrap\":\"Login_wrap__HFcTg\",\"imgDesktop\":\"Login_imgDesktop__S1bZf\",\"auth\":\"Login_auth__qvC4J\",\"box\":\"Login_box__q1Trh\",\"linksWrapper\":\"Login_linksWrapper__DgSFm\",\"title\":\"Login_title__SJ-Fr\",\"authLink\":\"Login_authLink__BytdN\",\"activeLink\":\"Login_activeLink__cA0Jq\",\"linkHome\":\"Login_linkHome__FehlF\",\"googleBtn\":\"Login_googleBtn__loZP4\"};","import { useSelector } from 'react-redux';\nimport { useAppDispatch } from '../../../hooks/hooks';\nimport { useForm, Controller } from 'react-hook-form';\nimport { login } from '../../../Redux/auth/auth-operations';\nimport { NavLink, Navigate, Link, useLocation } from 'react-router-dom';\nimport { getLogin } from './../../../Redux/auth/auth-selectors';\n\nimport { IUserDataLogin } from '../../types/auth/auth';\n\nimport { fields } from '../../Shared/TextField/fields';\nimport TextField from '../../Shared/TextField/TextField';\nimport Text from '../../Shared/Text';\nimport Button from '../../Shared/Button/Button';\nimport Container from '../../Shared/Container/Container';\n\nimport { FcGoogle } from 'react-icons/fc';\n\nimport s from './Login.module.scss';\n\nconst Login: React.FC = () => {\n  const isLogin = useSelector(getLogin);\n  const dispatch = useAppDispatch();\n  const location = useLocation();\n\n  const googleText =\n    location.pathname === '/auth/login'\n      ? 'Увійти швидко з Google'\n      : 'Зареєструватись швидко з Google';\n\n  const versionApp = () => {\n    if (process.env.NODE_ENV === 'production') {\n      return 'https://notes-organizer-backend-904276e13746.herokuapp.com';\n    }\n    if (process.env.NODE_ENV === 'development') {\n      return 'http://localhost:4000';\n    }\n  };\n\n  const { control, handleSubmit, reset } = useForm<IUserDataLogin>({\n    defaultValues: {\n      email: '',\n      password: '',\n    },\n  });\n\n  const onSubmit = (data: IUserDataLogin) => {\n    dispatch(login(data));\n    reset();\n  };\n\n  const customClassName = (active: boolean) => {\n    if (active) {\n      return `${s.authLink} ${s.activeLink}`;\n    } else {\n      return s.authLink;\n    }\n  };\n\n  if (isLogin) {\n    return <Navigate to=\"/\" />;\n  }\n\n  return (\n    <section className={s.auth}>\n      <Container>\n        <div className={s.box}>\n          <div className={s.linksWrapper}>\n            <NavLink className={customClassName(true)} to=\"/auth/login\" end>\n              <h2 className={s.title}>Вхід</h2>\n            </NavLink>\n            <NavLink className={customClassName(false)} to=\"/auth/register\">\n              <h2 className={s.title}>Реєстрація</h2>\n            </NavLink>\n          </div>\n          <Text textClass=\"google-text\" text={googleText} />\n          <a href={`${versionApp()}/google`} className={s.googleBtn}>\n            <FcGoogle size={24} />\n            Google\n          </a>\n          <form className={s.form} onSubmit={handleSubmit(onSubmit)}>\n            <Controller\n              control={control}\n              name=\"email\"\n              rules={{\n                required: true,\n                pattern: /^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$/,\n              }}\n              render={({ field: { onChange, value }, fieldState }) => (\n                <TextField\n                  value={value}\n                  control={control}\n                  handleChange={onChange}\n                  error={fieldState.error}\n                  {...fields.email}\n                />\n              )}\n            />\n            <Controller\n              control={control}\n              name=\"password\"\n              rules={{ required: true, minLength: 8, maxLength: 20 }}\n              render={({ field: { onChange, value }, fieldState }) => (\n                <TextField\n                  value={value}\n                  control={control}\n                  handleChange={onChange}\n                  error={fieldState.error}\n                  {...fields.password}\n                />\n              )}\n            />\n            <div className={s.wrap}>\n              <Button text=\"Ввійти\" btnClass=\"btnLight\" />\n            </div>\n          </form>\n          <Link className={s.linkHome} to=\"/\">\n            Повернутися на головну\n          </Link>\n        </div>\n      </Container>\n    </section>\n  );\n};\n\nexport default Login;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Container_container__NXBJZ\"};","import React, { ReactNode } from 'react';\nimport s from './Container.module.scss'\n\ninterface ContainerProps {\n    children: ReactNode;\n}\n\nconst Container: React.FC<ContainerProps> = ({ children }) => {\n    return <div className={s.container}>{children}</div>;\n};\n\nexport default Container;","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"TextField_label__kp4Pv\",\"input\":\"TextField_input__JDykO\",\"error\":\"TextField_error__92ab9\",\"span\":\"TextField_span__qcPmc\",\"value\":\"TextField_value__Rhply\",\"createTodo\":\"TextField_createTodo__PD23L\",\"search\":\"TextField_search__dl4gh\",\"searchIST\":\"TextField_searchIST__LvGwH\"};","import { ChangeEvent, forwardRef, ChangeEventHandler, useState, useEffect, useCallback} from 'react';\nimport { FieldError, Control } from 'react-hook-form';\nimport { useMediaQuery } from 'react-responsive';\nimport { CiSearch } from 'react-icons/ci';\n\nimport s from './TextField.module.scss';\n\nexport interface ITextFieldProps {\n  type?: string;\n  name?: string;\n  value?: string;\n  handleChange?: ChangeEventHandler<HTMLInputElement>;\n  placeholder?: string | string[];\n  required?: boolean;\n  title?: string;\n  className?: string;\n  error?: FieldError;\n  control?: Control<any>;\n  onFocus?: () => void;\n  onBlur?: () => void;\n  clearTextField?: boolean;\n}\n\nconst TextField = forwardRef<HTMLInputElement, ITextFieldProps>((props, ref) => {\n  const labelClass = props.className ? `${s.label} ${s[props.className]}` : `${s.label}`;\n  const inputClass = props.className ? `${s.input} ${s[props.className]}` : `${s.input}`;\n  const spanClass = props.className ? `${s.span} ${s[props.className]}` : `${s.span}`;\n  const clearTextField = props.clearTextField;\n  const isTablet = useMediaQuery({ minWidth: 768, maxWidth: 1279 });\n  const [inputValue, setInputValue] = useState<string>(props.value || '');\n\n  const [isValue, setIsValue] = useState<boolean>(false);\n\n  const handleInputChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    const newValue = e.target.value; \n    setInputValue(newValue);\n\n    if (props.handleChange) {\n      props.handleChange(e);\n    }\n    if (newValue !== '') {\n      setIsValue(true);\n    } else {\n      setIsValue(false);\n    }\n  }, [props]);\n\n  useEffect(() => { \n    if (props.value === '') {\n      setInputValue('');\n    } else {\n      if (props.value) {\n        setInputValue(props.value);\n      }\n    }\n  }, [props.value]);\n\n  //скидуэмо значення Input коли користувач був обраний\n  useEffect(() => {\n    if (clearTextField) {\n      setInputValue('');\n      setIsValue(false);\n      const fakeEvent = {\n        target: {\n          value: '',\n        },\n      } as ChangeEvent<HTMLInputElement>;\n\n      handleInputChange(fakeEvent);\n    } else {\n      return;\n    }\n  }, [clearTextField, handleInputChange]);\n  \n  const handleFocus = () => {\n    if (props.onFocus) {\n      props.onFocus();\n    }\n  };\n\n  const handleBlur = () => {\n    if (props.onBlur) {\n      props.onBlur();\n    }\n  };\n\n  return (\n      <label className={labelClass}>\n        <input\n          ref={ref}\n          className={inputClass}\n          type={props.type}\n          name={props.name}\n          value={inputValue}\n          onChange={handleInputChange}\n          onFocus={handleFocus}\n          onBlur={handleBlur}\n          required={props.required}\n          title={props.title}\n      />\n      {(props.className === 'search' || props.className === 'searchIST') && !isValue &&\n        <span className={spanClass}>\n          <CiSearch size={24} style={{ marginRight: isTablet ? '5px' : '10px', marginLeft: '10px'}}/>\n          {props.placeholder}\n        </span>\n      }\n      {props.className !== 'search' && props.className !== 'searchIST' && !isValue &&\n        <span className={spanClass}>\n          {props.placeholder}\n        </span>\n      }\n        {props.error && <p className={s.error}>{props.title}</p>}\n      </label>\n  );\n});\n\nexport default TextField;\n\n","import { ITextFieldProps } from \"./TextField\";\n\nexport const fields = {\n  username: {\n    label: 'User name',\n    name: 'username',\n    type: 'text',\n    placeholder: 'User name*',\n    title: '*The Name field must be more than 2 and less than 31 characters',\n    required: true,\n  } as ITextFieldProps,\n  email: {\n    label: 'Email',\n    name: 'email',\n    type: 'text',\n    placeholder: 'Email*',\n    title: '*Enter a valid email',\n    required: true,\n  } as ITextFieldProps,\n  password: {\n    label: 'Password',\n    name: 'password',\n    type: 'password',\n    placeholder: 'Password*',\n    title: '*The Password field must be more than 2 and less than 21 characters',\n    required: true,\n  } as ITextFieldProps,\n  subject: {\n    label: 'Subject',\n    name: 'subject',\n    type: 'text',\n    placeholder: '',\n    title: '*The Subject field must be more than 2 characters',\n    required: true,\n  } as ITextFieldProps,\n  search: {\n    label: 'Search',\n    name: 'search',\n    type: 'text',\n    placeholder: 'Введіть email для пошуку',\n    title: '*The Subject field must be more than 2 characters',\n    required: false,\n  } as ITextFieldProps,\n  searchByPhrase: {\n    label: 'searchByPhrase',\n    name: 'searchByPhrase',\n    type: 'text',\n    placeholder: 'Введіть слово чи фразу для пошуку',\n    title: '*The Subject field must be more than 2 characters',\n    required: false,\n  } as ITextFieldProps,\n};\n"],"names":["isLogin","useSelector","getLogin","dispatch","useAppDispatch","googleText","useLocation","pathname","_useForm","useForm","defaultValues","email","password","control","handleSubmit","reset","customClassName","active","concat","s","_jsx","Navigate","to","className","children","Container","_jsxs","NavLink","end","Text","textClass","text","href","FcGoogle","size","onSubmit","data","login","Controller","name","rules","required","pattern","render","_ref","_ref$field","field","onChange","value","fieldState","TextField","_objectSpread","handleChange","error","fields","minLength","maxLength","_ref2","_ref2$field","Button","btnClass","Link","forwardRef","props","ref","labelClass","label","inputClass","input","spanClass","span","clearTextField","isTablet","useMediaQuery","minWidth","maxWidth","_useState","useState","_useState2","_slicedToArray","inputValue","setInputValue","_useState3","_useState4","isValue","setIsValue","handleInputChange","useCallback","e","newValue","target","useEffect","type","onFocus","onBlur","title","CiSearch","style","marginRight","marginLeft","placeholder","username","subject","search","searchByPhrase"],"sourceRoot":""}