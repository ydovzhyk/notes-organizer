{"version":3,"file":"static/js/138.64299de5.chunk.js","mappings":"+NA4BA,EArBmD,SAAHA,GAA2B,IAArBC,EAAKD,EAALC,MAAOC,EAAMF,EAANE,OAC3D,OACEC,EAAAA,EAAAA,MAAA,OACEC,QAAQ,YACRH,MAAOA,EACPC,OAAQA,EACRG,KAAK,OACLC,MAAM,6BAA4BC,SAAA,EAElCC,EAAAA,EAAAA,KAAA,QACEC,EAAE,6tBACFJ,KAAK,aAEPG,EAAAA,EAAAA,KAAA,QACEC,EAAE,+/BACFJ,KAAK,cAIb,ECzBA,G,QAAsB,uBAAtB,EAA0D,8BAA1D,EAA8F,sBCgF9F,EAjE2C,SAAHL,GAKjC,IAADU,EAAAV,EAJJW,WAAAA,OAAU,IAAAD,EAAG,aAAYA,EACzBE,EAAmBZ,EAAnBY,oBACAC,EAAKb,EAALa,MACAC,EAAYd,EAAZc,aAEMC,EAAc,IAAIC,KAClBC,EAAU,IAAID,KACpBC,EAAQC,SAASH,EAAYI,WAAa,GAE1C,IAAAC,GAAwCC,EAAAA,EAAAA,UACtCC,IAAOT,EAAO,eACfU,GAAAC,EAAAA,EAAAA,GAAAJ,EAAA,GAFMK,EAAYF,EAAA,GAAEG,EAAeH,EAAA,IAIpCI,EAAAA,EAAAA,YAAU,WACRD,EAAgBJ,IAAOT,EAAO,cAChC,GAAG,CAACA,IAEJ,IAKMe,GAAcC,EAAAA,EAAAA,aAAqE,SAAAC,EAAcC,GAAS,IAApBC,EAAOF,EAAPE,QAC1FC,GAAsCZ,EAAAA,EAAAA,UACpCC,IAAOG,GAAcS,OAAO,eAC7BC,GAAAX,EAAAA,EAAAA,GAAAS,EAAA,GAFMG,EAAWD,EAAA,GAAEE,EAAcF,EAAA,GAQlC,OAJAR,EAAAA,EAAAA,YAAU,WACRU,EAAef,IAAOG,GAAcS,OAAO,cAC7C,GAAG,KAGD/B,EAAAA,EAAAA,MAAA,UAAQmC,KAAK,SAASC,UAAWC,EAAOR,QAASA,EAASD,IAAKA,EAAIxB,SAAA,EACjEC,EAAAA,EAAAA,KAACiC,EAAY,CAACxC,MAAM,KAAKC,OAAO,OAC/BkC,IAGP,IAYA,OACE5B,EAAAA,EAAAA,KAAAkC,EAAAA,SAAA,CAAAnC,UACEC,EAAAA,EAAAA,KAACmC,IAAU,CACTC,SAAUnB,EAAaoB,SACvBC,SAAU,SAAAC,GAAI,OApCK,SAACA,GACxBrB,EAAgBqB,GAChBjC,EAAaiC,EAAKb,OAAO,cAC3B,CAiCwBc,CAAiB1B,IAAOyB,GAAM,EAChDE,aAAazC,EAAAA,EAAAA,KAACoB,EAAW,IACzBjB,WAAYA,EACZC,oBAAqBA,EACrBK,QAASA,EACTiC,kBAnB0B,SAACC,EAAoBJ,GACnD,IAAMK,EAAgB9B,IAAOG,EAAaoB,UAAUQ,QAAQ,OACtDC,EAAehC,IAAOyB,GAAMM,QAAQ,OAE1C,OAAID,EAAcG,OAAOD,IAChB9C,EAAAA,EAAAA,KAAA,OAAK+B,UAAWC,EAAcjC,SAAE4C,KAElC3C,EAAAA,EAAAA,KAAA,OAAK+B,UAAWC,EAAMjC,SAAE4C,GACjC,KAeF,C,mEC9EA,EAA4B,6B,UCU5B,EAJ4C,SAAHnD,GAAsB,IAAhBO,EAAQP,EAARO,SAC3C,OAAOC,EAAAA,EAAAA,KAAA,OAAK+B,UAAWC,EAAYjC,SAAEA,GACzC,C,yKCRA,GAAgB,MAAQ,2BAA2B,OAAS,4BAA4B,UAAY,+BAA+B,WAAa,iC,UCmGhJ,EAnFiD,SAAHP,GASvC,IARLwD,EAAIxD,EAAJwD,KACA3C,EAAKb,EAALa,MACAC,EAAYd,EAAZc,aACA2C,EAAWzD,EAAXyD,YACAC,EAAQ1D,EAAR0D,SACAC,EAAO3D,EAAP2D,QACApB,EAASvC,EAATuC,UACAqB,EAAY5D,EAAZ4D,aAEMC,EAAatB,EAAS,GAAAuB,OAAMtB,EAAEuB,MAAK,KAAAD,OAAItB,EAAED,IAAU,GAAAuB,OAAQtB,EAAEuB,OAC7DC,EAAczB,EAAS,GAAAuB,OAAMtB,EAAEyB,OAAM,KAAAH,OAAItB,EAAED,IAAU,GAAAuB,OAAQtB,EAAEyB,QAE/DC,GAAWC,EAAAA,EAAAA,eAAc,CAAEC,SAAU,MACrCC,GAAWF,EAAAA,EAAAA,eAAc,CAAEG,SAAU,IAAKF,SAAU,OAGpDG,EAA6B,CACnCC,QAAS,SAACC,EAAeC,GAAK,OAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACzBF,GAAQ,IACXG,SAAUV,EAAW,OAASG,EAAW,OAAS,OAClDnE,OAAQgE,GAAoBG,EAAT,OAA6B,OAChDQ,MAAO,2BACPC,cAAe,OACfC,YAAaL,EAAMM,UAAY,QAAUP,EAASM,aAAW,EAE/DE,OAAQ,SAACC,EAAMpD,GAA6C,IAAzCqD,EAAUrD,EAAVqD,WAAYH,EAASlD,EAATkD,UAAWI,EAAUtD,EAAVsD,WAClCC,EAAkBD,EAClB,QACAJ,EACA,qBACA,QAEAM,EAAYF,EAAa,QAAU,QAEzC,OAAAT,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACOO,GAAM,IACTG,gBAAiBF,OAAaI,EAAYF,EAC1CR,MAAOM,EAAa,OAASG,EAC7BpF,OAAQgE,GAAoBG,EAAT,OAA6B,OAChDmB,QAAS,OACTC,WAAY,SACZC,OAAQP,EAAa,cAAgB,UACrC,WAASR,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACFO,EAAO,YAAU,IACpBG,gBAAkBF,OAA2DI,EAA9CH,EAAa,QAAU,wBAG9D,EACAO,KAAM,SAAClB,EAAUC,GAAK,OAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACjBF,GAAQ,IACXmB,UAAW1B,GAAoBG,EAAT,OAA6B,OAAK,GAI5D,OACElE,EAAAA,EAAAA,MAAA,SAAOoC,UAAWsB,EAAWtD,SAAA,EAC3BC,EAAAA,EAAAA,KAACqF,EAAAA,GAAM,CACLtD,UAAWyB,EACXR,KAAMA,EACN3C,MAAOA,EACPiC,SAAUhC,EACV2C,YAAaA,EACbC,SAAUA,EACVC,QAASA,EACTuB,OAAQX,EACRX,aAAcA,EACdkC,MAAO,SAACA,GAAK,OAAAnB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACRmB,GAAK,IACRC,aAAc,EACdC,QAAMrB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACHmB,EAAME,QAAM,IACfC,QAAS,WACR,KAGHrC,GAAgC,KAAhB/C,EAAMA,QACtBL,EAAAA,EAAAA,KAAA,QAAM+B,UAAWC,EAAE0D,UAAU3F,SAAEkD,MAIvC,C,kGCjGA,GAAgB,MAAQ,yBAAyB,MAAQ,yBAAyB,MAAQ,yBAAyB,KAAO,wBAAwB,MAAQ,yBAAyB,WAAa,8BAA8B,OAAS,0BAA0B,UAAY,8B,UCmH7Q,GA7FkB5B,EAAAA,EAAAA,aAA8C,SAACsE,EAAOpE,GACtE,IAAM8B,EAAasC,EAAM5D,UAAS,GAAAuB,OAAMtB,EAAEuB,MAAK,KAAAD,OAAItB,EAAE2D,EAAM5D,YAAU,GAAAuB,OAAQtB,EAAEuB,OACzEqC,EAAaD,EAAM5D,UAAS,GAAAuB,OAAMtB,EAAE6D,MAAK,KAAAvC,OAAItB,EAAE2D,EAAM5D,YAAU,GAAAuB,OAAQtB,EAAE6D,OACzEH,EAAYC,EAAM5D,UAAS,GAAAuB,OAAMtB,EAAE8D,KAAI,KAAAxC,OAAItB,EAAE2D,EAAM5D,YAAU,GAAAuB,OAAQtB,EAAE8D,MACvEC,EAAiBJ,EAAMI,eACvBlC,GAAWF,EAAAA,EAAAA,eAAc,CAAEG,SAAU,IAAKF,SAAU,OAC1DhD,GAAoCC,EAAAA,EAAAA,UAAiB8E,EAAMtF,OAAS,IAAGU,GAAAC,EAAAA,EAAAA,GAAAJ,EAAA,GAAhEoF,EAAUjF,EAAA,GAAEkF,EAAalF,EAAA,GAEhCU,GAA8BZ,EAAAA,EAAAA,WAAkB,GAAMc,GAAAX,EAAAA,EAAAA,GAAAS,EAAA,GAA/CyE,EAAOvE,EAAA,GAAEwE,EAAUxE,EAAA,GAEpByE,GAAoBC,EAAAA,EAAAA,cAAY,SAACC,GACrC,IAAMC,EAAWD,EAAEE,OAAOnG,MAC1B4F,EAAcM,GAEVZ,EAAMrF,cACRqF,EAAMrF,aAAagG,GAGnBH,EADe,KAAbI,EAKN,GAAG,CAACZ,KAEJxE,EAAAA,EAAAA,YAAU,WACY,KAAhBwE,EAAMtF,MACR4F,EAAc,IAEVN,EAAMtF,OACR4F,EAAcN,EAAMtF,MAG1B,GAAG,CAACsF,EAAMtF,SAGVc,EAAAA,EAAAA,YAAU,WACR,GAAI4E,EAAJ,CACEE,EAAc,IACdE,GAAW,GAOXC,EANkB,CAChBI,OAAQ,CACNnG,MAAO,KAOb,CACF,GAAG,CAAC0F,EAAgBK,IAcpB,OACIzG,EAAAA,EAAAA,MAAA,SAAOoC,UAAWsB,EAAWtD,SAAA,EAC3BC,EAAAA,EAAAA,KAAA,SACEuB,IAAKA,EACLQ,UAAW6D,EACX9D,KAAM6D,EAAM7D,KACZkB,KAAM2C,EAAM3C,KACZ3C,MAAO2F,EACP1D,SAAU8D,EACVK,QArBY,WACdd,EAAMc,SACRd,EAAMc,SAEV,EAkBQC,OAhBW,WACbf,EAAMe,QACRf,EAAMe,QAEV,EAaQxD,SAAUyC,EAAMzC,SAChByD,MAAOhB,EAAMgB,SAEK,WAApBhB,EAAM5D,WAA8C,cAApB4D,EAAM5D,aAA+BmE,IACrEvG,EAAAA,EAAAA,MAAA,QAAMoC,UAAW2D,EAAU3F,SAAA,EACzBC,EAAAA,EAAAA,KAAC4G,EAAAA,IAAQ,CAACC,KAAM,GAAIC,MAAO,CAAEC,YAAalD,EAAW,MAAQ,OAAQmD,WAAY,UAChFrB,EAAM1C,eAGU,WAApB0C,EAAM5D,WAA8C,cAApB4D,EAAM5D,YAA8BmE,IACnElG,EAAAA,EAAAA,KAAA,QAAM+B,UAAW2D,EAAU3F,SACxB4F,EAAM1C,cAGR0C,EAAMsB,QAASjH,EAAAA,EAAAA,KAAA,KAAG+B,UAAWC,EAAEiF,MAAMlH,SAAE4F,EAAMgB,UAGtD,G,uDChHO,IAAMO,EAAS,CACpBC,SAAU,CACR5D,MAAO,YACPP,KAAM,WACNlB,KAAM,OACNmB,YAAa,aACb0D,MAAO,kEACPzD,UAAU,GAEZkE,MAAO,CACL7D,MAAO,QACPP,KAAM,QACNlB,KAAM,OACNmB,YAAa,SACb0D,MAAO,uBACPzD,UAAU,GAEZmE,SAAU,CACR9D,MAAO,WACPP,KAAM,WACNlB,KAAM,WACNmB,YAAa,YACb0D,MAAO,sEACPzD,UAAU,GAEZoE,QAAS,CACP/D,MAAO,UACPP,KAAM,UACNlB,KAAM,OACNmB,YAAa,GACb0D,MAAO,oDACPzD,UAAU,GAEZqE,OAAQ,CACNhE,MAAO,SACPP,KAAM,SACNlB,KAAM,OACNmB,YAAa,2GACb0D,MAAO,oDACPzD,UAAU,GAEZsE,eAAgB,CACdjE,MAAO,iBACPP,KAAM,iBACNlB,KAAM,OACNmB,YAAa,gLACb0D,MAAO,oDACPzD,UAAU,G,0LChDd,EAAuB,mBAAvB,EAAqD,uBAArD,EAAyF,yBAAzF,EAA6H,uBAA7H,EAA0K,kCAA1K,EAA2N,2BAA3N,EAAkQ,wBAAlQ,EAA4S,8BAA5S,EAAuV,yBAAvV,EAAyX,qB,UCgBnXuE,EAAY,SAAClF,GACf,IAAMmF,EAAQ5G,MAGd,OAFgBA,IAAOyB,EAAM,cAEjBoF,cAAcD,EAAO,OACtB,qEAEA,4HAEf,EAgNA,EA9MmC,SAAHlI,GAA8F,IAAxFoI,EAAcpI,EAAdoI,eAAgBC,EAAQrI,EAARqI,SAAUC,EAAMtI,EAANsI,OAAQC,EAAYvI,EAAZuI,aAAcC,EAAIxI,EAAJwI,KAAMV,EAAO9H,EAAP8H,QAASW,EAAiBzI,EAAjByI,kBAC3FvE,GAAWC,EAAAA,EAAAA,eAAc,CAAEC,SAAU,MAE3C,OACI5D,EAAAA,EAAAA,KAAA,OAAK+B,UAAWC,EAAOjC,UACnBJ,EAAAA,EAAAA,MAAA,OAAAI,SAAA,EACAC,EAAAA,EAAAA,KAACkI,EAAAA,EAAI,CACDC,KAAM,oGACNC,UAAU,qBAEdzI,EAAAA,EAAAA,MAAA,OAAKoC,UAAWC,EAAWjC,SAAA,CACtB8H,GAAYC,IAAUnI,EAAAA,EAAAA,MAAA,OAAKoC,UAAWC,EAAajC,SAAA,EAChDC,EAAAA,EAAAA,KAACkI,EAAAA,EAAI,CACDC,KAAMV,EAAUK,GAChBM,UAAU,oBAES,uEAAtBX,EAAUK,IACP9H,EAAAA,EAAAA,KAACqI,EAAAA,IAAO,CAAChE,MAAM,QAAQwC,KAAK,OAAOC,MAAO,CAAEE,WAAY,OAAQD,YAAa,WAC7E/G,EAAAA,EAAAA,KAACsI,EAAAA,IAAO,CAACjE,MAAM,MAAMwC,KAAK,OAAOC,MAAO,CAAEE,WAAY,OAAQD,YAAa,cAE7ErD,IAAa/D,EAAAA,EAAAA,MAAA,MAAIoC,UAAWC,EAAajC,SAAA,EACvCJ,EAAAA,EAAAA,MAAA,MAAIoC,UAAWC,EAAYjC,SAAA,EACvBJ,EAAAA,EAAAA,MAAA,OAAAI,SAAA,EACIC,EAAAA,EAAAA,KAACkI,EAAAA,EAAI,CACDC,KAAM,uCACNC,UAAU,qBAEdpI,EAAAA,EAAAA,KAAA,OAAK+B,UAAWC,EAAWjC,UACvBC,EAAAA,EAAAA,KAACkI,EAAAA,EAAI,CACDC,KAAMH,EACNI,UAAU,yBAItBzI,EAAAA,EAAAA,MAAA,OAAAI,SAAA,EACIC,EAAAA,EAAAA,KAACkI,EAAAA,EAAI,CACDC,KAAM,sEACNC,UAAU,qBAEdpI,EAAAA,EAAAA,KAAA,OAAK+B,UAAWC,EAAejC,UAC3BC,EAAAA,EAAAA,KAACkI,EAAAA,EAAI,CACDC,KAAMN,EACNO,UAAU,wBAK1BzI,EAAAA,EAAAA,MAAA,MAAIoC,UAAWC,EAAYjC,SAAA,EACvBJ,EAAAA,EAAAA,MAAA,OAAAI,SAAA,EACIC,EAAAA,EAAAA,KAACkI,EAAAA,EAAI,CACDC,KAAM,2BACNC,UAAU,qBAEdpI,EAAAA,EAAAA,KAAA,OAAK+B,UAAWC,EAAWjC,UACvBC,EAAAA,EAAAA,KAACkI,EAAAA,EAAI,CACDC,KAAMb,EACNc,UAAU,qBAItBzI,EAAAA,EAAAA,MAAA,OAAAI,SAAA,EACIC,EAAAA,EAAAA,KAACkI,EAAAA,EAAI,CACDC,KAAM,wFACNC,UAAU,qBAEdpI,EAAAA,EAAAA,KAAA,OAAK+B,UAAWC,EAAejC,UAC3BC,EAAAA,EAAAA,KAACkI,EAAAA,EAAI,CACDC,KAAML,EACNM,UAAU,wBAK1BpI,EAAAA,EAAAA,KAAA,MAAI+B,UAAWC,EAAYjC,UACvBJ,EAAAA,EAAAA,MAAA,OAAAI,SAAA,EACIC,EAAAA,EAAAA,KAACkI,EAAAA,EAAI,CACDC,KAAM,sHACNC,UAAU,qBAEdpI,EAAAA,EAAAA,KAAA,OAAK+B,UAAWC,EAAsBjC,UAClCC,EAAAA,EAAAA,KAAA,OAAK+B,UAAWC,EAASjC,UACrBC,EAAAA,EAAAA,KAACkI,EAAAA,EAAI,CACDC,KAAMP,EACNQ,UAAU,mCAM7BL,IAAgB/H,EAAAA,EAAAA,KAAA,MAAI+B,UAAWC,EAAYjC,UACxCJ,EAAAA,EAAAA,MAAA,OAAAI,SAAA,EACIC,EAAAA,EAAAA,KAACkI,EAAAA,EAAI,CACDC,KAAM,6KACNC,UAAU,qBAEdpI,EAAAA,EAAAA,KAAA,OAAK+B,UAAWC,EAAsBjC,UAClCC,EAAAA,EAAAA,KAACkI,EAAAA,EAAI,CACDC,KAAMJ,EACNK,UAAU,kCAK1BpI,EAAAA,EAAAA,KAACkI,EAAAA,EAAI,CACDC,KAAMF,EACF,oXACA,8WACJG,UAAU,uBAGjB1E,IAAa/D,EAAAA,EAAAA,MAAA,MAAIoC,UAAWC,EAAajC,SAAA,EACtCJ,EAAAA,EAAAA,MAAA,MAAIoC,UAAWC,EAAkBjC,SAAA,EAC7BJ,EAAAA,EAAAA,MAAA,OAAAI,SAAA,EACIC,EAAAA,EAAAA,KAACkI,EAAAA,EAAI,CACDC,KAAM,uCACNC,UAAU,qBAEdpI,EAAAA,EAAAA,KAAA,OAAK+B,UAAWC,EAAWjC,UACvBC,EAAAA,EAAAA,KAACkI,EAAAA,EAAI,CACDC,KAAMH,EACNI,UAAU,yBAItBzI,EAAAA,EAAAA,MAAA,OAAAI,SAAA,EACIC,EAAAA,EAAAA,KAACkI,EAAAA,EAAI,CACDC,KAAM,2BACNC,UAAU,qBAEdpI,EAAAA,EAAAA,KAAA,OAAK+B,UAAWC,EAAWjC,UACvBC,EAAAA,EAAAA,KAACkI,EAAAA,EAAI,CACDC,KAAMb,EACNc,UAAU,wBAK1BzI,EAAAA,EAAAA,MAAA,MAAIoC,UAAWC,EAAkBjC,SAAA,EAC7BJ,EAAAA,EAAAA,MAAA,OAAAI,SAAA,EACIC,EAAAA,EAAAA,KAACkI,EAAAA,EAAI,CACDC,KAAM,sEACNC,UAAU,qBAEdpI,EAAAA,EAAAA,KAAA,OAAK+B,UAAWC,EAAejC,UAC3BC,EAAAA,EAAAA,KAACkI,EAAAA,EAAI,CACDC,KAAMN,EACNO,UAAU,qBAItBzI,EAAAA,EAAAA,MAAA,OAAAI,SAAA,EACIC,EAAAA,EAAAA,KAACkI,EAAAA,EAAI,CACDC,KAAM,wFACNC,UAAU,qBAEdpI,EAAAA,EAAAA,KAAA,OAAK+B,UAAWC,EAAejC,UAC3BC,EAAAA,EAAAA,KAACkI,EAAAA,EAAI,CACDC,KAAML,EACNM,UAAU,wBAK1BpI,EAAAA,EAAAA,KAAA,MAAI+B,UAAWC,EAAkBjC,UAC7BJ,EAAAA,EAAAA,MAAA,OAAAI,SAAA,EACIC,EAAAA,EAAAA,KAACkI,EAAAA,EAAI,CACDC,KAAM,sHACNC,UAAU,qBAEdpI,EAAAA,EAAAA,KAAA,OAAK+B,UAAWC,EAAsBjC,UAClCC,EAAAA,EAAAA,KAAA,OAAK+B,UAAWC,EAASjC,UACrBC,EAAAA,EAAAA,KAACkI,EAAAA,EAAI,CACDC,KAAMP,EACNQ,UAAU,mCAM7BL,IAAiB/H,EAAAA,EAAAA,KAAA,MAAI+B,UAAWC,EAAkBjC,UAC/CJ,EAAAA,EAAAA,MAAA,OAAAI,SAAA,EACIC,EAAAA,EAAAA,KAACkI,EAAAA,EAAI,CACDC,KAAM,6KACNC,UAAU,qBAEdpI,EAAAA,EAAAA,KAAA,OAAK+B,UAAWC,EAAsBjC,UAClCC,EAAAA,EAAAA,KAACkI,EAAAA,EAAI,CACDC,KAAMJ,EACNK,UAAU,kCAK1BpI,EAAAA,EAAAA,KAACkI,EAAAA,EAAI,CACDC,KAAMF,EACF,oXACA,8WACJG,UAAU,8BAOtC,C,8EC7NaG,EAAsB,SAACC,GAA6B,IAADC,EACtDC,EAAiD,QAA5BD,EAAGD,EAAWhB,sBAAc,IAAAiB,OAAA,EAAzBA,EAA2BE,cACnDC,EAAmBC,aAAaC,QAAQ,yBACxCvI,EAAcO,MAEpB,GAAI8H,EAAkB,CAClB,IAEMG,EAFuBC,KAAKC,MAAML,GAEZM,QAAO,SAACC,GAEhC,QACIX,EAAWY,eAnBL,SAAC7G,EAAc8G,EAAmBC,GACpD,IAAMC,EAAazI,IAAOyB,EAAM,cAAc,GACxCiH,EAAkB1I,IAAOuI,EAAW,cAAc,GAClDI,EAAgB3I,IAAOwI,EAAS,cAAc,GAEpD,OAAOC,EAAWG,UAAUF,EAAiBC,EAAe,KAAM,KACtE,CAciBE,CAAcnB,EAAWY,aAAcD,EAAKtB,SAAUsB,EAAKrB,aAM5DU,EAAWoB,cAAgBT,EAAKnB,OAASQ,EAAWoB,kBAMpDlB,KAEIS,EAAK7B,QAAQqB,cAAckB,SAASnB,IACnCS,EAAKvB,gBAAkBuB,EAAKvB,eAAee,cAAckB,SAASnB,QAQzC,sGAA9BF,EAAWsB,iBACXhJ,IAAOP,EAAa,cAAc,GAAMwJ,SAASjJ,IAAOqI,EAAKrB,OAAQ,cAAc,OAMrD,uEAA9BU,EAAWsB,iBACXhJ,IAAOP,EAAa,cAAc,GAAMyJ,QAAQlJ,IAAOqI,EAAKrB,OAAQ,cAAc,OAM1F,IAEA,OAAIiB,EAAckB,OAAS,EAChBlB,EAEA,EAEf,CACJ,C,4PClEamB,EAAW,WACpB,IAAMC,EAAY,IAAIC,gBAAgBC,OAAOC,SAAS/C,QAEhDS,EAAOmC,EAAUI,IAAI,QACrBC,EAASL,EAAUI,IAAI,UACvBhI,EAAO4H,EAAUI,IAAI,QACrBE,EAASN,EAAUI,IAAI,UACvBG,EAAUP,EAAUI,IAAI,WAY9B,MAAO,CAAEI,QARoB,CACzBf,aAAc5B,GAAc,GAC5BR,eAAgBgD,GAAkB,GAClCpB,aAAc7G,GAAc,GAC5BuH,eAAgBW,GAAkB,GAClCG,qBAAsBF,GAAoB,IAG5BG,SAXDV,EAAUI,IAAI,YAWHO,WAVTX,EAAUI,IAAI,cAWrC,ECpBaQ,EAAW,SAACvC,EAAyBsC,EAAqBD,GACnE,IAAMV,EAAY,IAAIC,gBAElB5B,EAAWoB,cACXO,EAAUa,IAAI,OAAQxC,EAAWoB,cAGjCpB,EAAWhB,gBACX2C,EAAUa,IAAI,SAAUxC,EAAWhB,gBAGnCgB,EAAWY,cACXe,EAAUa,IAAI,OAAQxC,EAAWY,cAGjCZ,EAAWsB,gBACXK,EAAUa,IAAI,SAAUxC,EAAWsB,gBAGnCtB,EAAWoC,sBACXT,EAAUa,IAAI,UAAWxC,EAAWoC,sBAGpCE,GAAcA,EAAa,GAC3BX,EAAUa,IAAI,aAAcC,OAAOH,IAEnCD,GAAYA,EAAW,GACvBV,EAAUa,IAAI,WAAYC,OAAOJ,IAGrC,IAAMK,EAAcf,EAAUgB,WAG9B,MAFc,SAAA7H,OAAY4H,EAG9B,E,4DCnCA,EAA8B,iCAA9B,EAA0E,8BAA1E,EAAqH,gCAArH,EAAgK,8BAAhK,EAA0M,+BAA1M,EAAuT,kCAAvT,EAAiZ,gCAAjZ,EAA8b,gCAA9b,EAAye,8BAAze,EAAuhB,mCAAvhB,EAAwkB,iCAAxkB,EAAonB,8BAApnB,EAAkqB,mC,UCwB5pBzD,EAAY,SAAClF,GACf,IAAMmF,EAAQ5G,MAEd,OADgBA,IAAOyB,EAAM,cACjBoF,cAAcD,EAAO,OACtB,qEAEA,4HAEf,EA+HA,EA7HiD,SAAHlI,GAAmG,IAA7FoI,EAAcpI,EAAdoI,eAAgBC,EAAQrI,EAARqI,SAAUC,EAAMtI,EAANsI,OAAQC,EAAYvI,EAAZuI,aAAcC,EAAIxI,EAAJwI,KAAMV,EAAO9H,EAAP8H,QAASW,EAAiBzI,EAAjByI,kBAAmBmD,EAAG5L,EAAH4L,IAElIxK,GAAgCC,EAAAA,EAAAA,WAAkB,GAAME,GAAAC,EAAAA,EAAAA,GAAAJ,EAAA,GAAjDyK,EAAQtK,EAAA,GAAEuK,EAAWvK,EAAA,GACtBwK,GAAWC,EAAAA,EAAAA,OAEjBrK,EAAAA,EAAAA,YAAU,WACV,GAAG,CAACkK,IAEJ,IAAMI,EAAW,WACjBH,GAAaD,EACb,EAiBA,OACI1L,EAAAA,EAAAA,MAAA,OAAKoC,UAAWC,EAAcjC,SAAA,EAC1BJ,EAAAA,EAAAA,MAAA,OAAKoC,UAAWC,EAAYR,QAASiK,EAAS1L,SAAA,CACzC8H,GAAYC,IAAUnI,EAAAA,EAAAA,MAAA,OAAKoC,UAAWC,EAAajC,SAAA,EAChDC,EAAAA,EAAAA,KAACkI,EAAAA,EAAI,CACDC,KAAMV,EAAUK,GAChBM,UAAU,mCAES,uEAAtBX,EAAUK,IACP9H,EAAAA,EAAAA,KAACqI,EAAAA,IAAO,CAAChE,MAAM,QAAQwC,KAAK,OAAOC,MAAO,CAAEE,WAAY,OAAQD,YAAa,WAC7E/G,EAAAA,EAAAA,KAACsI,EAAAA,IAAO,CAACjE,MAAM,MAAMwC,KAAK,OAAOC,MAAO,CAAEE,WAAY,OAAQD,YAAa,cAGnFpH,EAAAA,EAAAA,MAAA,MAAIoC,UAAWC,EAAajC,SAAA,EACxBJ,EAAAA,EAAAA,MAAA,MAAAI,SAAA,EACIC,EAAAA,EAAAA,KAACkI,EAAAA,EAAI,CACDC,KAAM,uCACNC,UAAU,6BAEdpI,EAAAA,EAAAA,KAAA,OAAK+B,UAAWC,EAAWjC,UACvBC,EAAAA,EAAAA,KAACkI,EAAAA,EAAI,CACDC,KAAMH,EACNI,UAAU,0BAGlBpI,EAAAA,EAAAA,KAACkI,EAAAA,EAAI,CACDC,KAAM,2BACNC,UAAU,6BAEdpI,EAAAA,EAAAA,KAAA,OAAK+B,UAAWC,EAAWjC,UACvBC,EAAAA,EAAAA,KAACkI,EAAAA,EAAI,CACDC,KAAMb,EACNc,UAAU,6BAItBzI,EAAAA,EAAAA,MAAA,MAAAI,SAAA,EACIJ,EAAAA,EAAAA,MAAA,OAAKoC,UAAWC,EAAYjC,SAAA,EACxBC,EAAAA,EAAAA,KAACkI,EAAAA,EAAI,CACDC,KAAM,sEACNC,UAAU,kCAEdpI,EAAAA,EAAAA,KAAA,OAAK+B,UAAWC,EAAejC,UAC3BC,EAAAA,EAAAA,KAACkI,EAAAA,EAAI,CACDC,KAAMN,EACNO,UAAU,0BAItBzI,EAAAA,EAAAA,MAAA,OAAKoC,UAAWC,EAAYjC,SAAA,EACxBC,EAAAA,EAAAA,KAACkI,EAAAA,EAAI,CACDC,KAAM,wFACNC,UAAU,kCAEdpI,EAAAA,EAAAA,KAAA,OAAK+B,UAAWC,EAAejC,UAC3BC,EAAAA,EAAAA,KAACkI,EAAAA,EAAI,CACDC,KAAML,EACNM,UAAU,0BAItBpI,EAAAA,EAAAA,KAACkI,EAAAA,EAAI,CACDC,KAAMF,EACF,oXACA,8WACJG,UAAU,4CAKzBiD,IACGrL,EAAAA,EAAAA,KAAA,OAAK+B,UAAWC,EAAajC,UACzBJ,EAAAA,EAAAA,MAAA,OAAKoC,UAAWC,EAAWjC,SAAA,EACvBC,EAAAA,EAAAA,KAAA,UAAQ+B,UAAWC,EAAiBR,QAASiK,EAAS1L,UAClDC,EAAAA,EAAAA,KAAC0L,EAAAA,EAAe,CAACC,KAAMC,EAAAA,IAAS/E,KAAK,KAAKxC,MAAM,aAEpDrE,EAAAA,EAAAA,KAAC6L,EAAAA,EAAI,CAAOjE,eAAAA,EAAgBC,SAAAA,EAAUC,OAAAA,EAAQC,aAAAA,EAAcC,KAAAA,EAAMV,QAAAA,EAASW,kBAAAA,EAAmBmD,IAAAA,KAC9FpL,EAAAA,EAAAA,KAAA,OAAK+B,UAAWC,EAAWjC,UACvBJ,EAAAA,EAAAA,MAAA,OAAKoC,UAAWC,EAAgBjC,SAAA,EAC5BC,EAAAA,EAAAA,KAACkI,EAAAA,EAAI,CACDC,KAAM,gHACNC,UAAU,0BAEdpI,EAAAA,EAAAA,KAAA,OACI+B,UAAWC,EACXR,QApGX,WACjB+J,EAAS,SAADjI,OAAU8H,GAAO,CACrBlH,MAAO,CACH0D,eAAAA,EACAC,SAAAA,EACAC,OAAAA,EACAC,aAAAA,EACAC,KAAAA,EACAV,QAAAA,EACAW,kBAAAA,EACAmD,IAAAA,IAGZ,EAuFsDrL,UAEtBC,EAAAA,EAAAA,KAAC0L,EAAAA,EAAe,CAACC,KAAMG,EAAAA,IAAUhF,MAAO,CAAE1C,SAAU,QAAUC,MAAM,wBASxG,EC7JA,EAAoC,sCAApC,EAAqF,6BAArF,EAA4H,4BAA5H,EAAiK,2BAAjK,EAAsM,4BAAtM,EAA6O,6BCgE7O,EAtDgD,SAAJ7E,GAA0D,IAAnDuM,EAAUvM,EAAVuM,WAAYC,EAAWxM,EAAXwM,YAAaC,EAAYzM,EAAZyM,aAAkBzM,EAAJsC,KAuBxF,OACEnC,EAAAA,EAAAA,MAAA,OAAKoC,UAAWC,EAAoBjC,SAAA,EAClCC,EAAAA,EAAAA,KAAA,UACE+B,UAAS,GAAAuB,OAAKtB,EAAS,KAAAsB,OAAItB,GAC3BR,QAAS,kBAAMyK,EAAaD,EAAc,EAAE,EAC5CE,SAA0B,IAAhBF,EAAkBjM,SAC7B,OAGDC,EAAAA,EAAAA,KAAA,OAAK+B,UAAWC,EAAWjC,SA/BR,WACrB,IAAMoM,EAAc,GAGhBC,EAAYC,KAAKC,IAAI,EAAGN,EAFP,GAGjBO,EAAUF,KAAKG,IAAIT,EAAYC,EAHd,GAKjBA,GALiB,IAMnBO,EAAUF,KAAKG,IAAIC,EAAsBV,IAGvCC,GAAeD,EATE,IAUnBK,EAAYC,KAAKC,IAAIP,EAAaU,EAAkB,IAGtD,IAAK,IAAIC,EAAON,EAAWM,GAAQH,EAASG,IAC1CP,EAAYQ,KAAKD,GAGnB,OAAOP,CACT,CAYOS,GAAiBC,KAAI,SAAAH,GAAI,OACxB1M,EAAAA,EAAAA,KAAA,UAEEwB,QAAS,kBAAMyK,EAAaS,EAAK,EACjC3K,UAAWiK,IAAgBU,EAAO1K,EAAWA,EAAUjC,SAEtD2M,GAJIA,EAKE,OAGb1M,EAAAA,EAAAA,KAAA,UACE+B,UAAS,GAAAuB,OAAKtB,EAAU,KAAAsB,OAAItB,GAC5BR,QAAS,kBAAMyK,EAAaD,EAAc,EAAE,EAC5CE,SAAUF,IAAgBD,EAAWhM,SACtC,QAKP,E,2EC9DA,IAAgB,cAAgB,kCAAkC,YAAc,gCAAgC,OAAS,2BAA2B,SAAW,6BAA6B,KAAO,yBAAyB,aAAe,iCAAiC,OAAS,4BCwRrR,GA/P6B,WACzB,IAAM+M,GAAWC,EAAAA,EAAAA,KACXxB,GAAWC,EAAAA,EAAAA,MACXwB,GAAaC,EAAAA,EAAAA,QAA8B,MACjDrM,GAAuBC,EAAAA,EAAAA,UAAiBC,OAAjCG,GAA0CD,EAAAA,EAAAA,GAAAJ,EAAA,GAA9B,GACbuC,GAAU+J,EAAAA,EAAAA,IAAYC,EAAAA,IACtBC,GAAcF,EAAAA,EAAAA,IAAYG,EAAAA,IAC1BxC,GAAWqC,EAAAA,EAAAA,IAAYI,EAAAA,IAEvBC,GAAYL,EAAAA,EAAAA,IAAYM,EAAAA,IAC9B/L,GAA0CZ,EAAAA,EAAAA,UAAmB0M,GAAU5L,GAAAX,EAAAA,EAAAA,GAAAS,EAAA,GAAhEgM,EAAa9L,EAAA,GAAE+L,EAAgB/L,EAAA,GACtCgM,GAA0C9M,EAAAA,EAAAA,UAAmB,IAAG+M,GAAA5M,EAAAA,EAAAA,GAAA2M,EAAA,GAAzDE,EAAaD,EAAA,GAAEE,EAAgBF,EAAA,GACtCG,GAA0ClN,EAAAA,EAAAA,WAAkB,GAAMmN,GAAAhN,EAAAA,EAAAA,GAAA+M,EAAA,GAA3DE,EAAaD,EAAA,GAAEE,EAAgBF,EAAA,GACtCG,GAA4CtN,EAAAA,EAAAA,WAAkB,GAAMuN,GAAApN,EAAAA,EAAAA,GAAAmN,EAAA,GAA7DpI,EAAcqI,EAAA,GAAEC,EAAiBD,EAAA,GAClCE,EAAgB,CAClB,CAAEjO,MAAO,qEAAekD,MAAO,sEAC/B,CAAElD,MAAO,oGAAqBkD,MAAO,qGACrC,CAAElD,MAAO,sEAAgBkD,MAAO,yEAIpCpC,EAAAA,EAAAA,YAAU,WACN,IAAMoN,EAAqB,SAACC,GACpBxB,EAAWyB,UAAYzB,EAAWyB,QAAQC,SAASF,EAAMhI,UACzD0H,GAAiB,GACjBG,GAAkB,GAE1B,EAEA,OADAM,SAASC,iBAAiB,QAASL,GAC5B,WACHI,SAASE,oBAAoB,QAASN,EAC1C,CACJ,GAAG,CAACvB,EAAYjH,KAEhB5E,EAAAA,EAAAA,YAAU,WACNkN,GAAkB,EACtB,GAAG,CAACR,IAEJ,IAAAiB,GAAyCC,EAAAA,EAAAA,IAAqB,CAC1DC,cAAe,CACXpF,aAAc,CAAEvJ,MAAO,GAAIkD,MAAO,IAClCiE,eAAgB,GAChB4B,aAAc,GACdU,eAAgB,CAAEzJ,MAAO,GAAIkD,MAAO,IACpCqH,qBAAsB,MANtB5G,EAAO8K,EAAP9K,QAASiL,EAAYH,EAAZG,aAAcC,EAAKJ,EAALI,MAUzBC,EAAQ,eAAA3P,GAAA4P,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,EAAOC,GAAiB,IAAAC,EAAA3E,EAAA4E,EAAAC,EAAAC,EAAA,OAAAP,EAAAA,EAAAA,KAAAQ,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OASpC,GAPGlF,EAAa,EACX4E,EAAyB,CAC3B9F,aAAc4F,EAAK5F,aAAavJ,MAChCmH,eAAgBgI,EAAKhI,eACrB4B,aAAcoG,EAAKpG,aACnBU,eAAgB0F,EAAK1F,eAAezJ,MACpCuK,qBAAsBiD,EAAcoC,KAAK,OAGxC7C,EAAY,CAAD0C,EAAAE,KAAA,gBAAAF,EAAAE,KAAA,GACczH,EAAAA,EAAAA,GAAoBmH,GAAW,KAAD,EAAvC,OAAXC,EAAWG,EAAAI,KAAAJ,EAAAE,KAAA,EACHlD,GAASqD,EAAAA,EAAAA,IAAqBR,IAAc,KAAD,EAAzDF,EAAKK,EAAAI,KAAAJ,EAAAE,KAAA,wBAAAF,EAAAE,KAAA,GAESlD,GAASsD,EAAAA,EAAAA,IAAcV,IAAY,KAAD,GAAhDD,EAAKK,EAAAI,KAAA,QAQR,OALG9C,GAAeqC,EAAMY,QAAQC,iBAAiBrG,OAAS,IACvDa,EAAa,IAEZsC,GAAeqC,EAAMY,QAAQpG,OAAS,IACvCa,EAAa,GAChBgF,EAAAE,KAAA,GAEoBjF,EAAS2E,EAAW5E,EAAYD,GAAU,KAAD,GAAxD+E,EAAME,EAAAI,KACZ3E,EAASqE,GAETV,IACApB,EAAiB,IACjBI,GAAiB,GAAO,yBAAA4B,EAAAS,OAAA,GAAAhB,EAAA,KAC3B,gBA/BaiB,GAAA,OAAAhR,EAAAiR,MAAA,KAAAC,UAAA,KAyDd,OACI1Q,EAAAA,EAAAA,KAAA,OAAK+B,UAAWC,GAAE2O,UAAU5Q,UACxBJ,EAAAA,EAAAA,MAAA,QAAMoC,UAAWC,GAAE4O,YAAazB,SAAUF,EAAaE,GAAUpP,SAAA,EAC7DJ,EAAAA,EAAAA,MAAA,OAAKoC,UAAWC,GAAE6O,cAAc9Q,SAAA,EAC5BJ,EAAAA,EAAAA,MAAA,OAAKoC,UAAWC,GAAE8O,kBAAkB/Q,SAAA,EAChCC,EAAAA,EAAAA,KAACkI,EAAAA,EAAI,CACDC,KAAM,gEACNC,UAAU,gBAEdpI,EAAAA,EAAAA,KAAC+Q,EAAAA,GAAU,CACP/M,QAASA,EACThB,KAAK,eACLgO,MAAO,CAAE9N,UAAU,GACnB+N,OAAQ,SAAA3P,GAAA,IAAA4P,EAAA5P,EAAG6P,MAAQ7O,EAAQ4O,EAAR5O,SAAUjC,EAAK6Q,EAAL7Q,MAAkBiB,EAAV8P,WAAU,OAC/CpR,EAAAA,EAAAA,KAACqR,GAAAA,EAAW,CACRhR,MAAOA,EACPC,aAAc,SAACiG,GACXjE,EAASiE,EACb,EACAvD,KAAK,eACLjB,UAAU,aACVkB,YAAY,4EACZC,UAAU,EACVC,QAASA,GACX,QAIVxD,EAAAA,EAAAA,MAAA,OAAKoC,UAAWC,GAAE8O,kBAAkB/Q,SAAA,EAChCC,EAAAA,EAAAA,KAACkI,EAAAA,EAAI,CACDC,KAAM,sGACNC,UAAU,gBAEdpI,EAAAA,EAAAA,KAAC+Q,EAAAA,GAAU,CACP/M,QAASA,EACThB,KAAK,iBACLgO,MAAO,CAAE9N,UAAU,GACnB+N,OAAQ,SAAAK,GAAA,IAAAC,EAAAD,EAAGH,MAAQ7O,EAAQiP,EAARjP,SAAUjC,EAAKkR,EAALlR,MAAQ+Q,EAAUE,EAAVF,WAAU,OAC/CpR,EAAAA,EAAAA,KAACwR,GAAAA,GAASrN,EAAAA,EAAAA,GAAA,CACN9D,MAAOA,EACP2D,QAASA,EACTjC,UAAU,aACVzB,aAAc,SAACgG,GACX,IAAMC,EAAWD,EAAEE,OAAOnG,MAC1BiC,EAASiE,EACT,EACJU,MAAOmK,EAAWnK,OACdC,GAAAA,EAAOM,gBACb,QAIV7H,EAAAA,EAAAA,MAAA,OAAKoC,UAAWC,GAAE8O,kBAAkB/Q,SAAA,EAChCC,EAAAA,EAAAA,KAACkI,EAAAA,EAAI,CACDC,KAAM,8CACNC,UAAU,gBAEdpI,EAAAA,EAAAA,KAAC+Q,EAAAA,GAAU,CACP/M,QAASA,EACThB,KAAK,eACLgO,MAAO,CAAE9N,UAAU,GACnB+N,OAAQ,SAAAQ,GAAA,IAAWnP,EAAQmP,EAAhBN,MAAQ7O,SAAQ,OAC3BtC,EAAAA,EAAAA,KAAC0R,GAAAA,EAAQ,CACLvR,WAAW,aACXC,qBAAqB,EACrBC,MAAOY,EAAaoB,SACpB/B,aAAc,SAACiG,GACfjE,EAASiE,EACT,GACF,QAIV5G,EAAAA,EAAAA,MAAA,OAAKoC,UAAWC,GAAE8O,kBAAkB/Q,SAAA,EAChCC,EAAAA,EAAAA,KAACkI,EAAAA,EAAI,CACDC,KAAM,gEACNC,UAAU,gBAEdpI,EAAAA,EAAAA,KAAC+Q,EAAAA,GAAU,CACP/M,QAASA,EACThB,KAAK,iBACLgO,MAAO,CAAE9N,UAAU,GACnB+N,OAAQ,SAAAU,GAAA,IAAAC,EAAAD,EAAGR,MAAQ7O,EAAQsP,EAARtP,SAAUjC,EAAKuR,EAALvR,MAAkBsR,EAAVP,WAAU,OAC/CpR,EAAAA,EAAAA,KAACqR,GAAAA,EAAW,CACRhR,MAAOA,EACPC,aAAc,SAACiG,GACXjE,EAASiE,EACb,EACAvD,KAAK,iBACLjB,UAAU,aACVkB,YAAY,4EACZC,UAAU,EACVC,QAASmL,GACX,OAITlB,IACDzN,EAAAA,EAAAA,MAAA,OAAK4B,IAAKyL,EAAYjL,UAAWC,GAAE8O,kBAAkB/Q,SAAA,EACjDC,EAAAA,EAAAA,KAACkI,EAAAA,EAAI,CACDC,KAAM,wFACNC,UAAU,gBAEdpI,EAAAA,EAAAA,KAACwR,GAAAA,GAASrN,EAAAA,EAAAA,GAAA,CACNpC,UAAW,YACXzB,aAvHC,SAACgG,GACtB,IAAM6B,EAAO7B,EAAEE,OAAOnG,MAChBwR,EAAgBtE,EAAUrE,QAAO,SAAC9B,GAAa,OAAKA,EAAMyC,SAAS1B,EAAK,IAC1EoF,EAAUtD,OAAS,EACnByD,EAAiBmE,GAEjBnE,EAAiB,CAACvF,GAE1B,EAgHwB1B,QA9GM,WAC1ByH,GAAiB,EACrB,EA6GwBnI,eAAgBA,GACZmB,GAAAA,EAAOK,SAEd0G,IACGjO,EAAAA,EAAAA,KAAA,MAAI+B,UAAWC,GAAE8P,OAAO/R,SACnB0N,EAAcZ,KAAI,SAACzF,EAAO2K,GAAK,OAC5B/R,EAAAA,EAAAA,KAAA,MAAgB+B,UAAWgQ,IAAUtE,EAAcxD,OAAS,EAAIjI,GAAEgQ,aAAehQ,GAAEiQ,KAAKlS,UACpFJ,EAAAA,EAAAA,MAAA,SAAAI,SAAA,EACIC,EAAAA,EAAAA,KAAA,SACI8B,KAAK,WACLC,UAAWC,GAAEkQ,SACbC,QAAStE,EAAchE,SAASzC,GAChC9E,SAAU,kBA/I1B,SAAC8E,GACrByG,EAAchE,SAASzC,IACvB0G,EAAiBD,EAAc3E,QAAO,SAACkJ,GAAI,OAAKA,IAAShL,CAAK,KAC9DiH,GAAkB,KAElBP,EAAiB,GAADxK,QAAA+O,EAAAA,EAAAA,GAAKxE,GAAa,CAAEzG,KACpCiH,GAAkB,GAE1B,CAuI4DiE,CAAoBlL,EAAM,IAE7CA,MARAA,EAUJ,SAMpBgG,GAAeS,EAAc5D,OAAS,IACvCtK,EAAAA,EAAAA,MAAA,OAAKoC,UAAWC,GAAE8O,kBAAkB/Q,SAAA,EAChCC,EAAAA,EAAAA,KAACkI,EAAAA,EAAI,CACDC,KAAM,2JACNC,UAAU,gBAEdpI,EAAAA,EAAAA,KAACkI,EAAAA,EAAI,CACDC,KAAM0F,EAAcoC,KAAK,MACzB7H,UAAU,sBAKtBpI,EAAAA,EAAAA,KAAA,OAAK+B,UAAWC,GAAEuQ,OAAOxS,UACrBC,EAAAA,EAAAA,KAACwS,GAAAA,EAAM,CAACrK,KAAK,wFAAkBsK,SAAS,mBAK5D,ECtRA,GAA2B,2BAA3B,GAAmE,6BC8B7DC,GAAa,SAACjD,EAAuBkD,GACvC,OAAOC,MAAMC,KAAK,CAAE5I,OAAQoC,KAAKyG,KAAKrD,EAAMxF,OAAS0I,KAAc,SAACI,EAAGhB,GAAK,OACxEtC,EAAMuD,MAAMjB,EAAQY,GAAYZ,EAAQ,GAAKY,EAAU,GAE/D,EAqOA,GAnO2B,WACvB,IAAMM,EAAW5I,OAAO6I,YACxBtS,GAA0CC,EAAAA,EAAAA,UAAS,CAAC,GAAEE,GAAAC,EAAAA,EAAAA,GAAAJ,EAAA,GAA/CuS,EAAapS,EAAA,GAAEqS,EAAgBrS,EAAA,GAChC+L,GAAWC,EAAAA,EAAAA,KACXxB,GAAWC,EAAAA,EAAAA,MACX6H,GAAYnG,EAAAA,EAAAA,IAAYG,EAAAA,IACxBiG,GAAiBpG,EAAAA,EAAAA,IAAYqG,EAAAA,IAC7BjD,GAAmBpD,EAAAA,EAAAA,IAAYsG,EAAAA,IAC/B1I,GAAaoC,EAAAA,EAAAA,IAAYuG,EAAAA,IACzB5I,GAAWqC,EAAAA,EAAAA,IAAYI,EAAAA,IAIzBoG,GAFa/P,EAAAA,EAAAA,eAAc,CAAEG,SAAU,IAAKF,SAAU,OAE5B,EAAI,EAC5B+P,EAAmBrD,GAAoBA,EAAiBrG,OAAS,EAAIoC,KAAKyG,KAAKxC,EAAiBrG,OAASyJ,GAAgB,EACzHE,EAAiBN,GAAkBA,EAAerJ,OAAS,EAAIoC,KAAKyG,KAAKQ,EAAerJ,OAASyJ,GAAgB,EAEvHjS,GAA8DZ,EAAAA,EAAAA,UAAS,GAAEc,GAAAX,EAAAA,EAAAA,GAAAS,EAAA,GAAlEoS,EAAuBlS,EAAA,GAAEmS,EAA0BnS,EAAA,GAC1DgM,GAA0D9M,EAAAA,EAAAA,UAAS,GAAE+M,GAAA5M,EAAAA,EAAAA,GAAA2M,EAAA,GAA9DoG,EAAqBnG,EAAA,GAAEoG,EAAwBpG,EAAA,GAEhDqG,EAAqBvB,GAAWpC,GAAoB,GAAIoD,GACxDQ,EAAmBxB,GAAWY,GAAkB,GAAII,GACpDS,EAAqBF,EAAmBJ,IAA4B,GACpEO,EAAmBF,EAAiBH,IAA0B,IAEpE5S,EAAAA,EAAAA,YAAU,WACNiS,EAAiB,CACbiB,UAAoB,GAAA/Q,OAAT+P,EAAeJ,EAAW,GAAYA,EAAW,GAAK,GAA1B,OAE/C,GAAG,CAACI,EAAWJ,KAEf9R,EAAAA,EAAAA,YAAU,WACN,IAAImT,EACAC,EACJzH,GAAS0H,EAAAA,EAAAA,OACT1H,GAAS2H,EAAAA,EAAAA,OACTX,EAA2B,GAC3BE,EAAyB,GAEzB,IAAMU,EAA4B,WAC9B,IAAM9L,EAAmBC,aAAaC,QAAQ,yBACxCvI,EAAcO,MACpB,GAAI8H,EAAkB,CAClB,IAEM+L,EAFwB3L,KAAKC,MAAML,GAEAM,QAAO,SAAC0L,GAI7C,OAHgB9T,IAAO8T,EAAK9M,OAAQ,cACP+M,KAAKtU,EAAa,SAExB,GAAKqU,EAAK3M,iBACrC,IAEAY,aAAaiM,QAAQ,wBAAyB9L,KAAK+L,UAAUJ,IAE7D,IAAMK,EAAgBL,EAAWzL,QAAO,SAAC0L,GACrC,IACMK,EADUnU,IAAO8T,EAAK9M,OAAQ,cACP+M,KAAKtU,EAAa,QAE/C,OAAO0U,GAAgB,GAAKA,GAAgB,CAChD,IAEA,OADAnI,GAASoI,EAAAA,EAAAA,IAAmBF,IACrBA,CACX,CACJ,EAEMG,EAAqB,eAAA3V,GAAA4P,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,EAAO5E,EAAsBE,EAAyBC,GAAyB,IAAAlB,EAAApC,EAAA4B,EAAAU,EAAAc,EAAAwK,EAAAC,EAAA3F,EAAA,OAAAL,EAAAA,EAAAA,KAAAQ,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAO5C,GANvDpG,EAAee,EAAQf,aACvBpC,EAAiBmD,EAAQnD,eACzB4B,EAAeuB,EAAQvB,aACvBU,EAAiBa,EAAQb,eACzBc,EAAuBD,EAAQC,qBAC/BwK,EAAiBvK,EAAWyK,OAAOzK,GAAY,EAC/CwK,EAAmBvK,EAAawK,OAAOxK,GAAc,EAEtC,KAAjBlB,GAA0C,KAAnBpC,GAA0C,KAAjB4B,GAA0C,KAAnBU,GAAkD,KAAzBc,EAA2B,CAAAkF,EAAAE,KAAA,aAEvHqD,EAAU,CAADvD,EAAAE,KAAA,gBAAAF,EAAAE,KAAA,GACSlD,GAASyI,EAAAA,EAAAA,OAAe,SAA1ChB,EAASzE,EAAAI,MACKG,SAAWkE,EAAUlE,QAAQiD,eAAerJ,OAAS,GAC/D6C,GAAS0I,EAAAA,EAAAA,IAAaJ,GAAkC,IACxDpB,EAAyBoB,EAAiBA,EAAiB,EAAI,KAE/DtI,GAAS0I,EAAAA,EAAAA,IAAa,IACtBxB,EAAyB,IAC5BlE,EAAAE,KAAA,kBAEDuE,EAAYG,MACKH,EAAUtK,OAAS,GAChC6C,GAAS0I,EAAAA,EAAAA,IAAaJ,GAAkC,IACxDpB,EAAyBoB,EAAiBA,EAAiB,EAAI,KAE/DtI,GAAS0I,EAAAA,EAAAA,IAAa,IACtBxB,EAAyB,IAC5B,QAAAlE,EAAAE,KAAA,iBAI+G,GAA9GN,EAAyB,CAAE9F,aAAAA,EAAcpC,eAAAA,EAAgB4B,aAAAA,EAAcU,eAAAA,EAAgBc,qBAAAA,IACzFyI,EAAU,CAADvD,EAAAE,KAAA,gBAAAF,EAAAE,KAAA,GACSlD,GAASyI,EAAAA,EAAAA,OAAe,QAOzC,OAPDhB,EAASzE,EAAAI,MACKG,SAAWkE,EAAUlE,QAAQiD,eAAerJ,OAAS,GAC/D6C,GAAS0I,EAAAA,EAAAA,IAAaJ,GAAkC,IACxDpB,EAAyBoB,EAAiBA,EAAiB,EAAI,KAE/DtI,GAAS0I,EAAAA,EAAAA,IAAa,IACtBxB,EAAyB,IAC5BlE,EAAAE,KAAA,GAEmBlD,GAASsD,EAAAA,EAAAA,IAAcV,IAAW,SAAtD4E,EAAWxE,EAAAI,MACKG,SAAWiE,EAAYjE,QAAQC,iBAAiBrG,OAAS,GACrE6C,GAAS2I,EAAAA,EAAAA,IAAeJ,GAAsC,IAC9DvB,EAA2BuB,EAAmBA,EAAmB,EAAI,KAErEvI,GAAS2I,EAAAA,EAAAA,IAAe,IACxB3B,EAA2B,IAC9BhE,EAAAE,KAAA,iBASA,OAPDuE,EAAYG,MACKH,EAAUtK,OAAS,GAChC6C,GAAS0I,EAAAA,EAAAA,IAAaJ,GAAkC,IACxDpB,EAAyBoB,EAAiBA,EAAiB,EAAI,KAE/DtI,GAAS0I,EAAAA,EAAAA,IAAa,IACtBxB,EAAyB,IAC5BlE,EAAAE,KAAA,IAEmBzH,EAAAA,EAAAA,GAAoBmH,GAAW,KAAD,GAAvC,OAAX4E,EAAWxE,EAAAI,KAAAJ,EAAAE,KAAA,GACLlD,GAASqD,EAAAA,EAAAA,IAAqBmE,IAAc,KAAD,GAC7CA,GAAeA,EAAYrK,OAAS,GACpC6C,GAAS2I,EAAAA,EAAAA,IAAeJ,GAAsC,IAC9DvB,EAA2BuB,EAAmBA,EAAmB,EAAI,KAErEvI,GAAS2I,EAAAA,EAAAA,IAAe,IACxB3B,EAA2B,IAC9B,yBAAAhE,EAAAS,OAAA,GAAAhB,EAAA,KAGZ,gBAxE0BiB,EAAAkF,EAAAC,GAAA,OAAAnW,EAAAiR,MAAA,KAAAC,UAAA,KA0E3BkF,EAA0C1L,IACtCiL,EADWS,EAAPjL,QAAiBiL,EAAR/K,SAAoB+K,EAAV9K,WAG/B,GAAG,CAACgC,EAAUuG,KAGdlS,EAAAA,EAAAA,YAAU,WACN,IAAM0U,EAAY3L,IACZ0F,EAAS7E,EAAS8K,EAAUlL,QAASG,EAAYD,GACvDiL,QAAQC,IAAI,+NAAiDnG,GAC7DrE,EAASqE,EACb,GAAG,CAAC/E,EAAUC,EAAYS,IAE1B,IAAMyK,EAAmB,SAACC,EAAmBnU,GAC5B,WAATA,GACAgS,EAA2BmC,EAAY,GACvCnJ,GAAS2I,EAAAA,EAAAA,IAAeQ,KACR,SAATnU,IACPkS,EAAyBiC,EAAY,GACrCnJ,GAAS0I,EAAAA,EAAAA,IAAaS,IAE9B,EAEA,OACIjW,EAAAA,EAAAA,KAAA,WAAS+B,UAAWC,GAAY8E,MAAOqM,EAAcpT,UACjDC,EAAAA,EAAAA,KAACkW,EAAAA,EAAS,CAAAnW,UACNJ,EAAAA,EAAAA,MAAA,OAAAI,SAAA,CACKuT,GAAkBA,EAAerJ,OAAS,IACvCtK,EAAAA,EAAAA,MAAA,OAAAI,SAAA,EACIC,EAAAA,EAAAA,KAACkI,EAAAA,EAAI,CACDC,KAAI,oQAAA7E,OAAyDgQ,EAAerJ,OAAM,kBAClF7B,UAAU,oBAEbgM,IAAoBpU,EAAAA,EAAAA,KAAA,MAAI+B,UAAWC,GAAajC,SAC5CqU,EAAiBvH,KAAI,SAAC+H,GAAiB,OACpC5U,EAAAA,EAAAA,KAAA,MAAAD,UACIC,EAAAA,EAAAA,KAACmW,GAAWhS,EAAAA,EAAAA,GAAA,GAAKyQ,KADZA,EAAKxJ,IAET,OAGbpL,EAAAA,EAAAA,KAAA,OAAAD,SACK6T,EAAiB,IAAM5T,EAAAA,EAAAA,KAACoW,EAAU,CAC/BrK,WAAY6H,EACZ5H,YAAa+H,EAAwB,EACrC9H,aAAc,SAACS,GAAI,OAAKsJ,EAAiBtJ,EAAM,OAAO,SAIrE4G,GAA4C,IAA1BA,EAAerJ,SAC9BjK,EAAAA,EAAAA,KAAA,OAAAD,UACIC,EAAAA,EAAAA,KAACkI,EAAAA,EAAI,CACDC,KAAM,sTACNC,UAAU,uBAGtBzI,EAAAA,EAAAA,MAAA,OAAAI,SAAA,EACIC,EAAAA,EAAAA,KAACkI,EAAAA,EAAI,CACDC,KAAM,sJACNC,UAAU,qBAEdpI,EAAAA,EAAAA,KAACqW,GAAU,QAEnBrW,EAAAA,EAAAA,KAAA,OAAAD,SACCuQ,GAAoBA,EAAiBrG,OAAS,IAC3CtK,EAAAA,EAAAA,MAAAuC,EAAAA,SAAA,CAAAnC,SAAA,CACMoU,IAAsBnU,EAAAA,EAAAA,KAAA,MAAI+B,UAAWC,GAAajC,SAC/CoU,EAAmBtH,KAAI,SAAC+H,GAAiB,OACtC5U,EAAAA,EAAAA,KAAA,MAAAD,UACIC,EAAAA,EAAAA,KAACmW,GAAWhS,EAAAA,EAAAA,GAAA,GAAKyQ,KADZA,EAAKxJ,IAET,OAGbpL,EAAAA,EAAAA,KAAA,OAAAD,SACK4T,EAAmB,IAAM3T,EAAAA,EAAAA,KAACoW,EAAU,CACjCrK,WAAY4H,EACZ3H,YAAa6H,EAA0B,EACvC5H,aAAc,SAACS,GAAI,OAAKsJ,EAAiBtJ,EAAM,SAAS,iBAUxF,EChPA,GAjB+B,WAE7B,IAAMU,GAAcF,EAAAA,EAAAA,IAAYG,EAAAA,IAEhC,OACE1N,EAAAA,EAAAA,MAAAuC,EAAAA,SAAA,CAAAnC,SAAA,EACIqN,IACApN,EAAAA,EAAAA,KAACkI,EAAAA,EAAI,CACHC,KAAM,iYACNC,UAAU,kBAGdpI,EAAAA,EAAAA,KAACsW,GAAQ,MAGf,C","sources":["components/Shared/Calendar/CalendarImage/CalendarImage.tsx","webpack://notes-organizer/./src/components/Shared/Calendar/Calendar.module.scss?fcee","components/Shared/Calendar/Calendar.tsx","webpack://notes-organizer/./src/components/Shared/Container/Container.module.scss?7328","components/Shared/Container/Container.tsx","webpack://notes-organizer/./src/components/Shared/SelectField/SelectField.module.scss?ede3","components/Shared/SelectField/SelectField.tsx","webpack://notes-organizer/./src/components/Shared/TextField/TextField.module.scss?3228","components/Shared/TextField/TextField.tsx","components/Shared/TextField/fields.ts","webpack://notes-organizer/./src/components/Todo/Todo.module.scss?77b2","components/Todo/Todo.tsx","components/helpers/searchLocalStoradge.tsx","components/helpers/parseURL.tsx","components/helpers/buildURL.tsx","webpack://notes-organizer/./src/components/TodoPreview/TodoPreview.module.scss?4052","components/TodoPreview/TodoPreview.tsx","webpack://notes-organizer/./src/components/Shared/Pagination/Pagination.module.scss?b77e","components/Shared/Pagination/Pagination.tsx","webpack://notes-organizer/./src/components/TodoList/SearchTodo/SearchTodo.module.scss?cd8a","components/TodoList/SearchTodo/SearchTodo.tsx","webpack://notes-organizer/./src/components/TodoList/TodoList.module.scss?9fe3","components/TodoList/TodoList.tsx","pages/TodoListPage/TodoListPage.tsx"],"sourcesContent":["import React from \"react\";\n\ninterface ICalendarIconProps {\n  width: string;\n  height: string;\n}\n\nconst CalendarIcon: React.FC<ICalendarIconProps> = ({ width, height }) => {\n  return (\n    <svg\n      viewBox=\"0 0 20 20\"\n      width={width}\n      height={height}\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M17.475 2.067h-1.312v-.321a.586.586 0 1 0-1.171 0v.32h-1.617v-.32a.586.586 0 0 0-1.172 0v.32h-1.617v-.32a.586.586 0 1 0-1.172 0v.32H7.797v-.32a.586.586 0 0 0-1.172 0v.32H5.008v-.32a.586.586 0 0 0-1.171 0v.32H2.525A2.527 2.527 0 0 0 0 4.592v11.724a2.527 2.527 0 0 0 2.525 2.525h14.95A2.527 2.527 0 0 0 20 16.316V4.59a2.527 2.527 0 0 0-2.525-2.524Zm1.353 14.248c0 .746-.607 1.353-1.353 1.353H2.525a1.354 1.354 0 0 1-1.353-1.352V6.732h17.656v9.584Zm0-10.755H1.172v-.969c0-.745.607-1.352 1.353-1.352h1.312v.226a.586.586 0 0 0 1.171 0V3.24h1.617v.226a.586.586 0 0 0 1.172 0V3.24h1.617v.226a.586.586 0 0 0 1.172 0V3.24h1.617v.226a.586.586 0 0 0 1.172 0V3.24h1.617v.226a.586.586 0 1 0 1.171 0V3.24h1.312c.746 0 1.353.607 1.353 1.352v.97Z\"\n        fill=\"#52555F\"\n      />\n      <path\n        d=\"M6.532 7.982H4.22a.586.586 0 0 0-.586.586v2.392c0 .323.262.586.586.586h2.312a.586.586 0 0 0 .586-.586V8.568a.586.586 0 0 0-.586-.586Zm-.586 2.392h-1.14v-1.22h1.14v1.22ZM11.156 7.982H8.844a.586.586 0 0 0-.586.586v2.392c0 .323.262.586.586.586h2.312a.586.586 0 0 0 .586-.586V8.568a.586.586 0 0 0-.586-.586Zm-.586 2.392H9.43v-1.22h1.14v1.22ZM15.78 7.982h-2.312a.586.586 0 0 0-.586.586v2.392c0 .323.262.586.586.586h2.312a.586.586 0 0 0 .586-.586V8.568a.586.586 0 0 0-.586-.586Zm-.586 2.392h-1.14v-1.22h1.14v1.22ZM6.532 12.526H4.22a.586.586 0 0 0-.586.586v2.392c0 .323.262.586.586.586h2.312a.586.586 0 0 0 .586-.586v-2.392a.586.586 0 0 0-.586-.586Zm-.586 2.392h-1.14v-1.22h1.14v1.22ZM11.156 12.526H8.844a.586.586 0 0 0-.586.586v2.392c0 .323.262.586.586.586h2.312a.586.586 0 0 0 .586-.586v-2.392a.586.586 0 0 0-.586-.586Zm-.586 2.392H9.43v-1.22h1.14v1.22ZM15.78 12.526h-2.312a.586.586 0 0 0-.586.586v2.392c0 .323.262.586.586.586h2.312a.586.586 0 0 0 .586-.586v-2.392a.586.586 0 0 0-.586-.586Zm-.586 2.392h-1.14v-1.22h1.14v1.22Z\"\n        fill=\"#52555F\"\n      />\n    </svg>\n  );\n}\n\nexport default CalendarIcon;","// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"Calendar_btn__UdtWn\",\"selectedDay\":\"Calendar_selectedDay__2gUhl\",\"day\":\"Calendar_day__sFSOy\"};","import React, { useState, forwardRef, useEffect } from 'react';\nimport DatePicker from 'react-datepicker';\nimport moment, { Moment } from 'moment';\n\nimport CalendarIcon from './CalendarImage/CalendarImage';\nimport 'react-datepicker/dist/react-datepicker.css';\n\nimport s from './Calendar.module.scss';\n\ninterface ICalendarProps {\n  dateFormat: string;\n  showMonthYearPicker: boolean;\n  value: Date;\n  handleChange: (date: string) => void;\n}\n\nconst Calendar: React.FC<ICalendarProps> = ({\n  dateFormat = 'MM.dd.yyyy',\n  showMonthYearPicker,\n  value,\n  handleChange,\n}) => {\n  const currentDate = new Date();\n  const maxDate = new Date();\n  maxDate.setMonth(currentDate.getMonth() + 2);\n\n  const [selectedDate, setSelectedDate] = useState<Moment>( \n    moment(value, 'DD.MM.YYYY')\n  );\n\n  useEffect(() => {\n    setSelectedDate(moment(value, 'DD.MM.YYYY'));\n  }, [value]);\n\n  const handleDateChange = (date: Moment) => {\n    setSelectedDate(date);\n    handleChange(date.format('DD.MM.YYYY'));\n  };\n\n  const CustomInput = forwardRef<HTMLButtonElement, { onClick?: React.MouseEventHandler }>(({ onClick }, ref) => {\n    const [displayDate, setDisplayDate] = useState(\n      moment(selectedDate).format('DD.MM.yyyy')\n    );\n\n    useEffect(() => {\n      setDisplayDate(moment(selectedDate).format('DD.MM.yyyy'));\n    }, []);\n\n    return (\n      <button type=\"button\" className={s.btn} onClick={onClick} ref={ref}>\n        <CalendarIcon width=\"20\" height=\"18\" />\n        {displayDate}\n      </button>\n    );\n  });\n\n  const renderCustomDayContents = (dayOfMonth: number, date: Date) => {\n    const selectedValue = moment(selectedDate.toDate()).startOf('day');\n    const currentValue = moment(date).startOf('day');\n\n    if (selectedValue.isSame(currentValue)) {\n      return <div className={s.selectedDay}>{dayOfMonth}</div>;\n    }\n    return <div className={s.day}>{dayOfMonth}</div>;\n  };\n\n  return (\n    <>\n      <DatePicker\n        selected={selectedDate.toDate()}\n        onChange={date => handleDateChange(moment(date))}\n        customInput={<CustomInput />}\n        dateFormat={dateFormat}\n        showMonthYearPicker={showMonthYearPicker}\n        maxDate={maxDate}\n        renderDayContents={renderCustomDayContents}\n      />\n    </>\n  );\n}\n\nexport default Calendar;","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Container_container__NXBJZ\"};","import React, { ReactNode } from 'react';\nimport s from './Container.module.scss'\n\ninterface ContainerProps {\n    children: ReactNode;\n}\n\nconst Container: React.FC<ContainerProps> = ({ children }) => {\n    return <div className={s.container}>{children}</div>;\n};\n\nexport default Container;","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"SelectField_label__Y87wK\",\"select\":\"SelectField_select__bwshq\",\"spanClass\":\"SelectField_spanClass__DB-dA\",\"createTodo\":\"SelectField_createTodo__z9Y6X\"};","import React from 'react';\nimport Select, { StylesConfig } from 'react-select';\nimport { useMediaQuery } from 'react-responsive';\n\nimport s from './SelectField.module.scss';\n\ninterface ISelectFieldProps {\n  name: string;\n  value: { value: string; label: string };\n  handleChange: (selectedOption: any) => void;\n  placeholder: string;\n  required: boolean;\n  options: { value: string; label: string }[];\n  className?: string;\n  defaultValue?: { value: string; label: string };\n}\n\nconst SelectField: React.FC<ISelectFieldProps> = ({\n  name,\n  value,\n  handleChange,\n  placeholder,\n  required,\n  options,\n  className,\n  defaultValue,\n}) => {\n  const labelClass = className ? `${s.label} ${s[className]}` : `${s.label}`;\n  const selectClass = className ? `${s.select} ${s[className]}` : `${s.select}`;\n\n  const isMobile = useMediaQuery({ maxWidth: 767 });\n  const isTablet = useMediaQuery({ minWidth: 768, maxWidth: 1279 });\n  // const isDesktop = useMediaQuery({ minWidth: 1280 });\n\n  const customStyles: StylesConfig = {\n  control: (provided: any, state) => ({\n    ...provided,\n    fontSize: isMobile ? '14px' : isTablet ? '15px' : '16px',\n    height: isMobile ? '38px' : isTablet ? '38px' : '48px',\n    color: 'var(--second-text-color)',\n    pointerEvents: 'auto',\n    borderColor: state.isFocused ? 'white' : provided.borderColor,\n  }),\n  option: (styles, { isDisabled, isFocused, isSelected }) => {\n    const backgroundColor = isSelected\n        ? 'black'\n        : isFocused\n        ? 'rgba(0, 0, 0, 0.3)' \n        : 'white';\n\n    const textColor = isSelected ? 'white' : 'black';\n\n    return {\n        ...styles,\n        backgroundColor: isDisabled ? undefined : backgroundColor,\n        color: isDisabled ? '#ccc' : textColor,\n        height: isMobile ? '38px' : isTablet ? '38px' : '48px',\n        display: 'flex',\n        alignItems: 'center',\n        cursor: isDisabled ? 'not-allowed' : 'default',\n        ':active': {\n            ...styles[':active'],\n            backgroundColor: !isDisabled ? isSelected ? 'black' : 'rgba(0, 0, 0, 0.3)' : undefined,\n        },\n    };\n    },\n    menu: (provided, state) => ({\n      ...provided,\n      marginTop: isMobile ? '-8px' : isTablet ? '-8px' : '2px',\n    }),\n};\n\n  return (\n    <label className={labelClass}>\n      <Select\n        className={selectClass}\n        name={name}\n        value={value}\n        onChange={handleChange}\n        placeholder={placeholder}\n        required={required}\n        options={options}\n        styles={customStyles}\n        defaultValue={defaultValue}\n        theme={(theme) => ({\n          ...theme,\n          borderRadius: 0,\n          colors: {\n          ...theme.colors,\n          primary: 'black',\n          },\n        })}\n      />\n      {!defaultValue && value.value === '' && (\n        <span className={s.spanClass}>{placeholder}</span>\n      )}\n    </label>\n  );\n};\n\nexport default SelectField;\n","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"TextField_label__kp4Pv\",\"input\":\"TextField_input__JDykO\",\"error\":\"TextField_error__92ab9\",\"span\":\"TextField_span__qcPmc\",\"value\":\"TextField_value__Rhply\",\"createTodo\":\"TextField_createTodo__PD23L\",\"search\":\"TextField_search__dl4gh\",\"searchIST\":\"TextField_searchIST__LvGwH\"};","import { ChangeEvent, forwardRef, ChangeEventHandler, useState, useEffect, useCallback} from 'react';\nimport { FieldError, Control } from 'react-hook-form';\nimport { useMediaQuery } from 'react-responsive';\nimport { CiSearch } from 'react-icons/ci';\n\nimport s from './TextField.module.scss';\n\nexport interface ITextFieldProps {\n  type?: string;\n  name?: string;\n  value?: string;\n  handleChange?: ChangeEventHandler<HTMLInputElement>;\n  placeholder?: string | string[];\n  required?: boolean;\n  title?: string;\n  className?: string;\n  error?: FieldError;\n  control?: Control<any>;\n  onFocus?: () => void;\n  onBlur?: () => void;\n  clearTextField?: boolean;\n}\n\nconst TextField = forwardRef<HTMLInputElement, ITextFieldProps>((props, ref) => {\n  const labelClass = props.className ? `${s.label} ${s[props.className]}` : `${s.label}`;\n  const inputClass = props.className ? `${s.input} ${s[props.className]}` : `${s.input}`;\n  const spanClass = props.className ? `${s.span} ${s[props.className]}` : `${s.span}`;\n  const clearTextField = props.clearTextField;\n  const isTablet = useMediaQuery({ minWidth: 768, maxWidth: 1279 });\n  const [inputValue, setInputValue] = useState<string>(props.value || '');\n\n  const [isValue, setIsValue] = useState<boolean>(false);\n\n  const handleInputChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    const newValue = e.target.value; \n    setInputValue(newValue);\n\n    if (props.handleChange) {\n      props.handleChange(e);\n    }\n    if (newValue !== '') {\n      setIsValue(true);\n    } else {\n      setIsValue(false);\n    }\n  }, [props]);\n\n  useEffect(() => { \n    if (props.value === '') {\n      setInputValue('');\n    } else {\n      if (props.value) {\n        setInputValue(props.value);\n      }\n    }\n  }, [props.value]);\n\n  //скидуэмо значення Input коли користувач був обраний\n  useEffect(() => {\n    if (clearTextField) {\n      setInputValue('');\n      setIsValue(false);\n      const fakeEvent = {\n        target: {\n          value: '',\n        },\n      } as ChangeEvent<HTMLInputElement>;\n\n      handleInputChange(fakeEvent);\n    } else {\n      return;\n    }\n  }, [clearTextField, handleInputChange]);\n  \n  const handleFocus = () => {\n    if (props.onFocus) {\n      props.onFocus();\n    }\n  };\n\n  const handleBlur = () => {\n    if (props.onBlur) {\n      props.onBlur();\n    }\n  };\n\n  return (\n      <label className={labelClass}>\n        <input\n          ref={ref}\n          className={inputClass}\n          type={props.type}\n          name={props.name}\n          value={inputValue}\n          onChange={handleInputChange}\n          onFocus={handleFocus}\n          onBlur={handleBlur}\n          required={props.required}\n          title={props.title}\n      />\n      {(props.className === 'search' || props.className === 'searchIST') && !isValue &&\n        <span className={spanClass}>\n          <CiSearch size={24} style={{ marginRight: isTablet ? '5px' : '10px', marginLeft: '10px'}}/>\n          {props.placeholder}\n        </span>\n      }\n      {props.className !== 'search' && props.className !== 'searchIST' && !isValue &&\n        <span className={spanClass}>\n          {props.placeholder}\n        </span>\n      }\n        {props.error && <p className={s.error}>{props.title}</p>}\n      </label>\n  );\n});\n\nexport default TextField;\n\n","import { ITextFieldProps } from \"./TextField\";\n\nexport const fields = {\n  username: {\n    label: 'User name',\n    name: 'username',\n    type: 'text',\n    placeholder: 'User name*',\n    title: '*The Name field must be more than 2 and less than 31 characters',\n    required: true,\n  } as ITextFieldProps,\n  email: {\n    label: 'Email',\n    name: 'email',\n    type: 'text',\n    placeholder: 'Email*',\n    title: '*Enter a valid email',\n    required: true,\n  } as ITextFieldProps,\n  password: {\n    label: 'Password',\n    name: 'password',\n    type: 'password',\n    placeholder: 'Password*',\n    title: '*The Password field must be more than 2 and less than 21 characters',\n    required: true,\n  } as ITextFieldProps,\n  subject: {\n    label: 'Subject',\n    name: 'subject',\n    type: 'text',\n    placeholder: '',\n    title: '*The Subject field must be more than 2 characters',\n    required: true,\n  } as ITextFieldProps,\n  search: {\n    label: 'Search',\n    name: 'search',\n    type: 'text',\n    placeholder: 'Введіть email для пошуку',\n    title: '*The Subject field must be more than 2 characters',\n    required: false,\n  } as ITextFieldProps,\n  searchByPhrase: {\n    label: 'searchByPhrase',\n    name: 'searchByPhrase',\n    type: 'text',\n    placeholder: 'Введіть слово чи фразу для пошуку',\n    title: '*The Subject field must be more than 2 characters',\n    required: false,\n  } as ITextFieldProps,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"todo\":\"Todo_todo__KBW37\",\"todoCard\":\"Todo_todoCard__VEgLx\",\"cardBorder\":\"Todo_cardBorder__bjTLN\",\"partData\":\"Todo_partData__JQyQq\",\"partDataAddInfoUser\":\"Todo_partDataAddInfoUser__Gt4CD\",\"partDataDate\":\"Todo_partDataDate__IPJq4\",\"cardGroup\":\"Todo_cardGroup__NtaSa\",\"cardGroupMobile\":\"Todo_cardGroupMobile__Jkeu6\",\"todoStatus\":\"Todo_todoStatus__GEFX5\",\"scroll\":\"Todo_scroll__ZLtcw\"};","import React from 'react';\nimport moment from 'moment';\nimport { useMediaQuery } from 'react-responsive';\nimport Text from '../Shared/Text'\nimport { FaClock, FaTimes } from 'react-icons/fa';\nimport s from './Todo.module.scss';\n\nexport interface ITodoProps {\n    additionalInfo: string ,\n    dateFrom: string,\n    dateTo: string,\n    otherMembers: string,\n    part: string,\n    subject: string,\n    saveAfterDeadline: boolean,\n}\n\nconst checkDate = (date: string) => {\n    const today = moment();\n    const dueDate = moment(date, 'DD.MM.YYYY');\n\n    if (dueDate.isSameOrAfter(today, 'day')) {\n        return 'Виконується';\n    } else {\n        return 'Термін виконання минув';\n    }\n}\n\nconst Todo: React.FC<ITodoProps> = ({ additionalInfo, dateFrom, dateTo, otherMembers, part, subject, saveAfterDeadline }) => {\n    const isMobile = useMediaQuery({ maxWidth: 767 });\n\n    return (\n        <div className={s.todo}>\n            <div>\n            <Text\n                text={'Перегляд завдання'}\n                textClass=\"title-form-list\"\n            />\n            <div className={s.todoCard}>\n                {dateFrom && dateTo && <div className={s.todoStatus}>\n                    <Text\n                        text={checkDate(dateTo)}\n                        textClass=\"title-form-todo\"\n                    />\n                    {checkDate(dateTo) === 'Виконується' ?\n                        <FaClock color=\"green\" size=\"30px\" style={{ marginLeft: '20px', marginRight: '20px' }} /> :\n                        <FaTimes color=\"red\" size=\"30px\" style={{ marginLeft: '20px', marginRight: '20px' }} />}\n                </div>}\n                    {!isMobile && (<ul className={s.cardBorder}>\n                        <li className={s.cardGroup}>\n                            <div>\n                                <Text\n                                    text={'Розділ'}\n                                    textClass=\"title-form-todo\"\n                                />\n                                <div className={s.partData}>\n                                    <Text\n                                        text={part}\n                                        textClass=\"hidenInputTodo\"\n                                    />\n                                </div>\n                            </div>\n                            <div>\n                                <Text\n                                    text={'Дата початку'}\n                                    textClass=\"title-form-todo\"\n                                />\n                                <div className={s.partDataDate}>\n                                    <Text\n                                        text={dateFrom}\n                                        textClass=\"hidenInput\"\n                                    />\n                                </div>\n                            </div>\n                        </li>\n                        <li className={s.cardGroup}>\n                            <div>\n                                <Text\n                                    text={'Тема'}\n                                    textClass=\"title-form-todo\"\n                                />\n                                <div className={s.partData}>\n                                    <Text\n                                        text={subject}\n                                        textClass=\"hidenInput\"\n                                    />\n                                </div>\n                            </div>\n                            <div>\n                                <Text\n                                    text={'Дата закінчення'}\n                                    textClass=\"title-form-todo\"\n                                />\n                                <div className={s.partDataDate}>\n                                    <Text\n                                        text={dateTo}\n                                        textClass=\"hidenInput\"\n                                    />\n                                </div>\n                            </div>\n                        </li>\n                        <li className={s.cardGroup}>\n                            <div>\n                                <Text\n                                    text={'Додаткова інформація'}\n                                    textClass=\"title-form-todo\"\n                                />\n                                <div className={s.partDataAddInfoUser}>\n                                    <div className={s.scroll}>\n                                        <Text\n                                            text={additionalInfo}\n                                            textClass=\"hidenInputAddInfoUser\"\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                        </li>\n                        {otherMembers && <li className={s.cardGroup}>\n                            <div>\n                                <Text\n                                    text={'Користувачі спільного завдання'}\n                                    textClass=\"title-form-todo\"\n                                />\n                                <div className={s.partDataAddInfoUser}>\n                                    <Text\n                                        text={otherMembers}\n                                        textClass=\"hidenInputAddInfoUser\"\n                                    />\n                                </div>\n                            </div>\n                        </li>}\n                        <Text\n                            text={saveAfterDeadline ?\n                                '*Ваше завдання буде збережене після закінчення терміну його виконання' :\n                                '*Ваше завдання буде видалено після закінчення терміну його виконання'}\n                            textClass=\"title-form-todo\"\n                        />\n                    </ul>)}\n                    {isMobile && (<ul className={s.cardBorder}>\n                        <li className={s.cardGroupMobile}>\n                            <div>\n                                <Text\n                                    text={'Розділ'}\n                                    textClass=\"title-form-todo\"\n                                />\n                                <div className={s.partData}>\n                                    <Text\n                                        text={part}\n                                        textClass=\"hidenInputTodo\"\n                                    />\n                                </div>\n                            </div>\n                            <div>\n                                <Text\n                                    text={'Тема'}\n                                    textClass=\"title-form-todo\"\n                                />\n                                <div className={s.partData}>\n                                    <Text\n                                        text={subject}\n                                        textClass=\"hidenInput\"\n                                    />\n                                </div>\n                            </div>\n                        </li>\n                        <li className={s.cardGroupMobile}>\n                            <div>\n                                <Text\n                                    text={'Дата початку'}\n                                    textClass=\"title-form-todo\"\n                                />\n                                <div className={s.partDataDate}>\n                                    <Text\n                                        text={dateFrom}\n                                        textClass=\"hidenInput\"\n                                    />\n                                </div>\n                            </div>\n                            <div>\n                                <Text\n                                    text={'Дата закінчення'}\n                                    textClass=\"title-form-todo\"\n                                />\n                                <div className={s.partDataDate}>\n                                    <Text\n                                        text={dateTo}\n                                        textClass=\"hidenInput\"\n                                    />\n                                </div>\n                            </div>\n                        </li>\n                        <li className={s.cardGroupMobile}>\n                            <div>\n                                <Text\n                                    text={'Додаткова інформація'}\n                                    textClass=\"title-form-todo\"\n                                />\n                                <div className={s.partDataAddInfoUser}>\n                                    <div className={s.scroll}>\n                                        <Text\n                                            text={additionalInfo}\n                                            textClass=\"hidenInputAddInfoUser\"\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                        </li>\n                        {otherMembers && (<li className={s.cardGroupMobile}>\n                            <div>\n                                <Text\n                                    text={'Користувачі спільного завдання'}\n                                    textClass=\"title-form-todo\"\n                                />\n                                <div className={s.partDataAddInfoUser}>\n                                    <Text\n                                        text={otherMembers}\n                                        textClass=\"hidenInputAddInfoUser\"\n                                    />\n                                </div>\n                            </div>\n                        </li>)}\n                        <Text\n                            text={saveAfterDeadline ?\n                                '*Ваше завдання буде збережене після закінчення терміну його виконання' :\n                                '*Ваше завдання буде видалено після закінчення терміну його виконання'}\n                            textClass=\"title-form-todo\"\n                        />\n                    </ul>)}\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Todo;","import { ITodoSearch, ITodoCreate } from '../types/todo/todo';\nimport moment from 'moment';\n\nconst isDateInRange = (date: string, startDate: string, endDate: string) => {\n    const momentDate = moment(date, 'DD.MM.YYYY', true);\n    const momentStartDate = moment(startDate, 'DD.MM.YYYY', true);\n    const momentEndDate = moment(endDate, 'DD.MM.YYYY', true);\n\n    return momentDate.isBetween(momentStartDate, momentEndDate, null, '[]');\n};\n\nexport const searchLocalStoradge = (searchData: ITodoSearch) => {\n    const lowerCaseSearchPhrase = searchData.searchByPhrase?.toLowerCase();\n    const localStorageData = localStorage.getItem('notes-organizer_tasks');\n    const currentDate = moment();\n\n    if (localStorageData) {\n        const tasks: ITodoCreate[] = JSON.parse(localStorageData);\n\n        const filteredTasks = tasks.filter((task) => {\n        // 1) Пошук за датою\n            if (\n                searchData.searchByDate &&\n                !isDateInRange(searchData.searchByDate, task.dateFrom, task.dateTo)\n            ) {\n                return false;\n            }\n\n        // 2) Пошук за розділом\n            if (searchData.searchByPart && task.part !== searchData.searchByPart) {\n                return false;\n            }\n\n        // 3) Пошук за словом чи фразою\n            if (\n                lowerCaseSearchPhrase &&\n                !(\n                    task.subject.toLowerCase().includes(lowerCaseSearchPhrase) ||\n                    (task.additionalInfo && task.additionalInfo.toLowerCase().includes(lowerCaseSearchPhrase))\n                )\n            ) {\n                return false;\n            }\n\n        // 4) Пошук за статусом\n            if (\n                searchData.searchByStatus === 'Термін закінчився' &&\n                moment(currentDate, 'DD.MM.YYYY', true).isBefore(moment(task.dateTo, 'DD.MM.YYYY', true))\n            ) {\n                return false;\n            }\n\n            if (\n                searchData.searchByStatus === 'Виконується' &&\n                moment(currentDate, 'DD.MM.YYYY', true).isAfter(moment(task.dateTo, 'DD.MM.YYYY', true))\n            ) {\n                return false;\n            }\n\n            return true;\n        });\n\n        if (filteredTasks.length > 0) {\n            return filteredTasks;\n        } else {\n            return [];\n        }\n    }\n};","import { ITodoSearch } from \"../types/todo/todo\"\n\nexport const parseURL = () => { \n    const urlParams = new URLSearchParams(window.location.search);\n\n    const part = urlParams.get('part');\n    const phrase = urlParams.get('phrase');\n    const date = urlParams.get('date');\n    const status = urlParams.get('status');\n    const members = urlParams.get('members');\n    const weekPage = urlParams.get('weekPage');\n    const searchPage = urlParams.get('searchPage');\n\n    const urlData: ITodoSearch = {\n        searchByPart: part ? part : '',\n        searchByPhrase: phrase ? phrase : '',\n        searchByDate: date ? date : '',\n        searchByStatus: status ? status : '',\n        searchByOtherMembers: members ? members : ''\n    }\n\n    return { urlData, weekPage, searchPage };\n}","import { ITodoSearch } from \"../types/todo/todo\"\n\nexport const buildURL = (searchData: ITodoSearch, searchPage?: number, weekPage?: number) => { \n    const urlParams = new URLSearchParams();\n\n    if (searchData.searchByPart) {\n        urlParams.set('part', searchData.searchByPart);\n    }\n\n    if (searchData.searchByPhrase) {\n        urlParams.set('phrase', searchData.searchByPhrase);\n    }\n\n    if (searchData.searchByDate) {\n        urlParams.set('date', searchData.searchByDate);\n    }\n\n    if (searchData.searchByStatus) {\n        urlParams.set('status', searchData.searchByStatus);\n    }\n\n    if (searchData.searchByOtherMembers) {\n        urlParams.set('members', searchData.searchByOtherMembers);\n    }\n\n    if (searchPage && searchPage > 0) {\n        urlParams.set('searchPage', String(searchPage));\n    }\n    if (weekPage && weekPage > 0) {\n        urlParams.set('weekPage', String(weekPage));\n    }\n\n    const queryString = urlParams.toString();\n    const finalURL = `/list?${queryString}`;\n\n    return finalURL;\n}","// extracted by mini-css-extract-plugin\nexport default {\"todoPreview\":\"TodoPreview_todoPreview__wH21y\",\"todoCard\":\"TodoPreview_todoCard__GtpCq\",\"cardBorder\":\"TodoPreview_cardBorder__6eTPh\",\"partData\":\"TodoPreview_partData__CZRfN\",\"partGroup\":\"TodoPreview_partGroup__5wGHj\",\"partDataAddInfoUser\":\"TodoPreview_partDataAddInfoUser__98W4H\",\"partDataDate\":\"TodoPreview_partDataDate__UjZHK\",\"cardGroup\":\"TodoPreview_cardGroup__0paj+\",\"todoStatus\":\"TodoPreview_todoStatus__XVCfP\",\"todoWindow\":\"TodoPreview_todoWindow__S0xAx\",\"todoPart\":\"TodoPreview_todoPart__RF9Ba\",\"dismissButton\":\"TodoPreview_dismissButton__tghwX\",\"arrowButton\":\"TodoPreview_arrowButton__dnsoa\",\"editTodo\":\"TodoPreview_editTodo__c2yLQ\",\"editTodoGroup\":\"TodoPreview_editTodoGroup__Wh+bj\",\"icon\":\"TodoPreview_icon__efj7z\"};","import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport moment from 'moment';\n\nimport Text from '../Shared/Text'\nimport Todo from '../Todo/Todo';\n\nimport { FaClock, FaTimes } from 'react-icons/fa';\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\nimport { faWrench } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport s from './TodoPreview.module.scss';\n\nexport interface ITodoPrewievProps {\n    _id: string;\n    additionalInfo: string,\n    dateFrom: string,\n    dateTo: string,\n    otherMembers: string,\n    part: string,\n    subject: string,\n    saveAfterDeadline: boolean,\n}\n\nconst checkDate = (date: string) => {\n    const today = moment();\n    const dueDate = moment(date, 'DD.MM.YYYY');\n    if (dueDate.isSameOrAfter(today, 'day')) {\n        return 'Виконується';\n    } else {\n        return 'Термін виконання минув';\n    }\n}\n\nconst TodoPreview: React.FC<ITodoPrewievProps> = ({ additionalInfo, dateFrom, dateTo, otherMembers, part, subject, saveAfterDeadline, _id }) => {\n    \n    const [showTodo, setShowTodo] = useState<boolean>(false);\n    const navigate = useNavigate();\n\n    useEffect(() => {\n    }, [showTodo]);\n\n    const openTodo = () => {\n    setShowTodo(!showTodo);\n    }\n\n    const goToEditTodo = () => {\n        navigate(`/edit/${_id}`, {\n            state: {\n                additionalInfo,\n                dateFrom,\n                dateTo,\n                otherMembers,\n                part,\n                subject,\n                saveAfterDeadline,\n                _id,\n            },\n        });\n    }\n\n    return (\n        <div className={s.todoPreview}>\n            <div className={s.todoCard} onClick={openTodo}>\n                {dateFrom && dateTo && <div className={s.todoStatus}>\n                    <Text\n                        text={checkDate(dateTo)}\n                        textClass=\"title-form-todo-preview-status\"\n                    />\n                    {checkDate(dateTo) === 'Виконується' ?\n                        <FaClock color=\"green\" size=\"20px\" style={{ marginLeft: '10px', marginRight: '30px' }} /> :\n                        <FaTimes color=\"red\" size=\"20px\" style={{ marginLeft: '10px', marginRight: '30px' }} />\n                    }\n                </div>}\n                <ul className={s.cardBorder}>\n                    <li>\n                        <Text\n                            text={'Розділ'}\n                            textClass=\"title-form-todo-preview\"\n                        />\n                        <div className={s.partData}>\n                            <Text\n                                text={part}\n                                textClass=\"hidenInput-preview\"\n                            />\n                        </div>\n                        <Text\n                            text={'Тема'}\n                            textClass=\"title-form-todo-preview\"\n                        />\n                        <div className={s.partData}>\n                            <Text\n                                text={subject}\n                                textClass=\"hidenInput-preview\"\n                            />\n                        </div>\n                    </li>\n                    <li>\n                        <div className={s.partGroup}>\n                            <Text\n                                text={'Дата початку'}\n                                textClass=\"title-form-todo-preview-date\"\n                            />\n                            <div className={s.partDataDate}>\n                                <Text\n                                    text={dateFrom}\n                                    textClass=\"hidenInput-date\"\n                                />\n                            </div>\n                        </div>\n                        <div className={s.partGroup}>\n                            <Text\n                                text={'Дата закінчення'}\n                                textClass=\"title-form-todo-preview-date\"\n                            />\n                            <div className={s.partDataDate}>\n                                <Text\n                                    text={dateTo}\n                                    textClass=\"hidenInput-date\"\n                                />\n                            </div>\n                        </div>\n                        <Text\n                            text={saveAfterDeadline ?\n                                '*Ваше завдання буде збережене після закінчення терміну його виконання' :\n                                '*Ваше завдання буде видалено після закінчення терміну його виконання'}\n                            textClass=\"title-form-todo-preview-notify\"\n                        />\n                    </li>\n                </ul>\n            </div>\n            {showTodo &&\n                <div className={s.todoWindow}>\n                    <div className={s.todoPart}>\n                        <button className={s.dismissButton} onClick={openTodo}>\n                            <FontAwesomeIcon icon={faTimes} size=\"2x\" color='white' />\n                        </button>\n                        <Todo {...{ additionalInfo, dateFrom, dateTo, otherMembers, part, subject, saveAfterDeadline, _id }} />\n                        <div className={s.editTodo}>\n                            <div className={s.editTodoGroup}>\n                                <Text\n                                    text={'Редагувати завдання'}\n                                    textClass=\"title-form-todo-edit\"\n                                />\n                                <div\n                                    className={s.arrowButton}\n                                    onClick={goToEditTodo}\n                                >\n                                    <FontAwesomeIcon icon={faWrench} style={{ fontSize: '24px' }} color='black' />\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            }\n        </div>\n    );\n}\n\nexport default TodoPreview;","// extracted by mini-css-extract-plugin\nexport default {\"paginationSection\":\"Pagination_paginationSection__1F1CP\",\"pagesSet\":\"Pagination_pagesSet__2tGzL\",\"pageBox\":\"Pagination_pageBox__Ti6uC\",\"active\":\"Pagination_active__yaPsQ\",\"btnLeft\":\"Pagination_btnLeft__Gnp4s\",\"btnRight\":\"Pagination_btnRight__O85qW\"};","import React from 'react';\n\nimport s from './Pagination.module.scss';\n\ninterface IPaginationProps {\n  totalPages: number;\n  currentPage: number;\n  onPageChange: (newPage: number) => void;\n  type?: string;\n}\n\nconst Pagination: React.FC<IPaginationProps>  = ({ totalPages, currentPage, onPageChange, type }) => {\n  const getPageNumbers = () => {\n    const pageNumbers = [];\n    const displayRange = 2; // Кількість сторінок, які відображаються навколо поточної сторінки\n\n    let startPage = Math.max(1, currentPage - displayRange);\n    let endPage = Math.min(totalPages, currentPage + displayRange);\n\n    if (currentPage <= displayRange) {\n      endPage = Math.min(displayRange * 2 + 1, totalPages);\n    }\n\n    if (currentPage >= totalPages - displayRange) {\n      startPage = Math.max(totalPages - displayRange * 2, 1);\n    }\n\n    for (let page = startPage; page <= endPage; page++) {\n      pageNumbers.push(page);\n    }\n\n    return pageNumbers;\n  };\n\n  return (\n    <div className={s.paginationSection}>\n      <button\n        className={`${s.btnLeft} ${s.pageBox}`}\n        onClick={() => onPageChange(currentPage - 1)}\n        disabled={currentPage === 1}\n      >\n        &lt;\n      </button>\n      <div className={s.pagesSet}>\n        {getPageNumbers().map(page => (\n          <button\n            key={page}\n            onClick={() => onPageChange(page)}\n            className={currentPage === page ? s.active : s.pageBox}\n          >\n            {page}\n          </button>\n        ))}\n      </div>\n      <button\n        className={`${s.btnRight} ${s.pageBox}`}\n        onClick={() => onPageChange(currentPage + 1)}\n        disabled={currentPage === totalPages}\n      >\n        &gt;\n      </button>\n    </div>\n  );\n};\n\nexport default Pagination;\n","// extracted by mini-css-extract-plugin\nexport default {\"todoSearchBox\":\"SearchTodo_todoSearchBox__BlhWN\",\"formSection\":\"SearchTodo_formSection__f5f6C\",\"scroll\":\"SearchTodo_scroll__7UFnE\",\"checkbox\":\"SearchTodo_checkbox__0W0pl\",\"list\":\"SearchTodo_list__epjPQ\",\"lastListItem\":\"SearchTodo_lastListItem__b8c6w\",\"button\":\"SearchTodo_button__O5E89\"};","import React, { useState, useRef, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useForm, Controller } from 'react-hook-form';\nimport { useNavigate } from 'react-router-dom';\nimport moment, { Moment } from 'moment';\nimport { useAppDispatch } from '../../../hooks/hooks';\nimport { buildURL } from '../../helpers/buildURL';\n\nimport { fields } from '../../Shared/TextField/fields';\nimport { searchLocalStoradge } from '../../helpers/searchLocalStoradge';\nimport Text from '../../Shared/Text';\nimport SelectField from '../../Shared/SelectField';\nimport TextField from '../../Shared/TextField';\nimport Calendar from '../../Shared/Calendar';\nimport Button from '../../Shared/Button';\nimport { getOptionMenu } from '../../../Redux/technical/technical-selectors';\nimport { getLogin } from '../../../Redux/auth/auth-selectors';\nimport { getEmailList } from '../../../Redux/technical/technical-selectors';\nimport { getSearchTodo } from '../../../Redux/todo/todo-operations';\nimport { saveArrayTodosSearch } from '../../../Redux/todo/todo-slice';\nimport { getWeekPage } from '../../../Redux/technical/technical-selectors';\n\nimport { ITodoSearch } from '../../types/todo/todo';\n\nimport s from './SearchTodo.module.scss';\n\nconst SearchTodo: React.FC = () => {\n    const dispatch = useAppDispatch();\n    const navigate = useNavigate();\n    const wrapperRef = useRef<HTMLDivElement | null>(null);\n    const [selectedDate] = useState<Moment>(moment());\n    const options = useSelector(getOptionMenu);\n    const isUserLogin = useSelector(getLogin);\n    const weekPage = useSelector(getWeekPage);\n\n    const arrayUser = useSelector(getEmailList);\n    const [finalListUser, setFinalListUser] = useState<string[]>(arrayUser);\n    const [selectedUsers, setSelectedUsers] = useState<string[]>([]);\n    const [isListVisible, setIsListVisible] = useState<boolean>(false);\n    const [clearTextField, setClearTextField] = useState<boolean>(false);\n    const optionsStatus = [\n        { value: 'Виконується', label: 'Виконується' },\n        { value: 'Термін закінчився', label: 'Термін закінчився' },\n        { value: 'Всі завдання', label: 'Всі завдання' },\n    ]\n\n    //Прибираэмо список коли відбувся клік за межами div\n    useEffect(() => {\n        const handleClickOutside = (event: MouseEvent) => {\n            if (wrapperRef.current && !wrapperRef.current.contains(event.target as Node)) {\n                setIsListVisible(false);\n                setClearTextField(false);\n            }\n        };\n        document.addEventListener('click', handleClickOutside);\n        return () => {\n            document.removeEventListener('click', handleClickOutside);\n        };\n    }, [wrapperRef, clearTextField]);\n\n    useEffect(() => {\n        setClearTextField(false);\n    }, [selectedUsers]);\n\n    const { control, handleSubmit, reset } = useForm<ITodoSearch>({\n        defaultValues: {\n            searchByPart: { value: '', label: '' },\n            searchByPhrase: '',\n            searchByDate: '',\n            searchByStatus: { value: '', label: '' },\n            searchByOtherMembers: '',\n        },\n    });\n\n    const onSubmit = async (data: ITodoSearch) => {\n        let array;\n        let searchPage = 0;\n        const finalData: ITodoSearch = {\n            searchByPart: data.searchByPart.value,\n            searchByPhrase: data.searchByPhrase,\n            searchByDate: data.searchByDate,\n            searchByStatus: data.searchByStatus.value,\n            searchByOtherMembers: selectedUsers.join(', '),\n        }\n\n        if (!isUserLogin) {\n            const searchArray = await searchLocalStoradge(finalData);\n            array = await dispatch(saveArrayTodosSearch(searchArray));\n        } else {\n            array = await dispatch(getSearchTodo(finalData));\n        }\n        \n        if (isUserLogin && array.payload.arrayTodosSearch.length > 0) {\n            searchPage = 1;\n        }\n        if (!isUserLogin && array.payload.length > 0) {\n            searchPage = 1;\n        }\n\n        const newUrl = await buildURL(finalData, searchPage, weekPage);\n        navigate(newUrl);\n\n        reset();\n        setSelectedUsers([]);\n        setIsListVisible(false);\n    };\n\n    const handleUserSelection = (email: string) => {\n        if (selectedUsers.includes(email)) {\n            setSelectedUsers(selectedUsers.filter((user) => user !== email));\n            setClearTextField(true);\n        } else {\n            setSelectedUsers([...selectedUsers, email]);\n            setClearTextField(true);\n        }\n    };\n\n    const handleTextSearch = (e: React.ChangeEvent<HTMLInputElement>) => {\n        const text = e.target.value;\n        const filteredUsers = arrayUser.filter((email: string) => email.includes(text));\n        if (arrayUser.length > 0) {\n            setFinalListUser(filteredUsers);\n        } else {\n            setFinalListUser([text]);\n        }\n    };\n\n    const handleTextSearchFocus = () => {\n        setIsListVisible(true);\n    };\n\n    return (\n        <div className={s.container}>\n            <form className={s.formSection} onSubmit={handleSubmit(onSubmit)}>\n                <div className={s.todoSearchBox}>\n                    <div className={s.todoSearchBoxPart}>\n                        <Text\n                            text={'За розділом'}\n                            textClass=\"title-form\"\n                        />\n                        <Controller\n                            control={control}\n                            name=\"searchByPart\"\n                            rules={{ required: false}}\n                            render={({ field: {onChange, value}, fieldState }) => (\n                            <SelectField\n                                value={value}\n                                handleChange={(newValue) => {\n                                    onChange(newValue);\n                                }}\n                                name=\"searchByPart\"\n                                className=\"createTodo\"\n                                placeholder=\"Оберіть опцію\"\n                                required={false}\n                                options={options}\n                            />\n                            )}\n                        />\n                    </div>\n                    <div className={s.todoSearchBoxPart}>\n                        <Text\n                            text={'За словом чи фразою'}\n                            textClass=\"title-form\"\n                        />\n                        <Controller\n                            control={control}\n                            name=\"searchByPhrase\"\n                            rules={{ required: false}}\n                            render={({ field: {onChange, value}, fieldState }) => (\n                            <TextField\n                                value={value}\n                                control={control}\n                                className=\"createTodo\"\n                                handleChange={(e) => {\n                                    const newValue = e.target.value;\n                                    onChange(newValue);\n                                    }}\n                                error={fieldState.error}\n                                {...fields.searchByPhrase}\n                            />\n                            )}\n                        />\n                    </div>\n                    <div className={s.todoSearchBoxPart}>\n                        <Text\n                            text={'За датою'}\n                            textClass=\"title-form\"\n                        />\n                        <Controller\n                            control={control}\n                            name=\"searchByDate\"\n                            rules={{ required: false}}\n                            render={({ field: {onChange}}) => (\n                            <Calendar\n                                dateFormat=\"dd.MM.yyyy\" \n                                showMonthYearPicker={false} \n                                value={selectedDate.toDate()} \n                                handleChange={(newValue) => {\n                                onChange(newValue);\n                                }}\n                            />\n                            )}\n                        />\n                    </div>\n                    <div className={s.todoSearchBoxPart}>\n                        <Text\n                            text={'За статусом'}\n                            textClass=\"title-form\"\n                        />\n                        <Controller\n                            control={control}\n                            name=\"searchByStatus\"\n                            rules={{ required: false}}\n                            render={({ field: {onChange, value}, fieldState }) => (\n                            <SelectField\n                                value={value}\n                                handleChange={(newValue) => {\n                                    onChange(newValue);\n                                }}\n                                name=\"searchByStatus\"\n                                className=\"createTodo\"\n                                placeholder=\"Оберіть опцію\"\n                                required={false}\n                                options={optionsStatus}\n                            />\n                            )}\n                        />\n                    </div>\n                    {isUserLogin && (\n                    <div ref={wrapperRef} className={s.todoSearchBoxPart}>\n                        <Text\n                            text={'За користувачем'}\n                            textClass=\"title-form\"\n                        />\n                        <TextField\n                            className={\"searchIST\"}\n                            handleChange={handleTextSearch}\n                            onFocus={handleTextSearchFocus}\n                            clearTextField={clearTextField}\n                            {...fields.search}\n                        />\n                        {isListVisible && (\n                            <ul className={s.scroll}>\n                                {finalListUser.map((email, index) => (\n                                    <li key={email} className={index === finalListUser.length - 1 ? s.lastListItem : s.list}>\n                                        <label>\n                                            <input\n                                                type=\"checkbox\"\n                                                className={s.checkbox}\n                                                checked={selectedUsers.includes(email)}\n                                                onChange={() => handleUserSelection(email)}\n                                            />\n                                            {email}\n                                        </label>\n                                    </li>\n                                ))}\n                            </ul>\n                        )}\n                    </div>\n                    )}\n                    {isUserLogin && selectedUsers.length > 0 &&(\n                    <div className={s.todoSearchBoxPart}>\n                        <Text\n                            text={'Список обраних користувачів'}\n                            textClass=\"title-form\"\n                        />\n                        <Text\n                            text={selectedUsers.join(', ')}\n                            textClass=\"list-users\"\n                        />\n                    </div>\n                    )}\n                </div>\n                <div className={s.button}>\n                    <Button text=\"Знайти завдання\" btnClass=\"btnLight\" />\n                </div>\n            </form>\n        </div>\n    );\n};\n\nexport default SearchTodo;","// extracted by mini-css-extract-plugin\nexport default {\"todoList\":\"TodoList_todoList__nEhxi\",\"todosGroup\":\"TodoList_todosGroup__IxkXr\"};","import React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { useAppDispatch } from '../../hooks/hooks';\nimport { useMediaQuery } from 'react-responsive';\nimport moment from 'moment';\nimport { getTodosWeek } from '../../Redux/todo/todo-operations';\nimport { getArrayTodosWeek } from '../../Redux/todo/todo-selectors';\nimport { getLogin } from '../../Redux/auth/auth-selectors';\nimport { saveArrayTodosWeek } from '../../Redux/todo/todo-slice';\nimport { getArrayTodosSearch } from '../../Redux/todo/todo-selectors';\nimport { saveSearchPage, saveWeekPage } from '../../Redux/technical/technical-slice';\nimport { getSearchPage, getWeekPage } from '../../Redux/technical/technical-selectors';\nimport { getSearchTodo } from '../../Redux/todo/todo-operations';\nimport { saveArrayTodosSearch } from '../../Redux/todo/todo-slice';\nimport { clearArrayTodosSearch, clearArrayTodosWeek } from '../../Redux/todo/todo-slice';\n\nimport { parseURL } from '../helpers/parseURL';\nimport { buildURL } from '../helpers/buildURL';\nimport { searchLocalStoradge } from '../helpers/searchLocalStoradge';\n\nimport Container from '../Shared/Container';\nimport Text from '../Shared/Text';\nimport TodoPreview from '../TodoPreview';\nimport Pagination from '../Shared/Pagination';\nimport SearchTodo from './SearchTodo';\n\nimport { ITodoCreate, ITodoServer, ITodoSearch } from '../types/todo/todo';\n\nimport s from './TodoList.module.scss';\n\nconst chunkArray = (array: ITodoServer[],  chunkSize: number) => {\n    return Array.from({ length: Math.ceil(array.length / chunkSize) }, (_, index) =>\n        array.slice(index * chunkSize, (index + 1) * chunkSize)\n    );\n};\n\nconst TodoList: React.FC = () => { \n    const vpHeight = window.innerHeight;\n    const [dynamicStyles, setDynamicStyles] = useState({});\n    const dispatch = useAppDispatch();\n    const navigate = useNavigate();\n    const userLogin = useSelector(getLogin);\n    const arrayTodosWeek = useSelector(getArrayTodosWeek);\n    const arrayTodosSearch = useSelector(getArrayTodosSearch);\n    const searchPage = useSelector(getSearchPage);\n    const weekPage = useSelector(getWeekPage);\n\n    const isTablet = useMediaQuery({ minWidth: 768, maxWidth: 1279 });\n\n    let itemsPerPage = isTablet ? 2 : 3;\n    const totalPagesSearch = arrayTodosSearch && arrayTodosSearch.length > 0 ? Math.ceil(arrayTodosSearch.length / itemsPerPage) : 0;\n    const totalPagesWeek = arrayTodosWeek && arrayTodosWeek.length > 0 ? Math.ceil(arrayTodosWeek.length / itemsPerPage) : 0;\n\n    const [currentGroupSearchIndex, setCurrentGroupSearchIndex] = useState(0);\n    const [currentGroupWeekIndex, setCurrentGroupWeekIndex] = useState(0);\n\n    const chunkedTodosSearch = chunkArray(arrayTodosSearch || [], itemsPerPage);\n    const chunkedTodosWeek = chunkArray(arrayTodosWeek || [], itemsPerPage);\n    const currentGroupSearch = chunkedTodosSearch[currentGroupSearchIndex] || [];\n    const currentGroupWeek = chunkedTodosWeek[currentGroupWeekIndex] || [];\n\n    useEffect(() => {\n        setDynamicStyles({\n            minHeight: userLogin ? `${vpHeight - 64}px` : `${vpHeight - 64 - 39}px`,\n        });\n    }, [userLogin, vpHeight]);\n\n    useEffect(() => {\n        let arraySearch;\n        let arrayWeek;\n        dispatch(clearArrayTodosSearch());\n        dispatch(clearArrayTodosWeek());\n        setCurrentGroupSearchIndex(0);\n        setCurrentGroupWeekIndex(0);\n\n        const fetchDataFromLocalStorage = () => {\n            const localStorageData = localStorage.getItem('notes-organizer_tasks');\n            const currentDate = moment();\n            if (localStorageData) {\n                const tasksFromLocalStorage = JSON.parse(localStorageData);\n                // We filter the tasks that need to be left in the local storage\n                const validTodos = tasksFromLocalStorage.filter((todo: ITodoCreate) => {\n                    const dueDate = moment(todo.dateTo, \"DD.MM.YYYY\");\n                    const daysUntilDue = dueDate.diff(currentDate, \"days\");\n                    \n                    return daysUntilDue >= 0 || todo.saveAfterDeadline;\n                });\n                // We update the local storage with a new array of tasks\n                localStorage.setItem('notes-organizer_tasks', JSON.stringify(validTodos));\n\n                const todosThisWeek = validTodos.filter((todo: ITodoCreate) => {\n                    const dueDate = moment(todo.dateTo, \"DD.MM.YYYY\");\n                    const daysUntilDue = dueDate.diff(currentDate, \"days\");\n                    \n                    return daysUntilDue >= 0 && daysUntilDue <= 7;\n                });\n                dispatch(saveArrayTodosWeek(todosThisWeek));\n                return todosThisWeek;\n            }\n        };\n\n        const separationOfProcesses = async (urlData: ITodoSearch, weekPage: string | null, searchPage: string | null) => {\n            const searchByPart = urlData.searchByPart;\n            const searchByPhrase = urlData.searchByPhrase;\n            const searchByDate = urlData.searchByDate;\n            const searchByStatus = urlData.searchByStatus;\n            const searchByOtherMembers = urlData.searchByOtherMembers;\n            const numberWeekPage = weekPage ? Number(weekPage) : 0;\n            const numberSearchPage = searchPage ? Number(searchPage) : 0;\n\n            if (searchByPart === '' && searchByPhrase === '' && searchByDate === '' && searchByStatus === '' && searchByOtherMembers === '') {\n                //If we don't have a search url\n                if (userLogin) {\n                    arrayWeek = await dispatch(getTodosWeek()) as any;\n                    if (arrayWeek.payload && arrayWeek.payload.arrayTodosWeek.length > 0) {\n                        dispatch(saveWeekPage(numberWeekPage ? numberWeekPage : 1));\n                        setCurrentGroupWeekIndex(numberWeekPage ? numberWeekPage - 1 : 0);\n                    } else {\n                        dispatch(saveWeekPage(0));\n                        setCurrentGroupWeekIndex(0);\n                    }\n                } else {\n                    arrayWeek = fetchDataFromLocalStorage();\n                    if (arrayWeek && arrayWeek.length > 0) {\n                        dispatch(saveWeekPage(numberWeekPage ? numberWeekPage : 1));\n                        setCurrentGroupWeekIndex(numberWeekPage ? numberWeekPage - 1 : 0);\n                    } else {\n                        dispatch(saveWeekPage(0));\n                        setCurrentGroupWeekIndex(0);\n                    }\n                }\n            } else {\n                //If we have a search url\n                const finalData: ITodoSearch = { searchByPart, searchByPhrase, searchByDate, searchByStatus, searchByOtherMembers };\n                if (userLogin) {\n                    arrayWeek = await dispatch(getTodosWeek()) as any;\n                    if (arrayWeek.payload && arrayWeek.payload.arrayTodosWeek.length > 0) {\n                        dispatch(saveWeekPage(numberWeekPage ? numberWeekPage : 1));\n                        setCurrentGroupWeekIndex(numberWeekPage ? numberWeekPage - 1 : 0);\n                    } else {\n                        dispatch(saveWeekPage(0));\n                        setCurrentGroupWeekIndex(0);\n                    }\n\n                    arraySearch = await dispatch(getSearchTodo(finalData)) as any;\n                    if (arraySearch.payload && arraySearch.payload.arrayTodosSearch.length > 0) {\n                        dispatch(saveSearchPage(numberSearchPage ? numberSearchPage : 1));\n                        setCurrentGroupSearchIndex(numberSearchPage ? numberSearchPage - 1 : 0);\n                    } else {\n                        dispatch(saveSearchPage(0));\n                        setCurrentGroupSearchIndex(0);\n                    }\n                } else {\n                    arrayWeek = fetchDataFromLocalStorage();\n                    if (arrayWeek && arrayWeek.length > 0) {\n                        dispatch(saveWeekPage(numberWeekPage ? numberWeekPage : 1));\n                        setCurrentGroupWeekIndex(numberWeekPage ? numberWeekPage - 1 : 0);\n                    } else {\n                        dispatch(saveWeekPage(0));\n                        setCurrentGroupWeekIndex(0);\n                    }\n                    \n                    arraySearch = await searchLocalStoradge(finalData);\n                    await dispatch(saveArrayTodosSearch(arraySearch));\n                    if (arraySearch && arraySearch.length > 0) {\n                        dispatch(saveSearchPage(numberSearchPage ? numberSearchPage : 1));\n                        setCurrentGroupSearchIndex(numberSearchPage ? numberSearchPage - 1 : 0);\n                    } else {\n                        dispatch(saveSearchPage(0));\n                        setCurrentGroupSearchIndex(0);\n                    }\n                }\n            }\n        }\n        \n        const { urlData, weekPage, searchPage } = parseURL();\n            separationOfProcesses(urlData, weekPage, searchPage);\n\n    }, [dispatch, userLogin]);\n\n    //We change the URL when changing week or search pages\n    useEffect(() => {\n        const paramsURL = parseURL();\n        const newUrl = buildURL(paramsURL.urlData, searchPage, weekPage);\n        console.log('Url який сформувався і ми переходимо на нього', newUrl)\n        navigate(newUrl);\n    }, [weekPage, searchPage, navigate]);\n\n    const handlePageChange = (pageIndex: number, type: string) => {\n        if (type === \"search\") {\n            setCurrentGroupSearchIndex(pageIndex - 1);\n            dispatch(saveSearchPage(pageIndex))\n        } else if (type === \"week\") {\n            setCurrentGroupWeekIndex(pageIndex - 1);\n            dispatch(saveWeekPage(pageIndex))\n        }\n    };\n\n    return (\n        <section className={s.todoList} style={dynamicStyles}>\n            <Container>\n                <div>\n                    {arrayTodosWeek && arrayTodosWeek.length > 0 &&\n                        <div>\n                            <Text\n                                text={`Завдання, які потрібно завершити в наступні 7 днів (${arrayTodosWeek.length} шт)`}\n                                textClass=\"title-form-list\"\n                            />\n                            {currentGroupWeek && <ul className={s.todosGroup}>\n                                {currentGroupWeek.map((todo: ITodoServer) => (\n                                    <li key={todo._id}>\n                                        <TodoPreview {...todo} />\n                                    </li>\n                                ))}\n                            </ul>}\n                            <div>\n                                {totalPagesWeek > 0 && (<Pagination\n                                    totalPages={totalPagesWeek}\n                                    currentPage={currentGroupWeekIndex + 1}\n                                    onPageChange={(page) => handlePageChange(page, \"week\")}\n                                />)}        \n                            </div>\n                        </div>}\n                    {arrayTodosWeek && arrayTodosWeek.length === 0 &&\n                        <div>\n                            <Text\n                                text={'У вас не має завдань, які потрібно завершити в наступні 7 днів'}\n                                textClass=\"title-form-list\"\n                            />\n                        </div>}\n                    <div>\n                        <Text\n                            text={'Пошук завдань за критеріями'}\n                            textClass=\"title-form-list\"\n                        />\n                        <SearchTodo />\n                    </div>\n                <div>\n                {arrayTodosSearch && arrayTodosSearch.length > 0 && (\n                    <>\n                        { currentGroupSearch && <ul className={s.todosGroup}>\n                            {currentGroupSearch.map((todo: ITodoServer) => (\n                                <li key={todo._id}>\n                                    <TodoPreview {...todo} />\n                                </li>\n                            ))}\n                        </ul>}\n                        <div>\n                            {totalPagesSearch > 0 && (<Pagination\n                                totalPages={totalPagesSearch}\n                                currentPage={currentGroupSearchIndex + 1}\n                                onPageChange={(page) => handlePageChange(page, \"search\")}\n                            />)}        \n                        </div>\n                    </>\n                )}\n                </div>\n            </div>\n        </Container>\n    </section>\n    );\n}\n\nexport default TodoList;","import { useSelector } from 'react-redux';\nimport { getLogin } from '../../Redux/auth/auth-selectors'\nimport Text from '../../components/Shared/Text';\nimport TodoList from '../../components/TodoList/TodoList';\n\nconst TodoListPage: React.FC = () => {\n\n  const isUserLogin = useSelector(getLogin);\n\n  return (\n    <>\n      {!isUserLogin && (\n        <Text\n          text={'Зареєструйтесь, щоб отримати доступ до ваших завдань на різних пристроях'}\n          textClass=\"catalogTitle\"\n        />\n      )}\n      <TodoList/>\n    </>\n  );\n};\n\nexport default TodoListPage;\n"],"names":["_ref","width","height","_jsxs","viewBox","fill","xmlns","children","_jsx","d","_ref$dateFormat","dateFormat","showMonthYearPicker","value","handleChange","currentDate","Date","maxDate","setMonth","getMonth","_useState","useState","moment","_useState2","_slicedToArray","selectedDate","setSelectedDate","useEffect","CustomInput","forwardRef","_ref2","ref","onClick","_useState3","format","_useState4","displayDate","setDisplayDate","type","className","s","CalendarIcon","_Fragment","DatePicker","selected","toDate","onChange","date","handleDateChange","customInput","renderDayContents","dayOfMonth","selectedValue","startOf","currentValue","isSame","name","placeholder","required","options","defaultValue","labelClass","concat","label","selectClass","select","isMobile","useMediaQuery","maxWidth","isTablet","minWidth","customStyles","control","provided","state","_objectSpread","fontSize","color","pointerEvents","borderColor","isFocused","option","styles","isDisabled","isSelected","backgroundColor","textColor","undefined","display","alignItems","cursor","menu","marginTop","Select","theme","borderRadius","colors","primary","spanClass","props","inputClass","input","span","clearTextField","inputValue","setInputValue","isValue","setIsValue","handleInputChange","useCallback","e","newValue","target","onFocus","onBlur","title","CiSearch","size","style","marginRight","marginLeft","error","fields","username","email","password","subject","search","searchByPhrase","checkDate","today","isSameOrAfter","additionalInfo","dateFrom","dateTo","otherMembers","part","saveAfterDeadline","Text","text","textClass","FaClock","FaTimes","searchLocalStoradge","searchData","_searchData$searchByP","lowerCaseSearchPhrase","toLowerCase","localStorageData","localStorage","getItem","filteredTasks","JSON","parse","filter","task","searchByDate","startDate","endDate","momentDate","momentStartDate","momentEndDate","isBetween","isDateInRange","searchByPart","includes","searchByStatus","isBefore","isAfter","length","parseURL","urlParams","URLSearchParams","window","location","get","phrase","status","members","urlData","searchByOtherMembers","weekPage","searchPage","buildURL","set","String","queryString","toString","_id","showTodo","setShowTodo","navigate","useNavigate","openTodo","FontAwesomeIcon","icon","faTimes","Todo","faWrench","totalPages","currentPage","onPageChange","disabled","pageNumbers","startPage","Math","max","endPage","min","displayRange","page","push","getPageNumbers","map","dispatch","useAppDispatch","wrapperRef","useRef","useSelector","getOptionMenu","isUserLogin","getLogin","getWeekPage","arrayUser","getEmailList","finalListUser","setFinalListUser","_useState5","_useState6","selectedUsers","setSelectedUsers","_useState7","_useState8","isListVisible","setIsListVisible","_useState9","_useState10","setClearTextField","optionsStatus","handleClickOutside","event","current","contains","document","addEventListener","removeEventListener","_useForm","useForm","defaultValues","handleSubmit","reset","onSubmit","_asyncToGenerator","_regeneratorRuntime","mark","_callee","data","array","finalData","searchArray","newUrl","wrap","_context","prev","next","join","sent","saveArrayTodosSearch","getSearchTodo","payload","arrayTodosSearch","stop","_x","apply","arguments","container","formSection","todoSearchBox","todoSearchBoxPart","Controller","rules","render","_ref2$field","field","fieldState","SelectField","_ref3","_ref3$field","TextField","_ref4","Calendar","_ref5","_ref5$field","filteredUsers","scroll","index","lastListItem","list","checkbox","checked","user","_toConsumableArray","handleUserSelection","button","Button","btnClass","chunkArray","chunkSize","Array","from","ceil","_","slice","vpHeight","innerHeight","dynamicStyles","setDynamicStyles","userLogin","arrayTodosWeek","getArrayTodosWeek","getArrayTodosSearch","getSearchPage","itemsPerPage","totalPagesSearch","totalPagesWeek","currentGroupSearchIndex","setCurrentGroupSearchIndex","currentGroupWeekIndex","setCurrentGroupWeekIndex","chunkedTodosSearch","chunkedTodosWeek","currentGroupSearch","currentGroupWeek","minHeight","arraySearch","arrayWeek","clearArrayTodosSearch","clearArrayTodosWeek","fetchDataFromLocalStorage","validTodos","todo","diff","setItem","stringify","todosThisWeek","daysUntilDue","saveArrayTodosWeek","separationOfProcesses","numberWeekPage","numberSearchPage","Number","getTodosWeek","saveWeekPage","saveSearchPage","_x2","_x3","_parseURL","paramsURL","console","log","handlePageChange","pageIndex","Container","TodoPreview","Pagination","SearchTodo","TodoList"],"sourceRoot":""}