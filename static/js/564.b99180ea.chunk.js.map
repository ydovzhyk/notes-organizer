{"version":3,"file":"static/js/564.b99180ea.chunk.js","mappings":"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","sources":["webpack://notes-organizer/./src/components/CreateTodo/UserList.module.scss?2bd5","components/CreateTodo/UserList.tsx","components/Shared/Calendar/CalendarImage/CalendarImage.tsx","webpack://notes-organizer/./src/components/Shared/Calendar/Calendar.module.scss?fcee","components/Shared/Calendar/Calendar.tsx","webpack://notes-organizer/./src/components/Shared/Container/Container.module.scss?7328","components/Shared/Container/Container.tsx","webpack://notes-organizer/./src/components/Shared/Message/Message.module.scss?4cec","components/Shared/Message/Message.tsx","webpack://notes-organizer/./src/components/Shared/SelectField/SelectField.module.scss?ede3","components/Shared/SelectField/SelectField.tsx","webpack://notes-organizer/./src/components/Shared/TextField/TextField.module.scss?3228","components/Shared/TextField/TextField.tsx","components/Shared/TextField/fields.ts","webpack://notes-organizer/./src/components/Todo/Todo.module.scss?77b2","components/Todo/Todo.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"UserList_list__4gCWa\",\"lastListItem\":\"UserList_lastListItem__dyBV2\",\"scroll\":\"UserList_scroll__i4FBW\",\"checkbox\":\"UserList_checkbox__-yb02\"};","import React, { useState } from 'react';\nimport TextField from '../Shared/TextField';\nimport { fields } from '../Shared/TextField/fields'\n\nimport s from './UserList.module.scss'\n\nexport interface IUserList {\n    arrayUser: string[];\n    selectedUsers: string[];\n    setSelectedUsers: React.Dispatch<React.SetStateAction<string[]>>;\n}\n\nconst UserList: React.FC<IUserList> = ({ arrayUser, selectedUsers, setSelectedUsers }) => {\n    const [finalListUser, setFinalListUser] = useState<string[]>(arrayUser);\n    \n    const [checkedUsers, setCheckedUsers] = useState<string[]>(selectedUsers.length > 0 ? selectedUsers[0].split(', ') : []);\n\n    const handleUserSelection = (email: string) => {\n        if (checkedUsers.includes(email)) {\n            const processArray = checkedUsers.filter((user) => user !== email);\n            setSelectedUsers([processArray.join(', ')]);\n            setCheckedUsers(processArray);\n        } else {\n            const processArray = [...checkedUsers, email];\n            setSelectedUsers([processArray.join(', ')]);\n            setCheckedUsers(processArray);\n        }\n    };\n\n    const handleTextSearch = (e: React.ChangeEvent<HTMLInputElement>) => {\n        const text = e.target.value;\n        const filteredUsers = arrayUser.filter((email) => email.includes(text));\n        if (arrayUser.length > 0) {\n            setFinalListUser(filteredUsers);\n        } else {\n            setFinalListUser([text]);\n        }\n    };\n\n    return (\n        <>\n        <TextField\n            className=\"search\"\n            handleChange={handleTextSearch}\n            {...fields.search}\n        />\n        <ul className={s.scroll}>\n        {finalListUser.map((email, index) => (\n            <li key={email} className={index === finalListUser.length - 1 ? s.lastListItem : s.list}>\n                <label>\n                    <input\n                        type=\"checkbox\"\n                        className={s.checkbox}\n                        checked={checkedUsers.includes(email)}\n                        onChange={() => handleUserSelection(email)}\n                    />\n                    {email}\n                </label>\n            </li>\n            ))}\n            </ul>\n        </>\n    );\n};\n\nexport default UserList;","import React from \"react\";\n\ninterface ICalendarIconProps {\n  width: string;\n  height: string;\n}\n\nconst CalendarIcon: React.FC<ICalendarIconProps> = ({ width, height }) => {\n  return (\n    <svg\n      viewBox=\"0 0 20 20\"\n      width={width}\n      height={height}\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M17.475 2.067h-1.312v-.321a.586.586 0 1 0-1.171 0v.32h-1.617v-.32a.586.586 0 0 0-1.172 0v.32h-1.617v-.32a.586.586 0 1 0-1.172 0v.32H7.797v-.32a.586.586 0 0 0-1.172 0v.32H5.008v-.32a.586.586 0 0 0-1.171 0v.32H2.525A2.527 2.527 0 0 0 0 4.592v11.724a2.527 2.527 0 0 0 2.525 2.525h14.95A2.527 2.527 0 0 0 20 16.316V4.59a2.527 2.527 0 0 0-2.525-2.524Zm1.353 14.248c0 .746-.607 1.353-1.353 1.353H2.525a1.354 1.354 0 0 1-1.353-1.352V6.732h17.656v9.584Zm0-10.755H1.172v-.969c0-.745.607-1.352 1.353-1.352h1.312v.226a.586.586 0 0 0 1.171 0V3.24h1.617v.226a.586.586 0 0 0 1.172 0V3.24h1.617v.226a.586.586 0 0 0 1.172 0V3.24h1.617v.226a.586.586 0 0 0 1.172 0V3.24h1.617v.226a.586.586 0 1 0 1.171 0V3.24h1.312c.746 0 1.353.607 1.353 1.352v.97Z\"\n        fill=\"#52555F\"\n      />\n      <path\n        d=\"M6.532 7.982H4.22a.586.586 0 0 0-.586.586v2.392c0 .323.262.586.586.586h2.312a.586.586 0 0 0 .586-.586V8.568a.586.586 0 0 0-.586-.586Zm-.586 2.392h-1.14v-1.22h1.14v1.22ZM11.156 7.982H8.844a.586.586 0 0 0-.586.586v2.392c0 .323.262.586.586.586h2.312a.586.586 0 0 0 .586-.586V8.568a.586.586 0 0 0-.586-.586Zm-.586 2.392H9.43v-1.22h1.14v1.22ZM15.78 7.982h-2.312a.586.586 0 0 0-.586.586v2.392c0 .323.262.586.586.586h2.312a.586.586 0 0 0 .586-.586V8.568a.586.586 0 0 0-.586-.586Zm-.586 2.392h-1.14v-1.22h1.14v1.22ZM6.532 12.526H4.22a.586.586 0 0 0-.586.586v2.392c0 .323.262.586.586.586h2.312a.586.586 0 0 0 .586-.586v-2.392a.586.586 0 0 0-.586-.586Zm-.586 2.392h-1.14v-1.22h1.14v1.22ZM11.156 12.526H8.844a.586.586 0 0 0-.586.586v2.392c0 .323.262.586.586.586h2.312a.586.586 0 0 0 .586-.586v-2.392a.586.586 0 0 0-.586-.586Zm-.586 2.392H9.43v-1.22h1.14v1.22ZM15.78 12.526h-2.312a.586.586 0 0 0-.586.586v2.392c0 .323.262.586.586.586h2.312a.586.586 0 0 0 .586-.586v-2.392a.586.586 0 0 0-.586-.586Zm-.586 2.392h-1.14v-1.22h1.14v1.22Z\"\n        fill=\"#52555F\"\n      />\n    </svg>\n  );\n}\n\nexport default CalendarIcon;","// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"Calendar_btn__UdtWn\",\"selectedDay\":\"Calendar_selectedDay__2gUhl\",\"day\":\"Calendar_day__sFSOy\"};","import React, { useState, forwardRef, useEffect } from 'react';\nimport DatePicker from 'react-datepicker';\nimport moment, { Moment } from 'moment';\n\nimport CalendarIcon from './CalendarImage/CalendarImage';\nimport 'react-datepicker/dist/react-datepicker.css';\n\nimport s from './Calendar.module.scss';\n\ninterface ICalendarProps {\n  dateFormat: string;\n  showMonthYearPicker: boolean;\n  value: Date;\n  handleChange: (date: string) => void;\n}\n\nconst Calendar: React.FC<ICalendarProps> = ({\n  dateFormat = 'MM.dd.yyyy',\n  showMonthYearPicker,\n  value,\n  handleChange,\n}) => {\n  const currentDate = new Date();\n  const maxDate = new Date();\n  maxDate.setMonth(currentDate.getMonth() + 2);\n\n  const [selectedDate, setSelectedDate] = useState<Moment>( \n    moment(value, 'DD.MM.YYYY')\n  );\n\n  useEffect(() => {\n    setSelectedDate(moment(value, 'DD.MM.YYYY'));\n  }, [value]);\n\n  const handleDateChange = (date: Moment) => {\n    setSelectedDate(date);\n    handleChange(date.format('DD.MM.YYYY'));\n  };\n\n  const CustomInput = forwardRef<HTMLButtonElement, { onClick?: React.MouseEventHandler }>(({ onClick }, ref) => {\n    const [displayDate, setDisplayDate] = useState(\n      moment(selectedDate).format('DD.MM.yyyy')\n    );\n\n    useEffect(() => {\n      setDisplayDate(moment(selectedDate).format('DD.MM.yyyy'));\n    }, []);\n\n    return (\n      <button type=\"button\" className={s.btn} onClick={onClick} ref={ref}>\n        <CalendarIcon width=\"20\" height=\"18\" />\n        {displayDate}\n      </button>\n    );\n  });\n\n  const renderCustomDayContents = (dayOfMonth: number, date: Date) => {\n    const selectedValue = moment(selectedDate.toDate()).startOf('day');\n    const currentValue = moment(date).startOf('day');\n\n    if (selectedValue.isSame(currentValue)) {\n      return <div className={s.selectedDay}>{dayOfMonth}</div>;\n    }\n    return <div className={s.day}>{dayOfMonth}</div>;\n  };\n\n  return (\n    <>\n      <DatePicker\n        selected={selectedDate.toDate()}\n        onChange={date => handleDateChange(moment(date))}\n        customInput={<CustomInput />}\n        dateFormat={dateFormat}\n        showMonthYearPicker={showMonthYearPicker}\n        maxDate={maxDate}\n        renderDayContents={renderCustomDayContents}\n      />\n    </>\n  );\n}\n\nexport default Calendar;","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Container_container__NXBJZ\"};","import React, { ReactNode } from 'react';\nimport s from './Container.module.scss'\n\ninterface ContainerProps {\n    children: ReactNode;\n}\n\nconst Container: React.FC<ContainerProps> = ({ children }) => {\n    return <div className={s.container}>{children}</div>;\n};\n\nexport default Container;","// extracted by mini-css-extract-plugin\nexport default {\"message\":\"Message_message__ODRvr\",\"title\":\"Message_title__2S72I\",\"dismissButton\":\"Message_dismissButton__v2cnV\",\"boo\":\"Message_boo__bFH7r\",\"floating\":\"Message_floating__UDydH\",\"face\":\"Message_face__BNxDx\",\"shadow\":\"Message_shadow__oMueJ\",\"floatingShadow\":\"Message_floatingShadow__e1tkR\",\"ButtonsBlock\":\"Message_ButtonsBlock__yrYG+\",\"btnYes\":\"Message_btnYes__MdhAH\",\"btnNo\":\"Message_btnNo__eKG4k\"};","import React, { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { clearUserMessage } from '../../../Redux/auth/auth-slice';\nimport { clearTodoMessage, statusStopResetMessage } from '../../../Redux/todo/todo-slice';\n\nimport Text from '../Text/Text';\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport s from './Message.module.scss';\n\ninterface IMessageProps {\n  text: string;\n  onDismiss: () => void;\n  onChoice?: (choice: true | false) => void;\n  type: string;\n}\n\nconst Message: React.FC<IMessageProps> = ({ text, onDismiss, onChoice, type }) => {\n  const dispatch = useDispatch();\n  const [isDisplayed, setIsDisplayed] = useState(true);\n  const [isShowChoiceBtn, setIsShowChoiceBtn] = useState(false);\n\n  useEffect(() => {\n    if (text === 'You have tasks saved locally on your computer, would you like to synchronize them with the server?') {\n      setIsShowChoiceBtn(true);\n    } else {\n      setIsShowChoiceBtn(false);\n    }\n  }, [text]);\n\n  onDismiss();\n\n  const handleDismissClick = () => {\n    setIsDisplayed(false);\n    if (type === 'auth') {\n      dispatch(clearUserMessage());\n    } if (type === 'todo') {\n      dispatch(clearTodoMessage());\n      dispatch(statusStopResetMessage(false));\n    }\n  };\n\n  const handleConfirmClick = (choice: true | false) => {\n    if (onChoice) {\n      onChoice(choice);\n    }\n  };\n\n  useEffect(() => {\n    setIsDisplayed(true);\n  }, [text]);\n\n  if (!isDisplayed) {\n    return null;\n  }\n\n  return (\n    <div className={s.message}>\n      <button className={s.dismissButton} onClick={handleDismissClick}>\n        <FontAwesomeIcon icon={faTimes} size=\"lg\" />\n      </button>\n      <div className={s.boo}>\n        <div className={s.face} id=\"face\"></div>\n      </div>\n      <div className={s.shadow}></div>\n      <Text text={text} textClass=\"textMessage\" />\n      {isShowChoiceBtn && (<div className={s.ButtonsBlock}>\n        <button\n          className={s.btnYes}\n          onClick={() => handleConfirmClick(true)}\n        >\n          Yes\n        </button>\n        <button\n          className={s.btnNo}\n          onClick={() => handleConfirmClick(false)}\n        >\n          No\n        </button>\n      </div>\n      )}\n    </div>\n  );\n}\n\nexport default Message;","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"SelectField_label__Y87wK\",\"select\":\"SelectField_select__bwshq\",\"spanClass\":\"SelectField_spanClass__DB-dA\",\"createTodo\":\"SelectField_createTodo__z9Y6X\"};","import React from 'react';\nimport Select, { StylesConfig } from 'react-select';\nimport { useMediaQuery } from 'react-responsive';\n\nimport s from './SelectField.module.scss';\n\ninterface ISelectFieldProps {\n  name: string;\n  value: { value: string; label: string };\n  handleChange: (selectedOption: any) => void;\n  placeholder: string;\n  required: boolean;\n  options: { value: string; label: string }[];\n  className?: string;\n  defaultValue?: { value: string; label: string };\n}\n\nconst SelectField: React.FC<ISelectFieldProps> = ({\n  name,\n  value,\n  handleChange,\n  placeholder,\n  required,\n  options,\n  className,\n  defaultValue,\n}) => {\n  const labelClass = className ? `${s.label} ${s[className]}` : `${s.label}`;\n  const selectClass = className ? `${s.select} ${s[className]}` : `${s.select}`;\n\n  const isMobile = useMediaQuery({ maxWidth: 767 });\n  const isTablet = useMediaQuery({ minWidth: 768, maxWidth: 1279 });\n  // const isDesktop = useMediaQuery({ minWidth: 1280 });\n\n  const customStyles: StylesConfig = {\n  control: (provided: any, state) => ({\n    ...provided,\n    fontSize: isMobile ? '14px' : isTablet ? '15px' : '16px',\n    height: isMobile ? '38px' : isTablet ? '38px' : '48px',\n    color: 'var(--second-text-color)',\n    pointerEvents: 'auto',\n    borderColor: state.isFocused ? 'white' : provided.borderColor,\n  }),\n  option: (styles, { isDisabled, isFocused, isSelected }) => {\n    const backgroundColor = isSelected\n        ? 'black'\n        : isFocused\n        ? 'rgba(0, 0, 0, 0.3)' \n        : 'white';\n\n    const textColor = isSelected ? 'white' : 'black';\n\n    return {\n        ...styles,\n        backgroundColor: isDisabled ? undefined : backgroundColor,\n        color: isDisabled ? '#ccc' : textColor,\n        height: isMobile ? '38px' : isTablet ? '38px' : '48px',\n        display: 'flex',\n        alignItems: 'center',\n        cursor: isDisabled ? 'not-allowed' : 'default',\n        ':active': {\n            ...styles[':active'],\n            backgroundColor: !isDisabled ? isSelected ? 'black' : 'rgba(0, 0, 0, 0.3)' : undefined,\n        },\n    };\n    },\n    menu: (provided, state) => ({\n      ...provided,\n      marginTop: isMobile ? '-8px' : isTablet ? '-8px' : '2px',\n    }),\n};\n\n  return (\n    <label className={labelClass}>\n      <Select\n        className={selectClass}\n        name={name}\n        value={value}\n        onChange={handleChange}\n        placeholder={placeholder}\n        required={required}\n        options={options}\n        styles={customStyles}\n        defaultValue={defaultValue}\n        theme={(theme) => ({\n          ...theme,\n          borderRadius: 0,\n          colors: {\n          ...theme.colors,\n          primary: 'black',\n          },\n        })}\n      />\n      {!defaultValue && value.value === '' && (\n        <span className={s.spanClass}>{placeholder}</span>\n      )}\n    </label>\n  );\n};\n\nexport default SelectField;\n","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"TextField_label__kp4Pv\",\"input\":\"TextField_input__JDykO\",\"error\":\"TextField_error__92ab9\",\"span\":\"TextField_span__qcPmc\",\"value\":\"TextField_value__Rhply\",\"createTodo\":\"TextField_createTodo__PD23L\",\"search\":\"TextField_search__dl4gh\",\"searchIST\":\"TextField_searchIST__LvGwH\"};","import { ChangeEvent, forwardRef, ChangeEventHandler, useState, useEffect, useCallback} from 'react';\nimport { FieldError, Control } from 'react-hook-form';\nimport { useMediaQuery } from 'react-responsive';\nimport { CiSearch } from 'react-icons/ci';\n\nimport s from './TextField.module.scss';\n\nexport interface ITextFieldProps {\n  type?: string;\n  name?: string;\n  value?: string;\n  handleChange?: ChangeEventHandler<HTMLInputElement>;\n  placeholder?: string | string[];\n  required?: boolean;\n  title?: string;\n  className?: string;\n  error?: FieldError;\n  control?: Control<any>;\n  onFocus?: () => void;\n  onBlur?: () => void;\n  clearTextField?: boolean;\n}\n\nconst TextField = forwardRef<HTMLInputElement, ITextFieldProps>((props, ref) => {\n  const labelClass = props.className ? `${s.label} ${s[props.className]}` : `${s.label}`;\n  const inputClass = props.className ? `${s.input} ${s[props.className]}` : `${s.input}`;\n  const spanClass = props.className ? `${s.span} ${s[props.className]}` : `${s.span}`;\n  const clearTextField = props.clearTextField;\n  const isTablet = useMediaQuery({ minWidth: 768, maxWidth: 1279 });\n  const [inputValue, setInputValue] = useState<string>(props.value || '');\n\n  const [isValue, setIsValue] = useState<boolean>(false);\n\n  const handleInputChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    const newValue = e.target.value; \n    setInputValue(newValue);\n\n    if (props.handleChange) {\n      props.handleChange(e);\n    }\n    if (newValue !== '') {\n      setIsValue(true);\n    } else {\n      setIsValue(false);\n    }\n  }, [props]);\n\n  useEffect(() => { \n    if (props.value === '') {\n      setInputValue('');\n    } else {\n      if (props.value) {\n        setInputValue(props.value);\n      }\n    }\n  }, [props.value]);\n\n  //скидуэмо значення Input коли користувач був обраний\n  useEffect(() => {\n    if (clearTextField) {\n      setInputValue('');\n      setIsValue(false);\n      const fakeEvent = {\n        target: {\n          value: '',\n        },\n      } as ChangeEvent<HTMLInputElement>;\n\n      handleInputChange(fakeEvent);\n    } else {\n      return;\n    }\n  }, [clearTextField, handleInputChange]);\n  \n  const handleFocus = () => {\n    if (props.onFocus) {\n      props.onFocus();\n    }\n  };\n\n  const handleBlur = () => {\n    if (props.onBlur) {\n      props.onBlur();\n    }\n  };\n\n  return (\n      <label className={labelClass}>\n        <input\n          ref={ref}\n          className={inputClass}\n          type={props.type}\n          name={props.name}\n          value={inputValue}\n          onChange={handleInputChange}\n          onFocus={handleFocus}\n          onBlur={handleBlur}\n          required={props.required}\n          title={props.title}\n      />\n      {(props.className === 'search' || props.className === 'searchIST') && !isValue &&\n        <span className={spanClass}>\n          <CiSearch size={24} style={{ marginRight: isTablet ? '5px' : '10px', marginLeft: '10px'}}/>\n          {props.placeholder}\n        </span>\n      }\n      {props.className !== 'search' && props.className !== 'searchIST' && !isValue &&\n        <span className={spanClass}>\n          {props.placeholder}\n        </span>\n      }\n        {props.error && <p className={s.error}>{props.title}</p>}\n      </label>\n  );\n});\n\nexport default TextField;\n\n","import { ITextFieldProps } from \"./TextField\";\n\nexport const fields = {\n  username: {\n    label: 'User name',\n    name: 'username',\n    type: 'text',\n    placeholder: 'User name*',\n    title: '*The Name field must be more than 2 and less than 31 characters',\n    required: true,\n  } as ITextFieldProps,\n  email: {\n    label: 'Email',\n    name: 'email',\n    type: 'text',\n    placeholder: 'Email*',\n    title: '*Enter a valid email',\n    required: true,\n  } as ITextFieldProps,\n  password: {\n    label: 'Password',\n    name: 'password',\n    type: 'password',\n    placeholder: 'Password*',\n    title: '*The Password field must be more than 2 and less than 21 characters',\n    required: true,\n  } as ITextFieldProps,\n  subject: {\n    label: 'Subject',\n    name: 'subject',\n    type: 'text',\n    placeholder: '',\n    title: '*The Subject field must be more than 2 characters',\n    required: true,\n  } as ITextFieldProps,\n  search: {\n    label: 'Search',\n    name: 'search',\n    type: 'text',\n    placeholder: 'Введіть email для пошуку',\n    title: '*The Subject field must be more than 2 characters',\n    required: false,\n  } as ITextFieldProps,\n  searchByPhrase: {\n    label: 'searchByPhrase',\n    name: 'searchByPhrase',\n    type: 'text',\n    placeholder: 'Введіть слово чи фразу для пошуку',\n    title: '*The Subject field must be more than 2 characters',\n    required: false,\n  } as ITextFieldProps,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"todo\":\"Todo_todo__KBW37\",\"todoCard\":\"Todo_todoCard__VEgLx\",\"cardBorder\":\"Todo_cardBorder__bjTLN\",\"partData\":\"Todo_partData__JQyQq\",\"partDataAddInfoUser\":\"Todo_partDataAddInfoUser__Gt4CD\",\"partDataDate\":\"Todo_partDataDate__IPJq4\",\"cardGroup\":\"Todo_cardGroup__NtaSa\",\"cardGroupMobile\":\"Todo_cardGroupMobile__Jkeu6\",\"todoStatus\":\"Todo_todoStatus__GEFX5\",\"scroll\":\"Todo_scroll__ZLtcw\"};","import React from 'react';\nimport moment from 'moment';\nimport { useMediaQuery } from 'react-responsive';\nimport Text from '../Shared/Text'\nimport { FaClock, FaTimes } from 'react-icons/fa';\nimport s from './Todo.module.scss';\n\nexport interface ITodoProps {\n    additionalInfo: string ,\n    dateFrom: string,\n    dateTo: string,\n    otherMembers: string,\n    part: string,\n    subject: string,\n    saveAfterDeadline: boolean,\n}\n\nconst checkDate = (date: string) => {\n    const today = moment();\n    const dueDate = moment(date, 'DD.MM.YYYY');\n\n    if (dueDate.isSameOrAfter(today, 'day')) {\n        return 'Виконується';\n    } else {\n        return 'Термін виконання минув';\n    }\n}\n\nconst Todo: React.FC<ITodoProps> = ({ additionalInfo, dateFrom, dateTo, otherMembers, part, subject, saveAfterDeadline }) => {\n    const isMobile = useMediaQuery({ maxWidth: 767 });\n\n    return (\n        <div className={s.todo}>\n            <div>\n            <Text\n                text={'Перегляд завдання'}\n                textClass=\"title-form-list\"\n            />\n            <div className={s.todoCard}>\n                {dateFrom && dateTo && <div className={s.todoStatus}>\n                    <Text\n                        text={checkDate(dateTo)}\n                        textClass=\"title-form-todo\"\n                    />\n                    {checkDate(dateTo) === 'Виконується' ?\n                        <FaClock color=\"green\" size=\"30px\" style={{ marginLeft: '20px', marginRight: '20px' }} /> :\n                        <FaTimes color=\"red\" size=\"30px\" style={{ marginLeft: '20px', marginRight: '20px' }} />}\n                </div>}\n                    {!isMobile && (<ul className={s.cardBorder}>\n                        <li className={s.cardGroup}>\n                            <div>\n                                <Text\n                                    text={'Розділ'}\n                                    textClass=\"title-form-todo\"\n                                />\n                                <div className={s.partData}>\n                                    <Text\n                                        text={part}\n                                        textClass=\"hidenInputTodo\"\n                                    />\n                                </div>\n                            </div>\n                            <div>\n                                <Text\n                                    text={'Дата початку'}\n                                    textClass=\"title-form-todo\"\n                                />\n                                <div className={s.partDataDate}>\n                                    <Text\n                                        text={dateFrom}\n                                        textClass=\"hidenInput\"\n                                    />\n                                </div>\n                            </div>\n                        </li>\n                        <li className={s.cardGroup}>\n                            <div>\n                                <Text\n                                    text={'Тема'}\n                                    textClass=\"title-form-todo\"\n                                />\n                                <div className={s.partData}>\n                                    <Text\n                                        text={subject}\n                                        textClass=\"hidenInput\"\n                                    />\n                                </div>\n                            </div>\n                            <div>\n                                <Text\n                                    text={'Дата закінчення'}\n                                    textClass=\"title-form-todo\"\n                                />\n                                <div className={s.partDataDate}>\n                                    <Text\n                                        text={dateTo}\n                                        textClass=\"hidenInput\"\n                                    />\n                                </div>\n                            </div>\n                        </li>\n                        <li className={s.cardGroup}>\n                            <div>\n                                <Text\n                                    text={'Додаткова інформація'}\n                                    textClass=\"title-form-todo\"\n                                />\n                                <div className={s.partDataAddInfoUser}>\n                                    <div className={s.scroll}>\n                                        <Text\n                                            text={additionalInfo}\n                                            textClass=\"hidenInputAddInfoUser\"\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                        </li>\n                        {otherMembers && <li className={s.cardGroup}>\n                            <div>\n                                <Text\n                                    text={'Користувачі спільного завдання'}\n                                    textClass=\"title-form-todo\"\n                                />\n                                <div className={s.partDataAddInfoUser}>\n                                    <Text\n                                        text={otherMembers}\n                                        textClass=\"hidenInputAddInfoUser\"\n                                    />\n                                </div>\n                            </div>\n                        </li>}\n                        <Text\n                            text={saveAfterDeadline ?\n                                '*Ваше завдання буде збережене після закінчення терміну його виконання' :\n                                '*Ваше завдання буде видалено після закінчення терміну його виконання'}\n                            textClass=\"title-form-todo\"\n                        />\n                    </ul>)}\n                    {isMobile && (<ul className={s.cardBorder}>\n                        <li className={s.cardGroupMobile}>\n                            <div>\n                                <Text\n                                    text={'Розділ'}\n                                    textClass=\"title-form-todo\"\n                                />\n                                <div className={s.partData}>\n                                    <Text\n                                        text={part}\n                                        textClass=\"hidenInputTodo\"\n                                    />\n                                </div>\n                            </div>\n                            <div>\n                                <Text\n                                    text={'Тема'}\n                                    textClass=\"title-form-todo\"\n                                />\n                                <div className={s.partData}>\n                                    <Text\n                                        text={subject}\n                                        textClass=\"hidenInput\"\n                                    />\n                                </div>\n                            </div>\n                        </li>\n                        <li className={s.cardGroupMobile}>\n                            <div>\n                                <Text\n                                    text={'Дата початку'}\n                                    textClass=\"title-form-todo\"\n                                />\n                                <div className={s.partDataDate}>\n                                    <Text\n                                        text={dateFrom}\n                                        textClass=\"hidenInput\"\n                                    />\n                                </div>\n                            </div>\n                            <div>\n                                <Text\n                                    text={'Дата закінчення'}\n                                    textClass=\"title-form-todo\"\n                                />\n                                <div className={s.partDataDate}>\n                                    <Text\n                                        text={dateTo}\n                                        textClass=\"hidenInput\"\n                                    />\n                                </div>\n                            </div>\n                        </li>\n                        <li className={s.cardGroupMobile}>\n                            <div>\n                                <Text\n                                    text={'Додаткова інформація'}\n                                    textClass=\"title-form-todo\"\n                                />\n                                <div className={s.partDataAddInfoUser}>\n                                    <div className={s.scroll}>\n                                        <Text\n                                            text={additionalInfo}\n                                            textClass=\"hidenInputAddInfoUser\"\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                        </li>\n                        {otherMembers && (<li className={s.cardGroupMobile}>\n                            <div>\n                                <Text\n                                    text={'Користувачі спільного завдання'}\n                                    textClass=\"title-form-todo\"\n                                />\n                                <div className={s.partDataAddInfoUser}>\n                                    <Text\n                                        text={otherMembers}\n                                        textClass=\"hidenInputAddInfoUser\"\n                                    />\n                                </div>\n                            </div>\n                        </li>)}\n                        <Text\n                            text={saveAfterDeadline ?\n                                '*Ваше завдання буде збережене після закінчення терміну його виконання' :\n                                '*Ваше завдання буде видалено після закінчення терміну його виконання'}\n                            textClass=\"title-form-todo\"\n                        />\n                    </ul>)}\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Todo;"],"names":["_ref","arrayUser","selectedUsers","setSelectedUsers","_useState","useState","_useState2","_slicedToArray","finalListUser","setFinalListUser","_useState3","length","split","_useState4","checkedUsers","setCheckedUsers","_jsxs","_Fragment","children","_jsx","TextField","_objectSpread","className","handleChange","e","text","target","value","filteredUsers","filter","email","includes","fields","search","s","map","index","type","checked","onChange","processArray","user","join","concat","_toConsumableArray","handleUserSelection","width","height","viewBox","fill","xmlns","d","_ref$dateFormat","dateFormat","showMonthYearPicker","currentDate","Date","maxDate","setMonth","getMonth","moment","selectedDate","setSelectedDate","useEffect","CustomInput","forwardRef","_ref2","ref","onClick","format","displayDate","setDisplayDate","CalendarIcon","DatePicker","selected","toDate","date","handleDateChange","customInput","renderDayContents","dayOfMonth","selectedValue","startOf","currentValue","isSame","onDismiss","onChoice","dispatch","useDispatch","isDisplayed","setIsDisplayed","isShowChoiceBtn","setIsShowChoiceBtn","handleConfirmClick","choice","clearUserMessage","clearTodoMessage","statusStopResetMessage","FontAwesomeIcon","icon","faTimes","size","id","Text","textClass","name","placeholder","required","options","defaultValue","labelClass","label","selectClass","select","isMobile","useMediaQuery","maxWidth","isTablet","minWidth","customStyles","control","provided","state","fontSize","color","pointerEvents","borderColor","isFocused","option","styles","isDisabled","isSelected","backgroundColor","textColor","undefined","display","alignItems","cursor","menu","marginTop","Select","theme","borderRadius","colors","primary","spanClass","props","inputClass","input","span","clearTextField","inputValue","setInputValue","isValue","setIsValue","handleInputChange","useCallback","newValue","onFocus","onBlur","title","CiSearch","style","marginRight","marginLeft","error","username","password","subject","searchByPhrase","checkDate","today","isSameOrAfter","additionalInfo","dateFrom","dateTo","otherMembers","part","saveAfterDeadline","FaClock","FaTimes"],"sourceRoot":""}