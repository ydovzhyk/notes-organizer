{"version":3,"file":"static/js/442.81a48290.chunk.js","mappings":"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","sources":["webpack://notes-organizer/./src/components/CreateTodo/UserList.module.scss?843a","components/CreateTodo/UserList.tsx","components/Shared/Calendar/CalendarImage/CalendarImage.tsx","webpack://notes-organizer/./src/components/Shared/Calendar/Calendar.module.scss?d351","components/Shared/Calendar/Calendar.tsx","webpack://notes-organizer/./src/components/Shared/Container/Container.module.scss?3aa5","components/Shared/Container/Container.tsx","webpack://notes-organizer/./src/components/Shared/Message/Message.module.scss?2048","components/Shared/Message/Message.tsx","webpack://notes-organizer/./src/components/Shared/SelectField/SelectField.module.scss?fd33","components/Shared/SelectField/SelectField.tsx","webpack://notes-organizer/./src/components/Shared/TextField/TextField.module.scss?7131","components/Shared/TextField/TextField.tsx","components/Shared/TextField/fields.ts","webpack://notes-organizer/./src/components/Todo/Todo.module.scss?bedd","components/Todo/Todo.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"UserList_list__4gCWa\",\"lastListItem\":\"UserList_lastListItem__dyBV2\",\"scroll\":\"UserList_scroll__i4FBW\",\"checkbox\":\"UserList_checkbox__-yb02\"};","import React, { useState } from 'react';\nimport TextField from '../Shared/TextField';\nimport { fields } from '../Shared/TextField/fields';\n\nimport s from './UserList.module.scss';\n\nexport interface IUserList {\n  arrayUser: string[];\n  selectedUsers: string[];\n  setSelectedUsers: React.Dispatch<React.SetStateAction<string[]>>;\n}\n\nconst UserList: React.FC<IUserList> = ({\n  arrayUser,\n  selectedUsers,\n  setSelectedUsers,\n}) => {\n  const [finalListUser, setFinalListUser] = useState<string[]>(arrayUser);\n\n  const [checkedUsers, setCheckedUsers] = useState<string[]>(\n    selectedUsers.length > 0 ? selectedUsers[0].split(', ') : []\n  );\n\n  const handleUserSelection = (email: string) => {\n    if (checkedUsers.includes(email)) {\n      const processArray = checkedUsers.filter(user => user !== email);\n      setSelectedUsers([processArray.join(', ')]);\n      setCheckedUsers(processArray);\n    } else {\n      const processArray = [...checkedUsers, email];\n      setSelectedUsers([processArray.join(', ')]);\n      setCheckedUsers(processArray);\n    }\n  };\n\n  const handleTextSearch = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const text = e.target.value;\n    const filteredUsers = arrayUser.filter(email => email.includes(text));\n    if (arrayUser.length > 0) {\n      setFinalListUser(filteredUsers);\n    } else {\n      setFinalListUser([text]);\n    }\n  };\n\n  return (\n    <>\n      <TextField\n        className=\"search\"\n        handleChange={handleTextSearch}\n        {...fields.search}\n      />\n      <ul className={s.scroll}>\n        {finalListUser.map((email, index) => (\n          <li\n            key={email}\n            className={\n              index === finalListUser.length - 1 ? s.lastListItem : s.list\n            }\n          >\n            <label>\n              <input\n                type=\"checkbox\"\n                className={s.checkbox}\n                checked={checkedUsers.includes(email)}\n                onChange={() => handleUserSelection(email)}\n              />\n              {email}\n            </label>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nexport default UserList;\n","import React from 'react';\n\ninterface ICalendarIconProps {\n  width: string;\n  height: string;\n}\n\nconst CalendarIcon: React.FC<ICalendarIconProps> = ({ width, height }) => {\n  return (\n    <svg\n      viewBox=\"0 0 20 20\"\n      width={width}\n      height={height}\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M17.475 2.067h-1.312v-.321a.586.586 0 1 0-1.171 0v.32h-1.617v-.32a.586.586 0 0 0-1.172 0v.32h-1.617v-.32a.586.586 0 1 0-1.172 0v.32H7.797v-.32a.586.586 0 0 0-1.172 0v.32H5.008v-.32a.586.586 0 0 0-1.171 0v.32H2.525A2.527 2.527 0 0 0 0 4.592v11.724a2.527 2.527 0 0 0 2.525 2.525h14.95A2.527 2.527 0 0 0 20 16.316V4.59a2.527 2.527 0 0 0-2.525-2.524Zm1.353 14.248c0 .746-.607 1.353-1.353 1.353H2.525a1.354 1.354 0 0 1-1.353-1.352V6.732h17.656v9.584Zm0-10.755H1.172v-.969c0-.745.607-1.352 1.353-1.352h1.312v.226a.586.586 0 0 0 1.171 0V3.24h1.617v.226a.586.586 0 0 0 1.172 0V3.24h1.617v.226a.586.586 0 0 0 1.172 0V3.24h1.617v.226a.586.586 0 0 0 1.172 0V3.24h1.617v.226a.586.586 0 1 0 1.171 0V3.24h1.312c.746 0 1.353.607 1.353 1.352v.97Z\"\n        fill=\"#52555F\"\n      />\n      <path\n        d=\"M6.532 7.982H4.22a.586.586 0 0 0-.586.586v2.392c0 .323.262.586.586.586h2.312a.586.586 0 0 0 .586-.586V8.568a.586.586 0 0 0-.586-.586Zm-.586 2.392h-1.14v-1.22h1.14v1.22ZM11.156 7.982H8.844a.586.586 0 0 0-.586.586v2.392c0 .323.262.586.586.586h2.312a.586.586 0 0 0 .586-.586V8.568a.586.586 0 0 0-.586-.586Zm-.586 2.392H9.43v-1.22h1.14v1.22ZM15.78 7.982h-2.312a.586.586 0 0 0-.586.586v2.392c0 .323.262.586.586.586h2.312a.586.586 0 0 0 .586-.586V8.568a.586.586 0 0 0-.586-.586Zm-.586 2.392h-1.14v-1.22h1.14v1.22ZM6.532 12.526H4.22a.586.586 0 0 0-.586.586v2.392c0 .323.262.586.586.586h2.312a.586.586 0 0 0 .586-.586v-2.392a.586.586 0 0 0-.586-.586Zm-.586 2.392h-1.14v-1.22h1.14v1.22ZM11.156 12.526H8.844a.586.586 0 0 0-.586.586v2.392c0 .323.262.586.586.586h2.312a.586.586 0 0 0 .586-.586v-2.392a.586.586 0 0 0-.586-.586Zm-.586 2.392H9.43v-1.22h1.14v1.22ZM15.78 12.526h-2.312a.586.586 0 0 0-.586.586v2.392c0 .323.262.586.586.586h2.312a.586.586 0 0 0 .586-.586v-2.392a.586.586 0 0 0-.586-.586Zm-.586 2.392h-1.14v-1.22h1.14v1.22Z\"\n        fill=\"#52555F\"\n      />\n    </svg>\n  );\n};\n\nexport default CalendarIcon;\n","// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"Calendar_btn__UdtWn\",\"selectedDay\":\"Calendar_selectedDay__2gUhl\",\"day\":\"Calendar_day__sFSOy\"};","import React, { useState, forwardRef, useEffect } from 'react';\nimport DatePicker from 'react-datepicker';\nimport moment, { Moment } from 'moment';\n\nimport CalendarIcon from './CalendarImage/CalendarImage';\nimport 'react-datepicker/dist/react-datepicker.css';\n\nimport s from './Calendar.module.scss';\n\ninterface ICalendarProps {\n  dateFormat: string;\n  showMonthYearPicker: boolean;\n  value: Date;\n  handleChange: (date: string) => void;\n}\n\nconst Calendar: React.FC<ICalendarProps> = ({\n  dateFormat = 'MM.dd.yyyy',\n  showMonthYearPicker,\n  value,\n  handleChange,\n}) => {\n  const currentDate = new Date();\n  const maxDate = new Date();\n  maxDate.setMonth(currentDate.getMonth() + 2);\n\n  const [selectedDate, setSelectedDate] = useState<Moment>(\n    moment(value, 'DD.MM.YYYY')\n  );\n\n  useEffect(() => {\n    setSelectedDate(moment(value, 'DD.MM.YYYY'));\n  }, [value]);\n\n  const handleDateChange = (date: Moment) => {\n    setSelectedDate(date);\n    handleChange(date.format('DD.MM.YYYY'));\n  };\n\n  const CustomInput = forwardRef<\n    HTMLButtonElement,\n    { onClick?: React.MouseEventHandler }\n  >(({ onClick }, ref) => {\n    const [displayDate, setDisplayDate] = useState(\n      moment(selectedDate).format('DD.MM.yyyy')\n    );\n\n    useEffect(() => {\n      setDisplayDate(moment(selectedDate).format('DD.MM.yyyy'));\n    }, []);\n\n    return (\n      <button type=\"button\" className={s.btn} onClick={onClick} ref={ref}>\n        <CalendarIcon width=\"20\" height=\"18\" />\n        {displayDate}\n      </button>\n    );\n  });\n\n  const renderCustomDayContents = (dayOfMonth: number, date: Date) => {\n    const selectedValue = moment(selectedDate.toDate()).startOf('day');\n    const currentValue = moment(date).startOf('day');\n\n    if (selectedValue.isSame(currentValue)) {\n      return <div className={s.selectedDay}>{dayOfMonth}</div>;\n    }\n    return <div className={s.day}>{dayOfMonth}</div>;\n  };\n\n  return (\n    <>\n      <DatePicker\n        selected={selectedDate.toDate()}\n        onChange={date => handleDateChange(moment(date))}\n        customInput={<CustomInput />}\n        dateFormat={dateFormat}\n        showMonthYearPicker={showMonthYearPicker}\n        maxDate={maxDate}\n        renderDayContents={renderCustomDayContents}\n      />\n    </>\n  );\n};\n\nexport default Calendar;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Container_container__NXBJZ\"};","import React, { ReactNode } from 'react';\nimport s from './Container.module.scss';\n\ninterface ContainerProps {\n  children: ReactNode;\n}\n\nconst Container: React.FC<ContainerProps> = ({ children }) => {\n  return <div className={s.container}>{children}</div>;\n};\n\nexport default Container;\n","// extracted by mini-css-extract-plugin\nexport default {\"message\":\"Message_message__ODRvr\",\"title\":\"Message_title__2S72I\",\"dismissButton\":\"Message_dismissButton__v2cnV\",\"boo\":\"Message_boo__bFH7r\",\"floating\":\"Message_floating__UDydH\",\"face\":\"Message_face__BNxDx\",\"shadow\":\"Message_shadow__oMueJ\",\"floatingShadow\":\"Message_floatingShadow__e1tkR\",\"ButtonsBlock\":\"Message_ButtonsBlock__yrYG+\",\"btnYes\":\"Message_btnYes__MdhAH\",\"btnNo\":\"Message_btnNo__eKG4k\"};","import React, { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { clearUserMessage } from '../../../Redux/auth/auth-slice';\nimport {\n  clearTodoMessage,\n  statusStopResetMessage,\n} from '../../../Redux/todo/todo-slice';\n\nimport Text from '../Text/Text';\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport s from './Message.module.scss';\n\ninterface IMessageProps {\n  text: string;\n  onDismiss: () => void;\n  onChoice?: (choice: true | false) => void;\n  type: string;\n}\n\nconst Message: React.FC<IMessageProps> = ({\n  text,\n  onDismiss,\n  onChoice,\n  type,\n}) => {\n  const dispatch = useDispatch();\n  const [isDisplayed, setIsDisplayed] = useState(true);\n  const [isShowChoiceBtn, setIsShowChoiceBtn] = useState(false);\n\n  useEffect(() => {\n    if (\n      text ===\n      'You have tasks saved locally on your computer, would you like to synchronize them with the server?'\n    ) {\n      setIsShowChoiceBtn(true);\n    } else {\n      setIsShowChoiceBtn(false);\n    }\n  }, [text]);\n\n  onDismiss();\n\n  const handleDismissClick = () => {\n    setIsDisplayed(false);\n    if (type === 'auth') {\n      dispatch(clearUserMessage());\n    }\n    if (type === 'todo') {\n      dispatch(clearTodoMessage());\n      dispatch(statusStopResetMessage(false));\n    }\n  };\n\n  const handleConfirmClick = (choice: true | false) => {\n    if (onChoice) {\n      onChoice(choice);\n    }\n  };\n\n  useEffect(() => {\n    setIsDisplayed(true);\n  }, [text]);\n\n  if (!isDisplayed) {\n    return null;\n  }\n\n  return (\n    <div className={s.message}>\n      <button className={s.dismissButton} onClick={handleDismissClick}>\n        <FontAwesomeIcon icon={faTimes} size=\"lg\" />\n      </button>\n      <div className={s.boo}>\n        <div className={s.face} id=\"face\"></div>\n      </div>\n      <div className={s.shadow}></div>\n      <Text text={text} textClass=\"textMessage\" />\n      {isShowChoiceBtn && (\n        <div className={s.ButtonsBlock}>\n          <button className={s.btnYes} onClick={() => handleConfirmClick(true)}>\n            Yes\n          </button>\n          <button className={s.btnNo} onClick={() => handleConfirmClick(false)}>\n            No\n          </button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Message;\n","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"SelectField_label__Y87wK\",\"select\":\"SelectField_select__bwshq\",\"spanClass\":\"SelectField_spanClass__DB-dA\",\"createTodo\":\"SelectField_createTodo__z9Y6X\"};","import React from 'react';\nimport Select, { StylesConfig } from 'react-select';\nimport { useMediaQuery } from 'react-responsive';\n\nimport s from './SelectField.module.scss';\n\ninterface ISelectFieldProps {\n  name: string;\n  value: { value: string; label: string };\n  handleChange: (selectedOption: any) => void;\n  placeholder: string;\n  required: boolean;\n  options: { value: string; label: string }[];\n  className?: string;\n  defaultValue?: { value: string; label: string };\n}\n\nconst SelectField: React.FC<ISelectFieldProps> = ({\n  name,\n  value,\n  handleChange,\n  placeholder,\n  required,\n  options,\n  className,\n  defaultValue,\n}) => {\n  const labelClass = className ? `${s.label} ${s[className]}` : `${s.label}`;\n  const selectClass = className ? `${s.select} ${s[className]}` : `${s.select}`;\n\n  const isMobile = useMediaQuery({ maxWidth: 767 });\n  const isTablet = useMediaQuery({ minWidth: 768, maxWidth: 1279 });\n  // const isDesktop = useMediaQuery({ minWidth: 1280 });\n\n  const customStyles: StylesConfig = {\n    control: (provided: any, state) => ({\n      ...provided,\n      fontSize: isMobile ? '14px' : isTablet ? '15px' : '16px',\n      height: isMobile ? '38px' : isTablet ? '38px' : '48px',\n      color: 'var(--second-text-color)',\n      pointerEvents: 'auto',\n      borderColor: state.isFocused ? 'white' : provided.borderColor,\n    }),\n    option: (styles, { isDisabled, isFocused, isSelected }) => {\n      const backgroundColor = isSelected\n        ? 'black'\n        : isFocused\n          ? 'rgba(0, 0, 0, 0.3)'\n          : 'white';\n\n      const textColor = isSelected ? 'white' : 'black';\n\n      return {\n        ...styles,\n        backgroundColor: isDisabled ? undefined : backgroundColor,\n        color: isDisabled ? '#ccc' : textColor,\n        height: isMobile ? '38px' : isTablet ? '38px' : '48px',\n        display: 'flex',\n        alignItems: 'center',\n        cursor: isDisabled ? 'not-allowed' : 'default',\n        ':active': {\n          ...styles[':active'],\n          backgroundColor: !isDisabled\n            ? isSelected\n              ? 'black'\n              : 'rgba(0, 0, 0, 0.3)'\n            : undefined,\n        },\n      };\n    },\n    menu: (provided, state) => ({\n      ...provided,\n      marginTop: isMobile ? '-8px' : isTablet ? '-8px' : '2px',\n    }),\n  };\n\n  return (\n    <label className={labelClass}>\n      <Select\n        className={selectClass}\n        name={name}\n        value={value}\n        onChange={handleChange}\n        placeholder={placeholder}\n        required={required}\n        options={options}\n        styles={customStyles}\n        defaultValue={defaultValue}\n        theme={theme => ({\n          ...theme,\n          borderRadius: 0,\n          colors: {\n            ...theme.colors,\n            primary: 'black',\n          },\n        })}\n      />\n      {!defaultValue && value.value === '' && (\n        <span className={s.spanClass}>{placeholder}</span>\n      )}\n    </label>\n  );\n};\n\nexport default SelectField;\n","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"TextField_label__kp4Pv\",\"input\":\"TextField_input__JDykO\",\"error\":\"TextField_error__92ab9\",\"span\":\"TextField_span__qcPmc\",\"value\":\"TextField_value__Rhply\",\"createTodo\":\"TextField_createTodo__PD23L\",\"search\":\"TextField_search__dl4gh\",\"searchIST\":\"TextField_searchIST__LvGwH\"};","import {\n  ChangeEvent,\n  forwardRef,\n  ChangeEventHandler,\n  useState,\n  useEffect,\n  useCallback,\n} from 'react';\nimport { FieldError, Control } from 'react-hook-form';\nimport { useMediaQuery } from 'react-responsive';\nimport { CiSearch } from 'react-icons/ci';\n\nimport s from './TextField.module.scss';\n\nexport interface ITextFieldProps {\n  type?: string;\n  name?: string;\n  value?: string;\n  handleChange?: ChangeEventHandler<HTMLInputElement>;\n  placeholder?: string | string[];\n  required?: boolean;\n  title?: string;\n  className?: string;\n  error?: FieldError;\n  control?: Control<any>;\n  onFocus?: () => void;\n  onBlur?: () => void;\n  clearTextField?: boolean;\n}\n\nconst TextField = forwardRef<HTMLInputElement, ITextFieldProps>(\n  (props, ref) => {\n    const labelClass = props.className\n      ? `${s.label} ${s[props.className]}`\n      : `${s.label}`;\n    const inputClass = props.className\n      ? `${s.input} ${s[props.className]}`\n      : `${s.input}`;\n    const spanClass = props.className\n      ? `${s.span} ${s[props.className]}`\n      : `${s.span}`;\n    const clearTextField = props.clearTextField;\n    const isTablet = useMediaQuery({ minWidth: 768, maxWidth: 1279 });\n    const [inputValue, setInputValue] = useState<string>(props.value || '');\n\n    const [isValue, setIsValue] = useState<boolean>(false);\n\n    const handleInputChange = useCallback(\n      (e: ChangeEvent<HTMLInputElement>) => {\n        const newValue = e.target.value;\n        setInputValue(newValue);\n\n        if (props.handleChange) {\n          props.handleChange(e);\n        }\n        if (newValue !== '') {\n          setIsValue(true);\n        } else {\n          setIsValue(false);\n        }\n      },\n      [props]\n    );\n\n    useEffect(() => {\n      if (props.value === '') {\n        setInputValue('');\n      } else {\n        if (props.value) {\n          setInputValue(props.value);\n        }\n      }\n    }, [props.value]);\n\n    //скидуэмо значення Input коли користувач був обраний\n    useEffect(() => {\n      if (clearTextField) {\n        setInputValue('');\n        setIsValue(false);\n        const fakeEvent = {\n          target: {\n            value: '',\n          },\n        } as ChangeEvent<HTMLInputElement>;\n\n        handleInputChange(fakeEvent);\n      } else {\n        return;\n      }\n    }, [clearTextField, handleInputChange]);\n\n    const handleFocus = () => {\n      if (props.onFocus) {\n        props.onFocus();\n      }\n    };\n\n    const handleBlur = () => {\n      if (props.onBlur) {\n        props.onBlur();\n      }\n    };\n\n    return (\n      <label className={labelClass}>\n        <input\n          ref={ref}\n          className={inputClass}\n          type={props.type}\n          name={props.name}\n          value={inputValue}\n          onChange={handleInputChange}\n          onFocus={handleFocus}\n          onBlur={handleBlur}\n          required={props.required}\n          title={props.title}\n        />\n        {(props.className === 'search' || props.className === 'searchIST') &&\n          !isValue && (\n            <span className={spanClass}>\n              <CiSearch\n                size={24}\n                style={{\n                  marginRight: isTablet ? '5px' : '10px',\n                  marginLeft: '10px',\n                }}\n              />\n              {props.placeholder}\n            </span>\n          )}\n        {props.className !== 'search' &&\n          props.className !== 'searchIST' &&\n          !isValue && <span className={spanClass}>{props.placeholder}</span>}\n        {props.error && <p className={s.error}>{props.title}</p>}\n      </label>\n    );\n  }\n);\n\nexport default TextField;\n","import { ITextFieldProps } from './TextField';\n\nexport const fields = {\n  username: {\n    label: 'User name',\n    name: 'username',\n    type: 'text',\n    placeholder: 'User name*',\n    title: '*The Name field must be more than 2 and less than 31 characters',\n    required: true,\n  } as ITextFieldProps,\n  email: {\n    label: 'Email',\n    name: 'email',\n    type: 'text',\n    placeholder: 'Email*',\n    title: '*Enter a valid email',\n    required: true,\n  } as ITextFieldProps,\n  password: {\n    label: 'Password',\n    name: 'password',\n    type: 'password',\n    placeholder: 'Password*',\n    title:\n      '*The Password field must be more than 2 and less than 21 characters',\n    required: true,\n  } as ITextFieldProps,\n  subject: {\n    label: 'Subject',\n    name: 'subject',\n    type: 'text',\n    placeholder: '',\n    title: '*The Subject field must be more than 2 characters',\n    required: true,\n  } as ITextFieldProps,\n  search: {\n    label: 'Search',\n    name: 'search',\n    type: 'text',\n    placeholder: 'Введіть email для пошуку',\n    title: '*The Subject field must be more than 2 characters',\n    required: false,\n  } as ITextFieldProps,\n  searchByPhrase: {\n    label: 'searchByPhrase',\n    name: 'searchByPhrase',\n    type: 'text',\n    placeholder: 'Введіть слово чи фразу для пошуку',\n    title: '*The Subject field must be more than 2 characters',\n    required: false,\n  } as ITextFieldProps,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"todo\":\"Todo_todo__KBW37\",\"todoCard\":\"Todo_todoCard__VEgLx\",\"cardBorder\":\"Todo_cardBorder__bjTLN\",\"partData\":\"Todo_partData__JQyQq\",\"partDataAddInfoUser\":\"Todo_partDataAddInfoUser__Gt4CD\",\"partDataDate\":\"Todo_partDataDate__IPJq4\",\"cardGroup\":\"Todo_cardGroup__NtaSa\",\"cardGroupMobile\":\"Todo_cardGroupMobile__Jkeu6\",\"todoStatus\":\"Todo_todoStatus__GEFX5\",\"scroll\":\"Todo_scroll__ZLtcw\"};","import React from 'react';\nimport moment from 'moment';\nimport { useMediaQuery } from 'react-responsive';\nimport Text from '../Shared/Text';\nimport { FaClock, FaTimes } from 'react-icons/fa';\nimport s from './Todo.module.scss';\n\nexport interface ITodoProps {\n  additionalInfo: string;\n  dateFrom: string;\n  dateTo: string;\n  otherMembers: string;\n  part: string;\n  subject: string;\n  saveAfterDeadline: boolean;\n}\n\nconst checkDate = (date: string) => {\n  const today = moment();\n  const dueDate = moment(date, 'DD.MM.YYYY');\n\n  if (dueDate.isSameOrAfter(today, 'day')) {\n    return 'Виконується';\n  } else {\n    return 'Термін виконання минув';\n  }\n};\n\nconst Todo: React.FC<ITodoProps> = ({\n  additionalInfo,\n  dateFrom,\n  dateTo,\n  otherMembers,\n  part,\n  subject,\n  saveAfterDeadline,\n}) => {\n  const isMobile = useMediaQuery({ maxWidth: 767 });\n\n  return (\n    <div className={s.todo}>\n      <div>\n        <Text text={'Перегляд завдання'} textClass=\"title-form-list\" />\n        <div className={s.todoCard}>\n          {dateFrom && dateTo && (\n            <div className={s.todoStatus}>\n              <Text text={checkDate(dateTo)} textClass=\"title-form-todo\" />\n              {checkDate(dateTo) === 'Виконується' ? (\n                <FaClock\n                  color=\"green\"\n                  size=\"30px\"\n                  style={{ marginLeft: '20px', marginRight: '20px' }}\n                />\n              ) : (\n                <FaTimes\n                  color=\"red\"\n                  size=\"30px\"\n                  style={{ marginLeft: '20px', marginRight: '20px' }}\n                />\n              )}\n            </div>\n          )}\n          {!isMobile && (\n            <ul className={s.cardBorder}>\n              <li className={s.cardGroup}>\n                <div>\n                  <Text text={'Розділ'} textClass=\"title-form-todo\" />\n                  <div className={s.partData}>\n                    <Text text={part} textClass=\"hidenInputTodo\" />\n                  </div>\n                </div>\n                <div>\n                  <Text text={'Дата початку'} textClass=\"title-form-todo\" />\n                  <div className={s.partDataDate}>\n                    <Text text={dateFrom} textClass=\"hidenInput\" />\n                  </div>\n                </div>\n              </li>\n              <li className={s.cardGroup}>\n                <div>\n                  <Text text={'Тема'} textClass=\"title-form-todo\" />\n                  <div className={s.partData}>\n                    <Text text={subject} textClass=\"hidenInput\" />\n                  </div>\n                </div>\n                <div>\n                  <Text text={'Дата закінчення'} textClass=\"title-form-todo\" />\n                  <div className={s.partDataDate}>\n                    <Text text={dateTo} textClass=\"hidenInput\" />\n                  </div>\n                </div>\n              </li>\n              <li className={s.cardGroup}>\n                <div>\n                  <Text\n                    text={'Додаткова інформація'}\n                    textClass=\"title-form-todo\"\n                  />\n                  <div className={s.partDataAddInfoUser}>\n                    <div className={s.scroll}>\n                      <Text\n                        text={additionalInfo}\n                        textClass=\"hidenInputAddInfoUser\"\n                      />\n                    </div>\n                  </div>\n                </div>\n              </li>\n              {otherMembers && (\n                <li className={s.cardGroup}>\n                  <div>\n                    <Text\n                      text={'Користувачі спільного завдання'}\n                      textClass=\"title-form-todo\"\n                    />\n                    <div className={s.partDataAddInfoUser}>\n                      <Text\n                        text={otherMembers}\n                        textClass=\"hidenInputAddInfoUser\"\n                      />\n                    </div>\n                  </div>\n                </li>\n              )}\n              <Text\n                text={\n                  saveAfterDeadline\n                    ? '*Ваше завдання буде збережене після закінчення терміну його виконання'\n                    : '*Ваше завдання буде видалено після закінчення терміну його виконання'\n                }\n                textClass=\"title-form-todo\"\n              />\n            </ul>\n          )}\n          {isMobile && (\n            <ul className={s.cardBorder}>\n              <li className={s.cardGroupMobile}>\n                <div>\n                  <Text text={'Розділ'} textClass=\"title-form-todo\" />\n                  <div className={s.partData}>\n                    <Text text={part} textClass=\"hidenInputTodo\" />\n                  </div>\n                </div>\n                <div>\n                  <Text text={'Тема'} textClass=\"title-form-todo\" />\n                  <div className={s.partData}>\n                    <Text text={subject} textClass=\"hidenInput\" />\n                  </div>\n                </div>\n              </li>\n              <li className={s.cardGroupMobile}>\n                <div>\n                  <Text text={'Дата початку'} textClass=\"title-form-todo\" />\n                  <div className={s.partDataDate}>\n                    <Text text={dateFrom} textClass=\"hidenInput\" />\n                  </div>\n                </div>\n                <div>\n                  <Text text={'Дата закінчення'} textClass=\"title-form-todo\" />\n                  <div className={s.partDataDate}>\n                    <Text text={dateTo} textClass=\"hidenInput\" />\n                  </div>\n                </div>\n              </li>\n              <li className={s.cardGroupMobile}>\n                <div>\n                  <Text\n                    text={'Додаткова інформація'}\n                    textClass=\"title-form-todo\"\n                  />\n                  <div className={s.partDataAddInfoUser}>\n                    <div className={s.scroll}>\n                      <Text\n                        text={additionalInfo}\n                        textClass=\"hidenInputAddInfoUser\"\n                      />\n                    </div>\n                  </div>\n                </div>\n              </li>\n              {otherMembers && (\n                <li className={s.cardGroupMobile}>\n                  <div>\n                    <Text\n                      text={'Користувачі спільного завдання'}\n                      textClass=\"title-form-todo\"\n                    />\n                    <div className={s.partDataAddInfoUser}>\n                      <Text\n                        text={otherMembers}\n                        textClass=\"hidenInputAddInfoUser\"\n                      />\n                    </div>\n                  </div>\n                </li>\n              )}\n              <Text\n                text={\n                  saveAfterDeadline\n                    ? '*Ваше завдання буде збережене після закінчення терміну його виконання'\n                    : '*Ваше завдання буде видалено після закінчення терміну його виконання'\n                }\n                textClass=\"title-form-todo\"\n              />\n            </ul>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Todo;\n"],"names":["_ref","arrayUser","selectedUsers","setSelectedUsers","finalListUser","setFinalListUser","useState","checkedUsers","setCheckedUsers","length","split","_jsxs","_Fragment","children","_jsx","TextField","_objectSpread","className","handleChange","e","text","target","value","filteredUsers","filter","email","includes","fields","search","s","map","index","type","checked","onChange","processArray","user","join","handleUserSelection","width","height","viewBox","fill","xmlns","d","dateFormat","showMonthYearPicker","currentDate","Date","maxDate","setMonth","getMonth","selectedDate","setSelectedDate","moment","useEffect","CustomInput","forwardRef","_ref2","ref","onClick","displayDate","setDisplayDate","format","CalendarIcon","DatePicker","selected","toDate","date","handleDateChange","customInput","renderDayContents","renderCustomDayContents","dayOfMonth","selectedValue","startOf","currentValue","isSame","onDismiss","onChoice","dispatch","useDispatch","isDisplayed","setIsDisplayed","isShowChoiceBtn","setIsShowChoiceBtn","handleConfirmClick","choice","handleDismissClick","clearUserMessage","clearTodoMessage","statusStopResetMessage","FontAwesomeIcon","icon","faTimes","size","id","Text","textClass","name","placeholder","required","options","defaultValue","labelClass","concat","label","selectClass","select","isMobile","useMediaQuery","maxWidth","isTablet","minWidth","customStyles","control","provided","state","fontSize","color","pointerEvents","borderColor","isFocused","option","styles","isDisabled","isSelected","backgroundColor","textColor","undefined","display","alignItems","cursor","menu","marginTop","Select","theme","borderRadius","colors","primary","spanClass","props","inputClass","input","span","clearTextField","inputValue","setInputValue","isValue","setIsValue","handleInputChange","useCallback","newValue","onFocus","handleFocus","onBlur","handleBlur","title","CiSearch","style","marginRight","marginLeft","error","username","password","subject","searchByPhrase","checkDate","today","isSameOrAfter","additionalInfo","dateFrom","dateTo","otherMembers","part","saveAfterDeadline","FaClock","FaTimes"],"sourceRoot":""}