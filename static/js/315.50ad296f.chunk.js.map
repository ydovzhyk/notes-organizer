{"version":3,"file":"static/js/315.50ad296f.chunk.js","mappings":"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","sources":["components/Shared/Calendar/CalendarImage/CalendarImage.tsx","webpack://notes-organizer/./src/components/Shared/Calendar/Calendar.module.scss?d351","components/Shared/Calendar/Calendar.tsx","webpack://notes-organizer/./src/components/Shared/Container/Container.module.scss?3aa5","components/Shared/Container/Container.tsx","webpack://notes-organizer/./src/components/Shared/SelectField/SelectField.module.scss?fd33","components/Shared/SelectField/SelectField.tsx","webpack://notes-organizer/./src/components/Shared/TextField/TextField.module.scss?7131","components/Shared/TextField/TextField.tsx","components/Shared/TextField/fields.ts","webpack://notes-organizer/./src/components/Todo/Todo.module.scss?bedd","components/Todo/Todo.tsx","components/helpers/searchLocalStoradge.tsx","components/helpers/parseURL.tsx","components/helpers/buildURL.tsx","webpack://notes-organizer/./src/components/TodoPreview/TodoPreview.module.scss?dbc3","components/TodoPreview/TodoPreview.tsx","webpack://notes-organizer/./src/components/Shared/Pagination/Pagination.module.scss?dfd1","components/Shared/Pagination/Pagination.tsx","webpack://notes-organizer/./src/components/TodoList/SearchTodo/SearchTodo.module.scss?3bb2","components/TodoList/SearchTodo/SearchTodo.tsx","webpack://notes-organizer/./src/components/TodoList/TodoList.module.scss?2ca0","components/TodoList/TodoList.tsx","pages/TodoListPage/TodoListPage.tsx"],"sourcesContent":["import React from 'react';\n\ninterface ICalendarIconProps {\n  width: string;\n  height: string;\n}\n\nconst CalendarIcon: React.FC<ICalendarIconProps> = ({ width, height }) => {\n  return (\n    <svg\n      viewBox=\"0 0 20 20\"\n      width={width}\n      height={height}\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M17.475 2.067h-1.312v-.321a.586.586 0 1 0-1.171 0v.32h-1.617v-.32a.586.586 0 0 0-1.172 0v.32h-1.617v-.32a.586.586 0 1 0-1.172 0v.32H7.797v-.32a.586.586 0 0 0-1.172 0v.32H5.008v-.32a.586.586 0 0 0-1.171 0v.32H2.525A2.527 2.527 0 0 0 0 4.592v11.724a2.527 2.527 0 0 0 2.525 2.525h14.95A2.527 2.527 0 0 0 20 16.316V4.59a2.527 2.527 0 0 0-2.525-2.524Zm1.353 14.248c0 .746-.607 1.353-1.353 1.353H2.525a1.354 1.354 0 0 1-1.353-1.352V6.732h17.656v9.584Zm0-10.755H1.172v-.969c0-.745.607-1.352 1.353-1.352h1.312v.226a.586.586 0 0 0 1.171 0V3.24h1.617v.226a.586.586 0 0 0 1.172 0V3.24h1.617v.226a.586.586 0 0 0 1.172 0V3.24h1.617v.226a.586.586 0 0 0 1.172 0V3.24h1.617v.226a.586.586 0 1 0 1.171 0V3.24h1.312c.746 0 1.353.607 1.353 1.352v.97Z\"\n        fill=\"#52555F\"\n      />\n      <path\n        d=\"M6.532 7.982H4.22a.586.586 0 0 0-.586.586v2.392c0 .323.262.586.586.586h2.312a.586.586 0 0 0 .586-.586V8.568a.586.586 0 0 0-.586-.586Zm-.586 2.392h-1.14v-1.22h1.14v1.22ZM11.156 7.982H8.844a.586.586 0 0 0-.586.586v2.392c0 .323.262.586.586.586h2.312a.586.586 0 0 0 .586-.586V8.568a.586.586 0 0 0-.586-.586Zm-.586 2.392H9.43v-1.22h1.14v1.22ZM15.78 7.982h-2.312a.586.586 0 0 0-.586.586v2.392c0 .323.262.586.586.586h2.312a.586.586 0 0 0 .586-.586V8.568a.586.586 0 0 0-.586-.586Zm-.586 2.392h-1.14v-1.22h1.14v1.22ZM6.532 12.526H4.22a.586.586 0 0 0-.586.586v2.392c0 .323.262.586.586.586h2.312a.586.586 0 0 0 .586-.586v-2.392a.586.586 0 0 0-.586-.586Zm-.586 2.392h-1.14v-1.22h1.14v1.22ZM11.156 12.526H8.844a.586.586 0 0 0-.586.586v2.392c0 .323.262.586.586.586h2.312a.586.586 0 0 0 .586-.586v-2.392a.586.586 0 0 0-.586-.586Zm-.586 2.392H9.43v-1.22h1.14v1.22ZM15.78 12.526h-2.312a.586.586 0 0 0-.586.586v2.392c0 .323.262.586.586.586h2.312a.586.586 0 0 0 .586-.586v-2.392a.586.586 0 0 0-.586-.586Zm-.586 2.392h-1.14v-1.22h1.14v1.22Z\"\n        fill=\"#52555F\"\n      />\n    </svg>\n  );\n};\n\nexport default CalendarIcon;\n","// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"Calendar_btn__UdtWn\",\"selectedDay\":\"Calendar_selectedDay__2gUhl\",\"day\":\"Calendar_day__sFSOy\"};","import React, { useState, forwardRef, useEffect } from 'react';\nimport DatePicker from 'react-datepicker';\nimport moment, { Moment } from 'moment';\n\nimport CalendarIcon from './CalendarImage/CalendarImage';\nimport 'react-datepicker/dist/react-datepicker.css';\n\nimport s from './Calendar.module.scss';\n\ninterface ICalendarProps {\n  dateFormat: string;\n  showMonthYearPicker: boolean;\n  value: Date;\n  handleChange: (date: string) => void;\n}\n\nconst Calendar: React.FC<ICalendarProps> = ({\n  dateFormat = 'MM.dd.yyyy',\n  showMonthYearPicker,\n  value,\n  handleChange,\n}) => {\n  const currentDate = new Date();\n  const maxDate = new Date();\n  maxDate.setMonth(currentDate.getMonth() + 2);\n\n  const [selectedDate, setSelectedDate] = useState<Moment>(\n    moment(value, 'DD.MM.YYYY')\n  );\n\n  useEffect(() => {\n    setSelectedDate(moment(value, 'DD.MM.YYYY'));\n  }, [value]);\n\n  const handleDateChange = (date: Moment) => {\n    setSelectedDate(date);\n    handleChange(date.format('DD.MM.YYYY'));\n  };\n\n  const CustomInput = forwardRef<\n    HTMLButtonElement,\n    { onClick?: React.MouseEventHandler }\n  >(({ onClick }, ref) => {\n    const [displayDate, setDisplayDate] = useState(\n      moment(selectedDate).format('DD.MM.yyyy')\n    );\n\n    useEffect(() => {\n      setDisplayDate(moment(selectedDate).format('DD.MM.yyyy'));\n    }, []);\n\n    return (\n      <button type=\"button\" className={s.btn} onClick={onClick} ref={ref}>\n        <CalendarIcon width=\"20\" height=\"18\" />\n        {displayDate}\n      </button>\n    );\n  });\n\n  const renderCustomDayContents = (dayOfMonth: number, date: Date) => {\n    const selectedValue = moment(selectedDate.toDate()).startOf('day');\n    const currentValue = moment(date).startOf('day');\n\n    if (selectedValue.isSame(currentValue)) {\n      return <div className={s.selectedDay}>{dayOfMonth}</div>;\n    }\n    return <div className={s.day}>{dayOfMonth}</div>;\n  };\n\n  return (\n    <>\n      <DatePicker\n        selected={selectedDate.toDate()}\n        onChange={date => handleDateChange(moment(date))}\n        customInput={<CustomInput />}\n        dateFormat={dateFormat}\n        showMonthYearPicker={showMonthYearPicker}\n        maxDate={maxDate}\n        renderDayContents={renderCustomDayContents}\n      />\n    </>\n  );\n};\n\nexport default Calendar;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Container_container__NXBJZ\"};","import React, { ReactNode } from 'react';\nimport s from './Container.module.scss';\n\ninterface ContainerProps {\n  children: ReactNode;\n}\n\nconst Container: React.FC<ContainerProps> = ({ children }) => {\n  return <div className={s.container}>{children}</div>;\n};\n\nexport default Container;\n","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"SelectField_label__Y87wK\",\"select\":\"SelectField_select__bwshq\",\"spanClass\":\"SelectField_spanClass__DB-dA\",\"createTodo\":\"SelectField_createTodo__z9Y6X\"};","import React from 'react';\nimport Select, { StylesConfig } from 'react-select';\nimport { useMediaQuery } from 'react-responsive';\n\nimport s from './SelectField.module.scss';\n\ninterface ISelectFieldProps {\n  name: string;\n  value: { value: string; label: string };\n  handleChange: (selectedOption: any) => void;\n  placeholder: string;\n  required: boolean;\n  options: { value: string; label: string }[];\n  className?: string;\n  defaultValue?: { value: string; label: string };\n}\n\nconst SelectField: React.FC<ISelectFieldProps> = ({\n  name,\n  value,\n  handleChange,\n  placeholder,\n  required,\n  options,\n  className,\n  defaultValue,\n}) => {\n  const labelClass = className ? `${s.label} ${s[className]}` : `${s.label}`;\n  const selectClass = className ? `${s.select} ${s[className]}` : `${s.select}`;\n\n  const isMobile = useMediaQuery({ maxWidth: 767 });\n  const isTablet = useMediaQuery({ minWidth: 768, maxWidth: 1279 });\n  // const isDesktop = useMediaQuery({ minWidth: 1280 });\n\n  const customStyles: StylesConfig = {\n    control: (provided: any, state) => ({\n      ...provided,\n      fontSize: isMobile ? '14px' : isTablet ? '15px' : '16px',\n      height: isMobile ? '38px' : isTablet ? '38px' : '48px',\n      color: 'var(--second-text-color)',\n      pointerEvents: 'auto',\n      borderColor: state.isFocused ? 'white' : provided.borderColor,\n    }),\n    option: (styles, { isDisabled, isFocused, isSelected }) => {\n      const backgroundColor = isSelected\n        ? 'black'\n        : isFocused\n          ? 'rgba(0, 0, 0, 0.3)'\n          : 'white';\n\n      const textColor = isSelected ? 'white' : 'black';\n\n      return {\n        ...styles,\n        backgroundColor: isDisabled ? undefined : backgroundColor,\n        color: isDisabled ? '#ccc' : textColor,\n        height: isMobile ? '38px' : isTablet ? '38px' : '48px',\n        display: 'flex',\n        alignItems: 'center',\n        cursor: isDisabled ? 'not-allowed' : 'default',\n        ':active': {\n          ...styles[':active'],\n          backgroundColor: !isDisabled\n            ? isSelected\n              ? 'black'\n              : 'rgba(0, 0, 0, 0.3)'\n            : undefined,\n        },\n      };\n    },\n    menu: (provided, state) => ({\n      ...provided,\n      marginTop: isMobile ? '-8px' : isTablet ? '-8px' : '2px',\n    }),\n  };\n\n  return (\n    <label className={labelClass}>\n      <Select\n        className={selectClass}\n        name={name}\n        value={value}\n        onChange={handleChange}\n        placeholder={placeholder}\n        required={required}\n        options={options}\n        styles={customStyles}\n        defaultValue={defaultValue}\n        theme={theme => ({\n          ...theme,\n          borderRadius: 0,\n          colors: {\n            ...theme.colors,\n            primary: 'black',\n          },\n        })}\n      />\n      {!defaultValue && value.value === '' && (\n        <span className={s.spanClass}>{placeholder}</span>\n      )}\n    </label>\n  );\n};\n\nexport default SelectField;\n","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"TextField_label__kp4Pv\",\"input\":\"TextField_input__JDykO\",\"error\":\"TextField_error__92ab9\",\"span\":\"TextField_span__qcPmc\",\"value\":\"TextField_value__Rhply\",\"createTodo\":\"TextField_createTodo__PD23L\",\"search\":\"TextField_search__dl4gh\",\"searchIST\":\"TextField_searchIST__LvGwH\"};","import {\n  ChangeEvent,\n  forwardRef,\n  ChangeEventHandler,\n  useState,\n  useEffect,\n  useCallback,\n} from 'react';\nimport { FieldError, Control } from 'react-hook-form';\nimport { useMediaQuery } from 'react-responsive';\nimport { CiSearch } from 'react-icons/ci';\n\nimport s from './TextField.module.scss';\n\nexport interface ITextFieldProps {\n  type?: string;\n  name?: string;\n  value?: string;\n  handleChange?: ChangeEventHandler<HTMLInputElement>;\n  placeholder?: string | string[];\n  required?: boolean;\n  title?: string;\n  className?: string;\n  error?: FieldError;\n  control?: Control<any>;\n  onFocus?: () => void;\n  onBlur?: () => void;\n  clearTextField?: boolean;\n}\n\nconst TextField = forwardRef<HTMLInputElement, ITextFieldProps>(\n  (props, ref) => {\n    const labelClass = props.className\n      ? `${s.label} ${s[props.className]}`\n      : `${s.label}`;\n    const inputClass = props.className\n      ? `${s.input} ${s[props.className]}`\n      : `${s.input}`;\n    const spanClass = props.className\n      ? `${s.span} ${s[props.className]}`\n      : `${s.span}`;\n    const clearTextField = props.clearTextField;\n    const isTablet = useMediaQuery({ minWidth: 768, maxWidth: 1279 });\n    const [inputValue, setInputValue] = useState<string>(props.value || '');\n\n    const [isValue, setIsValue] = useState<boolean>(false);\n\n    const handleInputChange = useCallback(\n      (e: ChangeEvent<HTMLInputElement>) => {\n        const newValue = e.target.value;\n        setInputValue(newValue);\n\n        if (props.handleChange) {\n          props.handleChange(e);\n        }\n        if (newValue !== '') {\n          setIsValue(true);\n        } else {\n          setIsValue(false);\n        }\n      },\n      [props]\n    );\n\n    useEffect(() => {\n      if (props.value === '') {\n        setInputValue('');\n      } else {\n        if (props.value) {\n          setInputValue(props.value);\n        }\n      }\n    }, [props.value]);\n\n    //скидуэмо значення Input коли користувач був обраний\n    useEffect(() => {\n      if (clearTextField) {\n        setInputValue('');\n        setIsValue(false);\n        const fakeEvent = {\n          target: {\n            value: '',\n          },\n        } as ChangeEvent<HTMLInputElement>;\n\n        handleInputChange(fakeEvent);\n      } else {\n        return;\n      }\n    }, [clearTextField, handleInputChange]);\n\n    const handleFocus = () => {\n      if (props.onFocus) {\n        props.onFocus();\n      }\n    };\n\n    const handleBlur = () => {\n      if (props.onBlur) {\n        props.onBlur();\n      }\n    };\n\n    return (\n      <label className={labelClass}>\n        <input\n          ref={ref}\n          className={inputClass}\n          type={props.type}\n          name={props.name}\n          value={inputValue}\n          onChange={handleInputChange}\n          onFocus={handleFocus}\n          onBlur={handleBlur}\n          required={props.required}\n          title={props.title}\n        />\n        {(props.className === 'search' || props.className === 'searchIST') &&\n          !isValue && (\n            <span className={spanClass}>\n              <CiSearch\n                size={24}\n                style={{\n                  marginRight: isTablet ? '5px' : '10px',\n                  marginLeft: '10px',\n                }}\n              />\n              {props.placeholder}\n            </span>\n          )}\n        {props.className !== 'search' &&\n          props.className !== 'searchIST' &&\n          !isValue && <span className={spanClass}>{props.placeholder}</span>}\n        {props.error && <p className={s.error}>{props.title}</p>}\n      </label>\n    );\n  }\n);\n\nexport default TextField;\n","import { ITextFieldProps } from './TextField';\n\nexport const fields = {\n  username: {\n    label: 'User name',\n    name: 'username',\n    type: 'text',\n    placeholder: 'User name*',\n    title: '*The Name field must be more than 2 and less than 31 characters',\n    required: true,\n  } as ITextFieldProps,\n  email: {\n    label: 'Email',\n    name: 'email',\n    type: 'text',\n    placeholder: 'Email*',\n    title: '*Enter a valid email',\n    required: true,\n  } as ITextFieldProps,\n  password: {\n    label: 'Password',\n    name: 'password',\n    type: 'password',\n    placeholder: 'Password*',\n    title:\n      '*The Password field must be more than 2 and less than 21 characters',\n    required: true,\n  } as ITextFieldProps,\n  subject: {\n    label: 'Subject',\n    name: 'subject',\n    type: 'text',\n    placeholder: '',\n    title: '*The Subject field must be more than 2 characters',\n    required: true,\n  } as ITextFieldProps,\n  search: {\n    label: 'Search',\n    name: 'search',\n    type: 'text',\n    placeholder: 'Введіть email для пошуку',\n    title: '*The Subject field must be more than 2 characters',\n    required: false,\n  } as ITextFieldProps,\n  searchByPhrase: {\n    label: 'searchByPhrase',\n    name: 'searchByPhrase',\n    type: 'text',\n    placeholder: 'Введіть слово чи фразу для пошуку',\n    title: '*The Subject field must be more than 2 characters',\n    required: false,\n  } as ITextFieldProps,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"todo\":\"Todo_todo__KBW37\",\"todoCard\":\"Todo_todoCard__VEgLx\",\"cardBorder\":\"Todo_cardBorder__bjTLN\",\"partData\":\"Todo_partData__JQyQq\",\"partDataAddInfoUser\":\"Todo_partDataAddInfoUser__Gt4CD\",\"partDataDate\":\"Todo_partDataDate__IPJq4\",\"cardGroup\":\"Todo_cardGroup__NtaSa\",\"cardGroupMobile\":\"Todo_cardGroupMobile__Jkeu6\",\"todoStatus\":\"Todo_todoStatus__GEFX5\",\"scroll\":\"Todo_scroll__ZLtcw\"};","import React from 'react';\nimport moment from 'moment';\nimport { useMediaQuery } from 'react-responsive';\nimport Text from '../Shared/Text';\nimport { FaClock, FaTimes } from 'react-icons/fa';\nimport s from './Todo.module.scss';\n\nexport interface ITodoProps {\n  additionalInfo: string;\n  dateFrom: string;\n  dateTo: string;\n  otherMembers: string;\n  part: string;\n  subject: string;\n  saveAfterDeadline: boolean;\n}\n\nconst checkDate = (date: string) => {\n  const today = moment();\n  const dueDate = moment(date, 'DD.MM.YYYY');\n\n  if (dueDate.isSameOrAfter(today, 'day')) {\n    return 'Виконується';\n  } else {\n    return 'Термін виконання минув';\n  }\n};\n\nconst Todo: React.FC<ITodoProps> = ({\n  additionalInfo,\n  dateFrom,\n  dateTo,\n  otherMembers,\n  part,\n  subject,\n  saveAfterDeadline,\n}) => {\n  const isMobile = useMediaQuery({ maxWidth: 767 });\n\n  return (\n    <div className={s.todo}>\n      <div>\n        <Text text={'Перегляд завдання'} textClass=\"title-form-list\" />\n        <div className={s.todoCard}>\n          {dateFrom && dateTo && (\n            <div className={s.todoStatus}>\n              <Text text={checkDate(dateTo)} textClass=\"title-form-todo\" />\n              {checkDate(dateTo) === 'Виконується' ? (\n                <FaClock\n                  color=\"green\"\n                  size=\"30px\"\n                  style={{ marginLeft: '20px', marginRight: '20px' }}\n                />\n              ) : (\n                <FaTimes\n                  color=\"red\"\n                  size=\"30px\"\n                  style={{ marginLeft: '20px', marginRight: '20px' }}\n                />\n              )}\n            </div>\n          )}\n          {!isMobile && (\n            <ul className={s.cardBorder}>\n              <li className={s.cardGroup}>\n                <div>\n                  <Text text={'Розділ'} textClass=\"title-form-todo\" />\n                  <div className={s.partData}>\n                    <Text text={part} textClass=\"hidenInputTodo\" />\n                  </div>\n                </div>\n                <div>\n                  <Text text={'Дата початку'} textClass=\"title-form-todo\" />\n                  <div className={s.partDataDate}>\n                    <Text text={dateFrom} textClass=\"hidenInput\" />\n                  </div>\n                </div>\n              </li>\n              <li className={s.cardGroup}>\n                <div>\n                  <Text text={'Тема'} textClass=\"title-form-todo\" />\n                  <div className={s.partData}>\n                    <Text text={subject} textClass=\"hidenInput\" />\n                  </div>\n                </div>\n                <div>\n                  <Text text={'Дата закінчення'} textClass=\"title-form-todo\" />\n                  <div className={s.partDataDate}>\n                    <Text text={dateTo} textClass=\"hidenInput\" />\n                  </div>\n                </div>\n              </li>\n              <li className={s.cardGroup}>\n                <div>\n                  <Text\n                    text={'Додаткова інформація'}\n                    textClass=\"title-form-todo\"\n                  />\n                  <div className={s.partDataAddInfoUser}>\n                    <div className={s.scroll}>\n                      <Text\n                        text={additionalInfo}\n                        textClass=\"hidenInputAddInfoUser\"\n                      />\n                    </div>\n                  </div>\n                </div>\n              </li>\n              {otherMembers && (\n                <li className={s.cardGroup}>\n                  <div>\n                    <Text\n                      text={'Користувачі спільного завдання'}\n                      textClass=\"title-form-todo\"\n                    />\n                    <div className={s.partDataAddInfoUser}>\n                      <Text\n                        text={otherMembers}\n                        textClass=\"hidenInputAddInfoUser\"\n                      />\n                    </div>\n                  </div>\n                </li>\n              )}\n              <Text\n                text={\n                  saveAfterDeadline\n                    ? '*Ваше завдання буде збережене після закінчення терміну його виконання'\n                    : '*Ваше завдання буде видалено після закінчення терміну його виконання'\n                }\n                textClass=\"title-form-todo\"\n              />\n            </ul>\n          )}\n          {isMobile && (\n            <ul className={s.cardBorder}>\n              <li className={s.cardGroupMobile}>\n                <div>\n                  <Text text={'Розділ'} textClass=\"title-form-todo\" />\n                  <div className={s.partData}>\n                    <Text text={part} textClass=\"hidenInputTodo\" />\n                  </div>\n                </div>\n                <div>\n                  <Text text={'Тема'} textClass=\"title-form-todo\" />\n                  <div className={s.partData}>\n                    <Text text={subject} textClass=\"hidenInput\" />\n                  </div>\n                </div>\n              </li>\n              <li className={s.cardGroupMobile}>\n                <div>\n                  <Text text={'Дата початку'} textClass=\"title-form-todo\" />\n                  <div className={s.partDataDate}>\n                    <Text text={dateFrom} textClass=\"hidenInput\" />\n                  </div>\n                </div>\n                <div>\n                  <Text text={'Дата закінчення'} textClass=\"title-form-todo\" />\n                  <div className={s.partDataDate}>\n                    <Text text={dateTo} textClass=\"hidenInput\" />\n                  </div>\n                </div>\n              </li>\n              <li className={s.cardGroupMobile}>\n                <div>\n                  <Text\n                    text={'Додаткова інформація'}\n                    textClass=\"title-form-todo\"\n                  />\n                  <div className={s.partDataAddInfoUser}>\n                    <div className={s.scroll}>\n                      <Text\n                        text={additionalInfo}\n                        textClass=\"hidenInputAddInfoUser\"\n                      />\n                    </div>\n                  </div>\n                </div>\n              </li>\n              {otherMembers && (\n                <li className={s.cardGroupMobile}>\n                  <div>\n                    <Text\n                      text={'Користувачі спільного завдання'}\n                      textClass=\"title-form-todo\"\n                    />\n                    <div className={s.partDataAddInfoUser}>\n                      <Text\n                        text={otherMembers}\n                        textClass=\"hidenInputAddInfoUser\"\n                      />\n                    </div>\n                  </div>\n                </li>\n              )}\n              <Text\n                text={\n                  saveAfterDeadline\n                    ? '*Ваше завдання буде збережене після закінчення терміну його виконання'\n                    : '*Ваше завдання буде видалено після закінчення терміну його виконання'\n                }\n                textClass=\"title-form-todo\"\n              />\n            </ul>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Todo;\n","import { ITodoSearch, ITodoCreate } from '../types/todo/todo';\nimport moment from 'moment';\n\nconst isDateInRange = (date: string, startDate: string, endDate: string) => {\n  const momentDate = moment(date, 'DD.MM.YYYY', true);\n  const momentStartDate = moment(startDate, 'DD.MM.YYYY', true);\n  const momentEndDate = moment(endDate, 'DD.MM.YYYY', true);\n\n  return momentDate.isBetween(momentStartDate, momentEndDate, null, '[]');\n};\n\nexport const searchLocalStoradge = (searchData: ITodoSearch) => {\n  const lowerCaseSearchPhrase = searchData.searchByPhrase?.toLowerCase();\n  const localStorageData = localStorage.getItem('notes-organizer_tasks');\n  const currentDate = moment();\n\n  if (localStorageData) {\n    const tasks: ITodoCreate[] = JSON.parse(localStorageData);\n\n    const filteredTasks = tasks.filter(task => {\n      // 1) Пошук за датою\n      if (\n        searchData.searchByDate &&\n        !isDateInRange(searchData.searchByDate, task.dateFrom, task.dateTo)\n      ) {\n        return false;\n      }\n\n      // 2) Пошук за розділом\n      if (searchData.searchByPart && task.part !== searchData.searchByPart) {\n        return false;\n      }\n\n      // 3) Пошук за словом чи фразою\n      if (\n        lowerCaseSearchPhrase &&\n        !(\n          task.subject.toLowerCase().includes(lowerCaseSearchPhrase) ||\n          (task.additionalInfo &&\n            task.additionalInfo.toLowerCase().includes(lowerCaseSearchPhrase))\n        )\n      ) {\n        return false;\n      }\n\n      // 4) Пошук за статусом\n      if (\n        searchData.searchByStatus === 'Термін закінчився' &&\n        moment(currentDate, 'DD.MM.YYYY', true).isBefore(\n          moment(task.dateTo, 'DD.MM.YYYY', true)\n        )\n      ) {\n        return false;\n      }\n\n      if (\n        searchData.searchByStatus === 'Виконується' &&\n        moment(currentDate, 'DD.MM.YYYY', true).isAfter(\n          moment(task.dateTo, 'DD.MM.YYYY', true)\n        )\n      ) {\n        return false;\n      }\n\n      return true;\n    });\n\n    if (filteredTasks.length > 0) {\n      return filteredTasks;\n    } else {\n      return [];\n    }\n  }\n};\n","import { ITodoSearch } from '../types/todo/todo';\n\nexport const parseURL = () => {\n  const urlParams = new URLSearchParams(window.location.search);\n\n  const part = urlParams.get('part');\n  const phrase = urlParams.get('phrase');\n  const date = urlParams.get('date');\n  const status = urlParams.get('status');\n  const members = urlParams.get('members');\n  const weekPage = urlParams.get('weekPage');\n  const searchPage = urlParams.get('searchPage');\n\n  const urlData: ITodoSearch = {\n    searchByPart: part ? part : '',\n    searchByPhrase: phrase ? phrase : '',\n    searchByDate: date ? date : '',\n    searchByStatus: status ? status : '',\n    searchByOtherMembers: members ? members : '',\n  };\n\n  return { urlData, weekPage, searchPage };\n};\n","import { ITodoSearch } from '../types/todo/todo';\n\nexport const buildURL = (\n  searchData: ITodoSearch,\n  searchPage?: number,\n  weekPage?: number\n) => {\n  const urlParams = new URLSearchParams();\n\n  if (searchData.searchByPart) {\n    urlParams.set('part', searchData.searchByPart);\n  }\n\n  if (searchData.searchByPhrase) {\n    urlParams.set('phrase', searchData.searchByPhrase);\n  }\n\n  if (searchData.searchByDate) {\n    urlParams.set('date', searchData.searchByDate);\n  }\n\n  if (searchData.searchByStatus) {\n    urlParams.set('status', searchData.searchByStatus);\n  }\n\n  if (searchData.searchByOtherMembers) {\n    urlParams.set('members', searchData.searchByOtherMembers);\n  }\n\n  if (searchPage && searchPage > 0) {\n    urlParams.set('searchPage', String(searchPage));\n  }\n  if (weekPage && weekPage > 0) {\n    urlParams.set('weekPage', String(weekPage));\n  }\n\n  const queryString = urlParams.toString();\n  const finalURL = `/list?${queryString}`;\n\n  return finalURL;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"todoPreview\":\"TodoPreview_todoPreview__wH21y\",\"todoCard\":\"TodoPreview_todoCard__GtpCq\",\"cardBorder\":\"TodoPreview_cardBorder__6eTPh\",\"partData\":\"TodoPreview_partData__CZRfN\",\"partGroup\":\"TodoPreview_partGroup__5wGHj\",\"partDataAddInfoUser\":\"TodoPreview_partDataAddInfoUser__98W4H\",\"partDataDate\":\"TodoPreview_partDataDate__UjZHK\",\"cardGroup\":\"TodoPreview_cardGroup__0paj+\",\"todoStatus\":\"TodoPreview_todoStatus__XVCfP\",\"todoWindow\":\"TodoPreview_todoWindow__S0xAx\",\"todoPart\":\"TodoPreview_todoPart__RF9Ba\",\"dismissButton\":\"TodoPreview_dismissButton__tghwX\",\"arrowButton\":\"TodoPreview_arrowButton__dnsoa\",\"editTodo\":\"TodoPreview_editTodo__c2yLQ\",\"editTodoGroup\":\"TodoPreview_editTodoGroup__Wh+bj\",\"icon\":\"TodoPreview_icon__efj7z\"};","import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport moment from 'moment';\n\nimport Text from '../Shared/Text';\nimport Todo from '../Todo/Todo';\n\nimport { FaClock, FaTimes } from 'react-icons/fa';\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\nimport { faWrench } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport s from './TodoPreview.module.scss';\n\nexport interface ITodoPrewievProps {\n  _id: string;\n  additionalInfo: string;\n  dateFrom: string;\n  dateTo: string;\n  otherMembers: string;\n  part: string;\n  subject: string;\n  saveAfterDeadline: boolean;\n}\n\nconst checkDate = (date: string) => {\n  const today = moment();\n  const dueDate = moment(date, 'DD.MM.YYYY');\n  if (dueDate.isSameOrAfter(today, 'day')) {\n    return 'Виконується';\n  } else {\n    return 'Термін виконання минув';\n  }\n};\n\nconst TodoPreview: React.FC<ITodoPrewievProps> = ({\n  additionalInfo,\n  dateFrom,\n  dateTo,\n  otherMembers,\n  part,\n  subject,\n  saveAfterDeadline,\n  _id,\n}) => {\n  const [showTodo, setShowTodo] = useState<boolean>(false);\n  const navigate = useNavigate();\n\n  useEffect(() => {}, [showTodo]);\n\n  const openTodo = () => {\n    setShowTodo(!showTodo);\n  };\n\n  const goToEditTodo = () => {\n    navigate(`/edit/${_id}`, {\n      state: {\n        additionalInfo,\n        dateFrom,\n        dateTo,\n        otherMembers,\n        part,\n        subject,\n        saveAfterDeadline,\n        _id,\n      },\n    });\n  };\n\n  return (\n    <div className={s.todoPreview}>\n      <div className={s.todoCard} onClick={openTodo}>\n        {dateFrom && dateTo && (\n          <div className={s.todoStatus}>\n            <Text\n              text={checkDate(dateTo)}\n              textClass=\"title-form-todo-preview-status\"\n            />\n            {checkDate(dateTo) === 'Виконується' ? (\n              <FaClock\n                color=\"green\"\n                size=\"20px\"\n                style={{ marginLeft: '10px', marginRight: '30px' }}\n              />\n            ) : (\n              <FaTimes\n                color=\"red\"\n                size=\"20px\"\n                style={{ marginLeft: '10px', marginRight: '30px' }}\n              />\n            )}\n          </div>\n        )}\n        <ul className={s.cardBorder}>\n          <li>\n            <Text text={'Розділ'} textClass=\"title-form-todo-preview\" />\n            <div className={s.partData}>\n              <Text text={part} textClass=\"hidenInput-preview\" />\n            </div>\n            <Text text={'Тема'} textClass=\"title-form-todo-preview\" />\n            <div className={s.partData}>\n              <Text text={subject} textClass=\"hidenInput-preview\" />\n            </div>\n          </li>\n          <li>\n            <div className={s.partGroup}>\n              <Text\n                text={'Дата початку'}\n                textClass=\"title-form-todo-preview-date\"\n              />\n              <div className={s.partDataDate}>\n                <Text text={dateFrom} textClass=\"hidenInput-date\" />\n              </div>\n            </div>\n            <div className={s.partGroup}>\n              <Text\n                text={'Дата закінчення'}\n                textClass=\"title-form-todo-preview-date\"\n              />\n              <div className={s.partDataDate}>\n                <Text text={dateTo} textClass=\"hidenInput-date\" />\n              </div>\n            </div>\n            <Text\n              text={\n                saveAfterDeadline\n                  ? '*Ваше завдання буде збережене після закінчення терміну його виконання'\n                  : '*Ваше завдання буде видалено після закінчення терміну його виконання'\n              }\n              textClass=\"title-form-todo-preview-notify\"\n            />\n          </li>\n        </ul>\n      </div>\n      {showTodo && (\n        <div className={s.todoWindow}>\n          <div className={s.todoPart}>\n            <button className={s.dismissButton} onClick={openTodo}>\n              <FontAwesomeIcon icon={faTimes} size=\"2x\" color=\"white\" />\n            </button>\n            <Todo\n              {...{\n                additionalInfo,\n                dateFrom,\n                dateTo,\n                otherMembers,\n                part,\n                subject,\n                saveAfterDeadline,\n                _id,\n              }}\n            />\n            <div className={s.editTodo}>\n              <div className={s.editTodoGroup}>\n                <Text\n                  text={'Редагувати завдання'}\n                  textClass=\"title-form-todo-edit\"\n                />\n                <div className={s.arrowButton} onClick={goToEditTodo}>\n                  <FontAwesomeIcon\n                    icon={faWrench}\n                    style={{ fontSize: '24px' }}\n                    color=\"black\"\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default TodoPreview;\n","// extracted by mini-css-extract-plugin\nexport default {\"paginationSection\":\"Pagination_paginationSection__1F1CP\",\"pagesSet\":\"Pagination_pagesSet__2tGzL\",\"pageBox\":\"Pagination_pageBox__Ti6uC\",\"active\":\"Pagination_active__yaPsQ\",\"btnLeft\":\"Pagination_btnLeft__Gnp4s\",\"btnRight\":\"Pagination_btnRight__O85qW\"};","import React from 'react';\n\nimport s from './Pagination.module.scss';\n\ninterface IPaginationProps {\n  totalPages: number;\n  currentPage: number;\n  onPageChange: (newPage: number) => void;\n  type?: string;\n}\n\nconst Pagination: React.FC<IPaginationProps> = ({\n  totalPages,\n  currentPage,\n  onPageChange,\n  type,\n}) => {\n  const getPageNumbers = () => {\n    const pageNumbers = [];\n    const displayRange = 2; // Кількість сторінок, які відображаються навколо поточної сторінки\n\n    let startPage = Math.max(1, currentPage - displayRange);\n    let endPage = Math.min(totalPages, currentPage + displayRange);\n\n    if (currentPage <= displayRange) {\n      endPage = Math.min(displayRange * 2 + 1, totalPages);\n    }\n\n    if (currentPage >= totalPages - displayRange) {\n      startPage = Math.max(totalPages - displayRange * 2, 1);\n    }\n\n    for (let page = startPage; page <= endPage; page++) {\n      pageNumbers.push(page);\n    }\n\n    return pageNumbers;\n  };\n\n  return (\n    <div className={s.paginationSection}>\n      <button\n        className={`${s.btnLeft} ${s.pageBox}`}\n        onClick={() => onPageChange(currentPage - 1)}\n        disabled={currentPage === 1}\n      >\n        &lt;\n      </button>\n      <div className={s.pagesSet}>\n        {getPageNumbers().map(page => (\n          <button\n            key={page}\n            onClick={() => onPageChange(page)}\n            className={currentPage === page ? s.active : s.pageBox}\n          >\n            {page}\n          </button>\n        ))}\n      </div>\n      <button\n        className={`${s.btnRight} ${s.pageBox}`}\n        onClick={() => onPageChange(currentPage + 1)}\n        disabled={currentPage === totalPages}\n      >\n        &gt;\n      </button>\n    </div>\n  );\n};\n\nexport default Pagination;\n","// extracted by mini-css-extract-plugin\nexport default {\"todoSearchBox\":\"SearchTodo_todoSearchBox__BlhWN\",\"formSection\":\"SearchTodo_formSection__f5f6C\",\"scroll\":\"SearchTodo_scroll__7UFnE\",\"checkbox\":\"SearchTodo_checkbox__0W0pl\",\"list\":\"SearchTodo_list__epjPQ\",\"lastListItem\":\"SearchTodo_lastListItem__b8c6w\",\"button\":\"SearchTodo_button__O5E89\"};","import React, { useState, useRef, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useForm, Controller } from 'react-hook-form';\nimport { useNavigate } from 'react-router-dom';\nimport moment, { Moment } from 'moment';\nimport { useAppDispatch } from '../../../hooks/hooks';\nimport { buildURL } from '../../helpers/buildURL';\n\nimport { fields } from '../../Shared/TextField/fields';\nimport { searchLocalStoradge } from '../../helpers/searchLocalStoradge';\nimport Text from '../../Shared/Text';\nimport SelectField from '../../Shared/SelectField';\nimport TextField from '../../Shared/TextField';\nimport Calendar from '../../Shared/Calendar';\nimport Button from '../../Shared/Button';\nimport { getOptionMenu } from '../../../Redux/technical/technical-selectors';\nimport { getLogin } from '../../../Redux/auth/auth-selectors';\nimport { getEmailList } from '../../../Redux/technical/technical-selectors';\nimport { getSearchTodo } from '../../../Redux/todo/todo-operations';\nimport { saveArrayTodosSearch } from '../../../Redux/todo/todo-slice';\nimport { getWeekPage } from '../../../Redux/technical/technical-selectors';\n\nimport { ITodoSearch } from '../../types/todo/todo';\n\nimport s from './SearchTodo.module.scss';\n\nconst SearchTodo: React.FC = () => {\n  const dispatch = useAppDispatch();\n  const navigate = useNavigate();\n  const wrapperRef = useRef<HTMLDivElement | null>(null);\n  const [selectedDate] = useState<Moment>(moment());\n  const options = useSelector(getOptionMenu);\n  const isUserLogin = useSelector(getLogin);\n  const weekPage = useSelector(getWeekPage);\n\n  const arrayUser = useSelector(getEmailList);\n  const [finalListUser, setFinalListUser] = useState<string[]>(arrayUser);\n  const [selectedUsers, setSelectedUsers] = useState<string[]>([]);\n  const [isListVisible, setIsListVisible] = useState<boolean>(false);\n  const [clearTextField, setClearTextField] = useState<boolean>(false);\n  const optionsStatus = [\n    { value: 'Виконується', label: 'Виконується' },\n    { value: 'Термін закінчився', label: 'Термін закінчився' },\n    { value: 'Всі завдання', label: 'Всі завдання' },\n  ];\n\n  //Прибираэмо список коли відбувся клік за межами div\n  useEffect(() => {\n    const handleClickOutside = (event: MouseEvent) => {\n      if (\n        wrapperRef.current &&\n        !wrapperRef.current.contains(event.target as Node)\n      ) {\n        setIsListVisible(false);\n        setClearTextField(false);\n      }\n    };\n    document.addEventListener('click', handleClickOutside);\n    return () => {\n      document.removeEventListener('click', handleClickOutside);\n    };\n  }, [wrapperRef, clearTextField]);\n\n  useEffect(() => {\n    setClearTextField(false);\n  }, [selectedUsers]);\n\n  const { control, handleSubmit, reset } = useForm<ITodoSearch>({\n    defaultValues: {\n      searchByPart: { value: '', label: '' },\n      searchByPhrase: '',\n      searchByDate: '',\n      searchByStatus: { value: '', label: '' },\n      searchByOtherMembers: '',\n    },\n  });\n\n  const onSubmit = async (data: ITodoSearch) => {\n    let array;\n    let searchPage = 0;\n    const finalData: ITodoSearch = {\n      searchByPart: data.searchByPart.value,\n      searchByPhrase: data.searchByPhrase,\n      searchByDate: data.searchByDate,\n      searchByStatus: data.searchByStatus.value,\n      searchByOtherMembers: selectedUsers.join(', '),\n    };\n\n    if (!isUserLogin) {\n      const searchArray = await searchLocalStoradge(finalData);\n      array = await dispatch(saveArrayTodosSearch(searchArray));\n    } else {\n      array = await dispatch(getSearchTodo(finalData));\n    }\n    if (\n      isUserLogin &&\n      array.payload &&\n      array.payload.arrayTodosSearch &&\n      array.payload.arrayTodosSearch.length > 0\n    ) {\n      searchPage = 1;\n    }\n    if (!isUserLogin && array.payload && array.payload.length > 0) {\n      searchPage = 1;\n    }\n\n    const newUrl = await buildURL(finalData, searchPage, weekPage);\n    navigate(newUrl);\n\n    reset();\n    setSelectedUsers([]);\n    setIsListVisible(false);\n  };\n\n  const handleUserSelection = (email: string) => {\n    if (selectedUsers.includes(email)) {\n      setSelectedUsers(selectedUsers.filter(user => user !== email));\n      setClearTextField(true);\n    } else {\n      setSelectedUsers([...selectedUsers, email]);\n      setClearTextField(true);\n    }\n  };\n\n  const handleTextSearch = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const text = e.target.value;\n    const filteredUsers = arrayUser.filter((email: string) =>\n      email.includes(text)\n    );\n    if (arrayUser.length > 0) {\n      setFinalListUser(filteredUsers);\n    } else {\n      setFinalListUser([text]);\n    }\n  };\n\n  const handleTextSearchFocus = () => {\n    setIsListVisible(true);\n  };\n\n  return (\n    <div className={s.container}>\n      <form className={s.formSection} onSubmit={handleSubmit(onSubmit)}>\n        <div className={s.todoSearchBox}>\n          <div className={s.todoSearchBoxPart}>\n            <Text text={'За розділом'} textClass=\"title-form\" />\n            <Controller\n              control={control}\n              name=\"searchByPart\"\n              rules={{ required: false }}\n              render={({ field: { onChange, value }, fieldState }) => (\n                <SelectField\n                  value={value}\n                  handleChange={newValue => {\n                    onChange(newValue);\n                  }}\n                  name=\"searchByPart\"\n                  className=\"createTodo\"\n                  placeholder=\"Оберіть опцію\"\n                  required={false}\n                  options={options}\n                />\n              )}\n            />\n          </div>\n          <div className={s.todoSearchBoxPart}>\n            <Text text={'За словом чи фразою'} textClass=\"title-form\" />\n            <Controller\n              control={control}\n              name=\"searchByPhrase\"\n              rules={{ required: false }}\n              render={({ field: { onChange, value }, fieldState }) => (\n                <TextField\n                  value={value}\n                  control={control}\n                  className=\"createTodo\"\n                  handleChange={e => {\n                    const newValue = e.target.value;\n                    onChange(newValue);\n                  }}\n                  error={fieldState.error}\n                  {...fields.searchByPhrase}\n                />\n              )}\n            />\n          </div>\n          <div className={s.todoSearchBoxPart}>\n            <Text text={'За датою'} textClass=\"title-form\" />\n            <Controller\n              control={control}\n              name=\"searchByDate\"\n              rules={{ required: false }}\n              render={({ field: { onChange } }) => (\n                <Calendar\n                  dateFormat=\"dd.MM.yyyy\"\n                  showMonthYearPicker={false}\n                  value={selectedDate.toDate()}\n                  handleChange={newValue => {\n                    onChange(newValue);\n                  }}\n                />\n              )}\n            />\n          </div>\n          <div className={s.todoSearchBoxPart}>\n            <Text text={'За статусом'} textClass=\"title-form\" />\n            <Controller\n              control={control}\n              name=\"searchByStatus\"\n              rules={{ required: false }}\n              render={({ field: { onChange, value }, fieldState }) => (\n                <SelectField\n                  value={value}\n                  handleChange={newValue => {\n                    onChange(newValue);\n                  }}\n                  name=\"searchByStatus\"\n                  className=\"createTodo\"\n                  placeholder=\"Оберіть опцію\"\n                  required={false}\n                  options={optionsStatus}\n                />\n              )}\n            />\n          </div>\n          {isUserLogin && (\n            <div ref={wrapperRef} className={s.todoSearchBoxPart}>\n              <Text text={'За користувачем'} textClass=\"title-form\" />\n              <TextField\n                className={'searchIST'}\n                handleChange={handleTextSearch}\n                onFocus={handleTextSearchFocus}\n                clearTextField={clearTextField}\n                {...fields.search}\n              />\n              {isListVisible && (\n                <ul className={s.scroll}>\n                  {finalListUser.map((email, index) => (\n                    <li\n                      key={email}\n                      className={\n                        index === finalListUser.length - 1\n                          ? s.lastListItem\n                          : s.list\n                      }\n                    >\n                      <label>\n                        <input\n                          type=\"checkbox\"\n                          className={s.checkbox}\n                          checked={selectedUsers.includes(email)}\n                          onChange={() => handleUserSelection(email)}\n                        />\n                        {email}\n                      </label>\n                    </li>\n                  ))}\n                </ul>\n              )}\n            </div>\n          )}\n          {isUserLogin && selectedUsers.length > 0 && (\n            <div className={s.todoSearchBoxPart}>\n              <Text\n                text={'Список обраних користувачів'}\n                textClass=\"title-form\"\n              />\n              <Text text={selectedUsers.join(', ')} textClass=\"list-users\" />\n            </div>\n          )}\n        </div>\n        <div className={s.button}>\n          <Button text=\"Знайти завдання\" btnClass=\"btnLight\" />\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default SearchTodo;\n","// extracted by mini-css-extract-plugin\nexport default {\"todosGroup\":\"TodoList_todosGroup__IxkXr\"};","import React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { useAppDispatch } from '../../hooks/hooks';\nimport { useMediaQuery } from 'react-responsive';\nimport moment from 'moment';\nimport { getTodosWeek } from '../../Redux/todo/todo-operations';\nimport { getArrayTodosWeek } from '../../Redux/todo/todo-selectors';\nimport { getLogin } from '../../Redux/auth/auth-selectors';\nimport { saveArrayTodosWeek } from '../../Redux/todo/todo-slice';\nimport { getArrayTodosSearch } from '../../Redux/todo/todo-selectors';\nimport {\n  saveSearchPage,\n  saveWeekPage,\n} from '../../Redux/technical/technical-slice';\nimport {\n  getSearchPage,\n  getWeekPage,\n} from '../../Redux/technical/technical-selectors';\nimport { getSearchTodo } from '../../Redux/todo/todo-operations';\nimport { saveArrayTodosSearch } from '../../Redux/todo/todo-slice';\nimport {\n  clearArrayTodosSearch,\n  clearArrayTodosWeek,\n} from '../../Redux/todo/todo-slice';\n\nimport { parseURL } from '../helpers/parseURL';\nimport { buildURL } from '../helpers/buildURL';\nimport { searchLocalStoradge } from '../helpers/searchLocalStoradge';\n\nimport Container from '../Shared/Container';\nimport Text from '../Shared/Text';\nimport TodoPreview from '../TodoPreview';\nimport Pagination from '../Shared/Pagination';\nimport SearchTodo from './SearchTodo';\n\nimport { ITodoCreate, ITodoServer, ITodoSearch } from '../types/todo/todo';\n\nimport s from './TodoList.module.scss';\n\nconst chunkArray = (array: ITodoServer[], chunkSize: number) => {\n  return Array.from(\n    { length: Math.ceil(array.length / chunkSize) },\n    (_, index) => array.slice(index * chunkSize, (index + 1) * chunkSize)\n  );\n};\n\nconst TodoList: React.FC = () => {\n  const vpHeight = window.innerHeight;\n  const [dynamicStyles, setDynamicStyles] = useState({});\n  const dispatch = useAppDispatch();\n  const navigate = useNavigate();\n  const userLogin = useSelector(getLogin);\n  const arrayTodosWeek = useSelector(getArrayTodosWeek);\n  const arrayTodosSearch = useSelector(getArrayTodosSearch);\n  const searchPage = useSelector(getSearchPage);\n  const weekPage = useSelector(getWeekPage);\n\n  const isTablet = useMediaQuery({ minWidth: 768, maxWidth: 1279 });\n\n  let itemsPerPage = isTablet ? 2 : 3;\n  const totalPagesSearch =\n    arrayTodosSearch && arrayTodosSearch.length > 0\n      ? Math.ceil(arrayTodosSearch.length / itemsPerPage)\n      : 0;\n  const totalPagesWeek =\n    arrayTodosWeek && arrayTodosWeek.length > 0\n      ? Math.ceil(arrayTodosWeek.length / itemsPerPage)\n      : 0;\n\n  const [currentGroupSearchIndex, setCurrentGroupSearchIndex] = useState(0);\n  const [currentGroupWeekIndex, setCurrentGroupWeekIndex] = useState(0);\n\n  const chunkedTodosSearch = arrayTodosSearch\n    ? chunkArray(arrayTodosSearch, itemsPerPage)\n    : [];\n  const chunkedTodosWeek = arrayTodosWeek\n    ? chunkArray(arrayTodosWeek, itemsPerPage)\n    : [];\n  const currentGroupSearch = chunkedTodosSearch[currentGroupSearchIndex] || [];\n  const currentGroupWeek = chunkedTodosWeek[currentGroupWeekIndex] || [];\n\n  useEffect(() => {\n    setDynamicStyles({\n      minHeight: userLogin ? `${vpHeight - 64}px` : `${vpHeight - 64 - 39}px`,\n    });\n  }, [userLogin, vpHeight]);\n\n  useEffect(() => {\n    let arraySearch;\n    let arrayWeek;\n    dispatch(clearArrayTodosSearch());\n    dispatch(clearArrayTodosWeek());\n    setCurrentGroupSearchIndex(0);\n    setCurrentGroupWeekIndex(0);\n\n    const fetchDataFromLocalStorage = () => {\n      const localStorageData = localStorage.getItem('notes-organizer_tasks');\n      const currentDate = moment();\n      if (localStorageData) {\n        const tasksFromLocalStorage = JSON.parse(localStorageData);\n        // We filter the tasks that need to be left in the local storage\n        const validTodos = tasksFromLocalStorage.filter((todo: ITodoCreate) => {\n          const dueDate = moment(todo.dateTo, 'DD.MM.YYYY');\n          const daysUntilDue = dueDate.diff(currentDate, 'days');\n\n          return daysUntilDue >= 0 || todo.saveAfterDeadline;\n        });\n        // We update the local storage with a new array of tasks\n        localStorage.setItem(\n          'notes-organizer_tasks',\n          JSON.stringify(validTodos)\n        );\n\n        const todosThisWeek = validTodos.filter((todo: ITodoCreate) => {\n          const dueDate = moment(todo.dateTo, 'DD.MM.YYYY');\n          const daysUntilDue = dueDate.diff(currentDate, 'days');\n\n          return daysUntilDue >= 0 && daysUntilDue <= 7;\n        });\n        dispatch(saveArrayTodosWeek(todosThisWeek));\n        return todosThisWeek;\n      }\n    };\n\n    const separationOfProcesses = async (\n      urlData: ITodoSearch,\n      weekPage: string | null,\n      searchPage: string | null\n    ) => {\n      const searchByPart = urlData.searchByPart;\n      const searchByPhrase = urlData.searchByPhrase;\n      const searchByDate = urlData.searchByDate;\n      const searchByStatus = urlData.searchByStatus;\n      const searchByOtherMembers = urlData.searchByOtherMembers;\n      const numberWeekPage = weekPage ? Number(weekPage) : 0;\n      const numberSearchPage = searchPage ? Number(searchPage) : 0;\n\n      if (\n        searchByPart === '' &&\n        searchByPhrase === '' &&\n        searchByDate === '' &&\n        searchByStatus === '' &&\n        searchByOtherMembers === ''\n      ) {\n        //If we don't have a search url\n        if (userLogin) {\n          arrayWeek = (await dispatch(getTodosWeek())) as any;\n          if (\n            arrayWeek.payload &&\n            arrayWeek.payload.arrayTodosWeek &&\n            arrayWeek.payload.arrayTodosWeek.length > 0\n          ) {\n            dispatch(saveWeekPage(numberWeekPage ? numberWeekPage : 1));\n            setCurrentGroupWeekIndex(numberWeekPage ? numberWeekPage - 1 : 0);\n          } else {\n            dispatch(saveWeekPage(0));\n            setCurrentGroupWeekIndex(0);\n          }\n        } else {\n          arrayWeek = fetchDataFromLocalStorage();\n          if (arrayWeek && arrayWeek.length > 0) {\n            dispatch(saveWeekPage(numberWeekPage ? numberWeekPage : 1));\n            setCurrentGroupWeekIndex(numberWeekPage ? numberWeekPage - 1 : 0);\n          } else {\n            dispatch(saveWeekPage(0));\n            setCurrentGroupWeekIndex(0);\n          }\n        }\n      } else {\n        //If we have a search url\n        const finalData: ITodoSearch = {\n          searchByPart,\n          searchByPhrase,\n          searchByDate,\n          searchByStatus,\n          searchByOtherMembers,\n        };\n        if (userLogin) {\n          arrayWeek = (await dispatch(getTodosWeek())) as any;\n          if (\n            arrayWeek.payload &&\n            arrayWeek.payload.arrayTodosWeek &&\n            arrayWeek.payload.arrayTodosWeek.length > 0\n          ) {\n            dispatch(saveWeekPage(numberWeekPage ? numberWeekPage : 1));\n            setCurrentGroupWeekIndex(numberWeekPage ? numberWeekPage - 1 : 0);\n          } else {\n            dispatch(saveWeekPage(0));\n            setCurrentGroupWeekIndex(0);\n          }\n\n          arraySearch = (await dispatch(getSearchTodo(finalData))) as any;\n          if (\n            arraySearch.payload &&\n            arraySearch.payload.arrayTodosSearch.length > 0\n          ) {\n            dispatch(saveSearchPage(numberSearchPage ? numberSearchPage : 1));\n            setCurrentGroupSearchIndex(\n              numberSearchPage ? numberSearchPage - 1 : 0\n            );\n          } else {\n            dispatch(saveSearchPage(0));\n            setCurrentGroupSearchIndex(0);\n          }\n        } else {\n          arrayWeek = fetchDataFromLocalStorage();\n          if (arrayWeek && arrayWeek.length > 0) {\n            dispatch(saveWeekPage(numberWeekPage ? numberWeekPage : 1));\n            setCurrentGroupWeekIndex(numberWeekPage ? numberWeekPage - 1 : 0);\n          } else {\n            dispatch(saveWeekPage(0));\n            setCurrentGroupWeekIndex(0);\n          }\n\n          arraySearch = await searchLocalStoradge(finalData);\n          await dispatch(saveArrayTodosSearch(arraySearch));\n          if (arraySearch && arraySearch.length > 0) {\n            dispatch(saveSearchPage(numberSearchPage ? numberSearchPage : 1));\n            setCurrentGroupSearchIndex(\n              numberSearchPage ? numberSearchPage - 1 : 0\n            );\n          } else {\n            dispatch(saveSearchPage(0));\n            setCurrentGroupSearchIndex(0);\n          }\n        }\n      }\n    };\n\n    const { urlData, weekPage, searchPage } = parseURL();\n\n    separationOfProcesses(urlData, weekPage, searchPage);\n  }, [dispatch, userLogin]);\n\n  //We change the URL when changing week or search pages\n  useEffect(() => {\n    const paramsURL = parseURL();\n    const newUrl = buildURL(paramsURL.urlData, searchPage, weekPage);\n\n    navigate(newUrl);\n  }, [weekPage, searchPage, navigate]);\n\n  const handlePageChange = (pageIndex: number, type: string) => {\n    if (type === 'search') {\n      setCurrentGroupSearchIndex(pageIndex - 1);\n      dispatch(saveSearchPage(pageIndex));\n    } else if (type === 'week') {\n      setCurrentGroupWeekIndex(pageIndex - 1);\n      dispatch(saveWeekPage(pageIndex));\n    }\n  };\n\n  return (\n    <section className={s.todoList} style={dynamicStyles}>\n      <Container>\n        <div>\n          {arrayTodosWeek && arrayTodosWeek.length > 0 && (\n            <div>\n              <Text\n                text={`Завдання, які потрібно завершити в наступні 7 днів (${arrayTodosWeek.length} шт)`}\n                textClass=\"title-form-list\"\n              />\n              {currentGroupWeek && (\n                <ul className={s.todosGroup}>\n                  {currentGroupWeek.map((todo: ITodoServer) => (\n                    <li key={todo._id}>\n                      <TodoPreview {...todo} />\n                    </li>\n                  ))}\n                </ul>\n              )}\n              <div>\n                {totalPagesWeek > 0 && (\n                  <Pagination\n                    totalPages={totalPagesWeek}\n                    currentPage={currentGroupWeekIndex + 1}\n                    onPageChange={page => handlePageChange(page, 'week')}\n                  />\n                )}\n              </div>\n            </div>\n          )}\n          {arrayTodosWeek && arrayTodosWeek.length === 0 && (\n            <div>\n              <Text\n                text={\n                  'У вас не має завдань, які потрібно завершити в наступні 7 днів'\n                }\n                textClass=\"title-form-list\"\n              />\n            </div>\n          )}\n          <div>\n            <Text\n              text={'Пошук завдань за критеріями'}\n              textClass=\"title-form-list\"\n            />\n            <SearchTodo />\n          </div>\n          <div>\n            {arrayTodosSearch && arrayTodosSearch.length > 0 && (\n              <>\n                {currentGroupSearch && (\n                  <ul className={s.todosGroup}>\n                    {currentGroupSearch.map((todo: ITodoServer) => (\n                      <li key={todo._id}>\n                        <TodoPreview {...todo} />\n                      </li>\n                    ))}\n                  </ul>\n                )}\n                <div>\n                  {totalPagesSearch > 0 && (\n                    <Pagination\n                      totalPages={totalPagesSearch}\n                      currentPage={currentGroupSearchIndex + 1}\n                      onPageChange={page => handlePageChange(page, 'search')}\n                    />\n                  )}\n                </div>\n              </>\n            )}\n          </div>\n        </div>\n      </Container>\n    </section>\n  );\n};\n\nexport default TodoList;\n","import { useSelector } from 'react-redux';\nimport { getLogin } from '../../Redux/auth/auth-selectors';\nimport Text from '../../components/Shared/Text';\nimport TodoList from '../../components/TodoList/TodoList';\n\nconst TodoListPage: React.FC = () => {\n  const isUserLogin = useSelector(getLogin);\n\n  return (\n    <>\n      {!isUserLogin && (\n        <Text\n          text={\n            'Зареєструйтесь, щоб отримати доступ до ваших завдань на різних пристроях'\n          }\n          textClass=\"catalogTitle\"\n        />\n      )}\n      <TodoList />\n    </>\n  );\n};\n\nexport default TodoListPage;\n"],"names":["_ref","width","height","_jsxs","viewBox","fill","xmlns","children","_jsx","d","dateFormat","showMonthYearPicker","value","handleChange","currentDate","Date","maxDate","setMonth","getMonth","selectedDate","setSelectedDate","useState","moment","useEffect","CustomInput","forwardRef","_ref2","ref","onClick","displayDate","setDisplayDate","format","type","className","s","CalendarIcon","_Fragment","DatePicker","selected","toDate","onChange","date","handleDateChange","customInput","renderDayContents","renderCustomDayContents","dayOfMonth","selectedValue","startOf","currentValue","isSame","name","placeholder","required","options","defaultValue","labelClass","concat","label","selectClass","select","isMobile","useMediaQuery","maxWidth","isTablet","minWidth","customStyles","control","provided","state","_objectSpread","fontSize","color","pointerEvents","borderColor","isFocused","option","styles","isDisabled","isSelected","backgroundColor","textColor","undefined","display","alignItems","cursor","menu","marginTop","Select","theme","borderRadius","colors","primary","spanClass","props","inputClass","input","span","clearTextField","inputValue","setInputValue","isValue","setIsValue","handleInputChange","useCallback","e","newValue","target","onFocus","handleFocus","onBlur","handleBlur","title","CiSearch","size","style","marginRight","marginLeft","error","fields","username","email","password","subject","search","searchByPhrase","checkDate","today","isSameOrAfter","additionalInfo","dateFrom","dateTo","otherMembers","part","saveAfterDeadline","Text","text","textClass","FaClock","FaTimes","searchLocalStoradge","searchData","_searchData$searchByP","lowerCaseSearchPhrase","toLowerCase","localStorageData","localStorage","getItem","filteredTasks","JSON","parse","filter","task","searchByDate","isDateInRange","startDate","endDate","momentDate","momentStartDate","momentEndDate","isBetween","searchByPart","includes","searchByStatus","isBefore","isAfter","length","parseURL","urlParams","URLSearchParams","window","location","get","phrase","status","members","urlData","searchByOtherMembers","weekPage","searchPage","buildURL","set","String","queryString","toString","_id","showTodo","setShowTodo","navigate","useNavigate","openTodo","FontAwesomeIcon","icon","faTimes","Todo","goToEditTodo","faWrench","totalPages","currentPage","onPageChange","disabled","getPageNumbers","pageNumbers","startPage","Math","max","endPage","min","displayRange","page","push","map","SearchTodo","dispatch","useAppDispatch","wrapperRef","useRef","useSelector","getOptionMenu","isUserLogin","getLogin","getWeekPage","arrayUser","getEmailList","finalListUser","setFinalListUser","selectedUsers","setSelectedUsers","isListVisible","setIsListVisible","setClearTextField","optionsStatus","handleClickOutside","event","current","contains","document","addEventListener","removeEventListener","handleSubmit","reset","useForm","defaultValues","container","formSection","onSubmit","async","array","finalData","data","join","getSearchTodo","searchArray","saveArrayTodosSearch","payload","arrayTodosSearch","newUrl","todoSearchBox","todoSearchBoxPart","Controller","rules","render","field","fieldState","SelectField","TextField","_ref3","Calendar","_ref4","filteredUsers","handleTextSearchFocus","scroll","index","lastListItem","list","checkbox","checked","user","handleUserSelection","button","Button","btnClass","chunkArray","chunkSize","Array","from","ceil","_","slice","TodoList","vpHeight","innerHeight","dynamicStyles","setDynamicStyles","userLogin","arrayTodosWeek","getArrayTodosWeek","getArrayTodosSearch","getSearchPage","itemsPerPage","totalPagesSearch","totalPagesWeek","currentGroupSearchIndex","setCurrentGroupSearchIndex","currentGroupWeekIndex","setCurrentGroupWeekIndex","chunkedTodosSearch","chunkedTodosWeek","currentGroupSearch","currentGroupWeek","minHeight","arraySearch","arrayWeek","clearArrayTodosSearch","clearArrayTodosWeek","fetchDataFromLocalStorage","validTodos","todo","diff","setItem","stringify","todosThisWeek","daysUntilDue","saveArrayTodosWeek","numberWeekPage","Number","numberSearchPage","getTodosWeek","saveWeekPage","saveSearchPage","separationOfProcesses","paramsURL","handlePageChange","pageIndex","todoList","Container","todosGroup","TodoPreview","Pagination","TodoListPage"],"sourceRoot":""}