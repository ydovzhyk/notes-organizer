{"version":3,"file":"static/js/564.2059e00b.chunk.js","mappings":"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","sources":["webpack://notes-organizer/./src/components/CreateTodo/UserList.module.scss?2bd5","components/CreateTodo/UserList.tsx","components/Shared/Calendar/CalendarImage/CalendarImage.tsx","webpack://notes-organizer/./src/components/Shared/Calendar/Calendar.module.scss?fcee","components/Shared/Calendar/Calendar.tsx","webpack://notes-organizer/./src/components/Shared/Container/Container.module.scss?7328","components/Shared/Container/Container.tsx","webpack://notes-organizer/./src/components/Shared/Message/Message.module.scss?4cec","components/Shared/Message/Message.tsx","webpack://notes-organizer/./src/components/Shared/SelectField/SelectField.module.scss?ede3","components/Shared/SelectField/SelectField.tsx","webpack://notes-organizer/./src/components/Shared/TextField/TextField.module.scss?3228","components/Shared/TextField/TextField.tsx","components/Shared/TextField/fields.ts","webpack://notes-organizer/./src/components/Todo/Todo.module.scss?77b2","components/Todo/Todo.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"UserList_list__4gCWa\",\"lastListItem\":\"UserList_lastListItem__dyBV2\",\"scroll\":\"UserList_scroll__i4FBW\",\"checkbox\":\"UserList_checkbox__-yb02\"};","import React, { useState } from 'react';\nimport TextField from '../Shared/TextField';\nimport { fields } from '../Shared/TextField/fields'\n\nimport s from './UserList.module.scss'\n\nexport interface IUserList {\n    arrayUser: string[]; \n    selectedUsers: string[]; \n    setSelectedUsers: React.Dispatch<React.SetStateAction<string[]>>;\n}\n\nconst UserList: React.FC<IUserList> = ({ arrayUser, selectedUsers, setSelectedUsers }) => {\n    const [finalListUser, setFinalListUser] = useState<string[]>(arrayUser);\n\n    const handleUserSelection = (email: string) => {\n        if (selectedUsers.includes(email)) {\n            setSelectedUsers(selectedUsers.filter((user) => user !== email));\n        } else {\n            setSelectedUsers([...selectedUsers, email]);\n        }\n    };\n\n    const handleTextSearch = (e: React.ChangeEvent<HTMLInputElement>) => {\n        const text = e.target.value;\n        const filteredUsers = arrayUser.filter((email) => email.includes(text));\n        if (arrayUser.length > 0) {\n            setFinalListUser(filteredUsers);\n        } else {\n            setFinalListUser([text]);\n        }\n    };\n\n    return (\n        <>\n        <TextField\n            className=\"search\"\n            handleChange={handleTextSearch}\n            {...fields.search}\n        />\n        <ul className={s.scroll}>\n        {finalListUser.map((email, index) => (\n            <li key={email} className={index === finalListUser.length - 1 ? s.lastListItem : s.list}>\n                <label>\n                    <input\n                        type=\"checkbox\"\n                        className={s.checkbox}\n                        checked={selectedUsers.includes(email)}\n                        onChange={() => handleUserSelection(email)}\n                    />\n                    {email}\n                </label>\n            </li>\n            ))}\n            </ul>\n        </>\n    );\n};\n\nexport default UserList;","import React from \"react\";\n\ninterface ICalendarIconProps {\n  width: string;\n  height: string;\n}\n\nconst CalendarIcon: React.FC<ICalendarIconProps> = ({ width, height }) => {\n  return (\n    <svg\n      viewBox=\"0 0 20 20\"\n      width={width}\n      height={height}\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M17.475 2.067h-1.312v-.321a.586.586 0 1 0-1.171 0v.32h-1.617v-.32a.586.586 0 0 0-1.172 0v.32h-1.617v-.32a.586.586 0 1 0-1.172 0v.32H7.797v-.32a.586.586 0 0 0-1.172 0v.32H5.008v-.32a.586.586 0 0 0-1.171 0v.32H2.525A2.527 2.527 0 0 0 0 4.592v11.724a2.527 2.527 0 0 0 2.525 2.525h14.95A2.527 2.527 0 0 0 20 16.316V4.59a2.527 2.527 0 0 0-2.525-2.524Zm1.353 14.248c0 .746-.607 1.353-1.353 1.353H2.525a1.354 1.354 0 0 1-1.353-1.352V6.732h17.656v9.584Zm0-10.755H1.172v-.969c0-.745.607-1.352 1.353-1.352h1.312v.226a.586.586 0 0 0 1.171 0V3.24h1.617v.226a.586.586 0 0 0 1.172 0V3.24h1.617v.226a.586.586 0 0 0 1.172 0V3.24h1.617v.226a.586.586 0 0 0 1.172 0V3.24h1.617v.226a.586.586 0 1 0 1.171 0V3.24h1.312c.746 0 1.353.607 1.353 1.352v.97Z\"\n        fill=\"#52555F\"\n      />\n      <path\n        d=\"M6.532 7.982H4.22a.586.586 0 0 0-.586.586v2.392c0 .323.262.586.586.586h2.312a.586.586 0 0 0 .586-.586V8.568a.586.586 0 0 0-.586-.586Zm-.586 2.392h-1.14v-1.22h1.14v1.22ZM11.156 7.982H8.844a.586.586 0 0 0-.586.586v2.392c0 .323.262.586.586.586h2.312a.586.586 0 0 0 .586-.586V8.568a.586.586 0 0 0-.586-.586Zm-.586 2.392H9.43v-1.22h1.14v1.22ZM15.78 7.982h-2.312a.586.586 0 0 0-.586.586v2.392c0 .323.262.586.586.586h2.312a.586.586 0 0 0 .586-.586V8.568a.586.586 0 0 0-.586-.586Zm-.586 2.392h-1.14v-1.22h1.14v1.22ZM6.532 12.526H4.22a.586.586 0 0 0-.586.586v2.392c0 .323.262.586.586.586h2.312a.586.586 0 0 0 .586-.586v-2.392a.586.586 0 0 0-.586-.586Zm-.586 2.392h-1.14v-1.22h1.14v1.22ZM11.156 12.526H8.844a.586.586 0 0 0-.586.586v2.392c0 .323.262.586.586.586h2.312a.586.586 0 0 0 .586-.586v-2.392a.586.586 0 0 0-.586-.586Zm-.586 2.392H9.43v-1.22h1.14v1.22ZM15.78 12.526h-2.312a.586.586 0 0 0-.586.586v2.392c0 .323.262.586.586.586h2.312a.586.586 0 0 0 .586-.586v-2.392a.586.586 0 0 0-.586-.586Zm-.586 2.392h-1.14v-1.22h1.14v1.22Z\"\n        fill=\"#52555F\"\n      />\n    </svg>\n  );\n}\n\nexport default CalendarIcon;","// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"Calendar_btn__UdtWn\",\"selectedDay\":\"Calendar_selectedDay__2gUhl\",\"day\":\"Calendar_day__sFSOy\"};","import React, { useState, forwardRef, useEffect } from 'react';\nimport DatePicker from 'react-datepicker';\nimport moment, { Moment } from 'moment';\n\nimport CalendarIcon from './CalendarImage/CalendarImage';\nimport 'react-datepicker/dist/react-datepicker.css';\n\nimport s from './Calendar.module.scss';\n\ninterface ICalendarProps {\n  dateFormat: string;\n  showMonthYearPicker: boolean;\n  value: Date;\n  handleChange: (date: string) => void;\n}\n\nconst Calendar: React.FC<ICalendarProps> = ({\n  dateFormat = 'MM.dd.yyyy',\n  showMonthYearPicker,\n  value,\n  handleChange,\n}) => {\n  const currentDate = new Date();\n  const maxDate = new Date();\n  maxDate.setMonth(currentDate.getMonth() + 2);\n\n  const [selectedDate, setSelectedDate] = useState<Moment>( \n    moment(value, 'DD.MM.YYYY')\n  );\n\n  useEffect(() => {\n    setSelectedDate(moment(value, 'DD.MM.YYYY'));\n  }, [value]);\n\n  const handleDateChange = (date: Moment) => {\n    setSelectedDate(date);\n    handleChange(date.format('DD.MM.YYYY'));\n  };\n\n  const CustomInput = forwardRef<HTMLButtonElement, { onClick?: React.MouseEventHandler }>(({ onClick }, ref) => {\n    const [displayDate, setDisplayDate] = useState(\n      moment(selectedDate).format('DD.MM.yyyy')\n    );\n\n    useEffect(() => {\n      setDisplayDate(moment(selectedDate).format('DD.MM.yyyy'));\n    }, []);\n\n    return (\n      <button type=\"button\" className={s.btn} onClick={onClick} ref={ref}>\n        <CalendarIcon width=\"20\" height=\"18\" />\n        {displayDate}\n      </button>\n    );\n  });\n\n  const renderCustomDayContents = (dayOfMonth: number, date: Date) => {\n    const selectedValue = moment(selectedDate.toDate()).startOf('day');\n    const currentValue = moment(date).startOf('day');\n\n    if (selectedValue.isSame(currentValue)) {\n      return <div className={s.selectedDay}>{dayOfMonth}</div>;\n    }\n    return <div className={s.day}>{dayOfMonth}</div>;\n  };\n\n  return (\n    <>\n      <DatePicker\n        selected={selectedDate.toDate()}\n        onChange={date => handleDateChange(moment(date))}\n        customInput={<CustomInput />}\n        dateFormat={dateFormat}\n        showMonthYearPicker={showMonthYearPicker}\n        maxDate={maxDate}\n        renderDayContents={renderCustomDayContents}\n      />\n    </>\n  );\n}\n\nexport default Calendar;","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Container_container__NXBJZ\"};","import React, { ReactNode } from 'react';\nimport s from './Container.module.scss'\n\ninterface ContainerProps {\n    children: ReactNode;\n}\n\nconst Container: React.FC<ContainerProps> = ({ children }) => {\n    return <div className={s.container}>{children}</div>;\n};\n\nexport default Container;","// extracted by mini-css-extract-plugin\nexport default {\"message\":\"Message_message__ODRvr\",\"title\":\"Message_title__2S72I\",\"dismissButton\":\"Message_dismissButton__v2cnV\",\"boo\":\"Message_boo__bFH7r\",\"floating\":\"Message_floating__UDydH\",\"face\":\"Message_face__BNxDx\",\"shadow\":\"Message_shadow__oMueJ\",\"floatingShadow\":\"Message_floatingShadow__e1tkR\",\"ButtonsBlock\":\"Message_ButtonsBlock__yrYG+\",\"btnYes\":\"Message_btnYes__MdhAH\",\"btnNo\":\"Message_btnNo__eKG4k\"};","import React, { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { clearUserMessage } from '../../../Redux/auth/auth-slice';\nimport { clearTodoMessage, statusStopResetMessage } from '../../../Redux/todo/todo-slice';\n\nimport Text from '../Text/Text';\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport s from './Message.module.scss';\n\ninterface IMessageProps {\n  text: string;\n  onDismiss: () => void;\n  onChoice?: (choice: true | false) => void;\n  type: string;\n}\n\nconst Message: React.FC<IMessageProps> = ({ text, onDismiss, onChoice, type }) => {\n  const dispatch = useDispatch();\n  const [isDisplayed, setIsDisplayed] = useState(true);\n  const [isShowChoiceBtn, setIsShowChoiceBtn] = useState(false);\n\n  useEffect(() => {\n    if (text === 'You have tasks saved locally on your computer, would you like to synchronize them with the server?') {\n      setIsShowChoiceBtn(true);\n    } else {\n      setIsShowChoiceBtn(false);\n    }\n  }, [text]);\n\n  onDismiss();\n\n  const handleDismissClick = () => {\n    setIsDisplayed(false);\n    if (type === 'auth') {\n      dispatch(clearUserMessage());\n    } if (type === 'todo') {\n      dispatch(clearTodoMessage());\n      dispatch(statusStopResetMessage(false));\n    }\n  };\n\n  const handleConfirmClick = (choice: true | false) => {\n    if (onChoice) {\n      onChoice(choice);\n    }\n  };\n\n  useEffect(() => {\n    setIsDisplayed(true);\n  }, [text]);\n\n  if (!isDisplayed) {\n    return null;\n  }\n\n  return (\n    <div className={s.message}>\n      <button className={s.dismissButton} onClick={handleDismissClick}>\n        <FontAwesomeIcon icon={faTimes} size=\"lg\" />\n      </button>\n      <div className={s.boo}>\n        <div className={s.face} id=\"face\"></div>\n      </div>\n      <div className={s.shadow}></div>\n      <Text text={text} textClass=\"textMessage\" />\n      {isShowChoiceBtn && (<div className={s.ButtonsBlock}>\n        <button\n          className={s.btnYes}\n          onClick={() => handleConfirmClick(true)}\n        >\n          Yes\n        </button>\n        <button\n          className={s.btnNo}\n          onClick={() => handleConfirmClick(false)}\n        >\n          No\n        </button>\n      </div>\n      )}\n    </div>\n  );\n}\n\nexport default Message;","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"SelectField_label__Y87wK\",\"select\":\"SelectField_select__bwshq\",\"spanClass\":\"SelectField_spanClass__DB-dA\",\"createTodo\":\"SelectField_createTodo__z9Y6X\"};","import React from 'react';\nimport Select, { StylesConfig } from 'react-select';\nimport { useMediaQuery } from 'react-responsive';\n\nimport s from './SelectField.module.scss';\n\ninterface ISelectFieldProps {\n  name: string;\n  value: { value: string; label: string };\n  handleChange: (selectedOption: any) => void;\n  placeholder: string;\n  required: boolean;\n  options: { value: string; label: string }[];\n  className?: string;\n  defaultValue?: { value: string; label: string };\n}\n\nconst SelectField: React.FC<ISelectFieldProps> = ({\n  name,\n  value,\n  handleChange,\n  placeholder,\n  required,\n  options,\n  className,\n  defaultValue,\n}) => {\n  const labelClass = className ? `${s.label} ${s[className]}` : `${s.label}`;\n  const selectClass = className ? `${s.select} ${s[className]}` : `${s.select}`;\n\n  const isMobile = useMediaQuery({ maxWidth: 767 });\n  const isTablet = useMediaQuery({ minWidth: 768, maxWidth: 1279 });\n  // const isDesktop = useMediaQuery({ minWidth: 1280 });\n\n  const customStyles: StylesConfig = {\n  control: (provided: any, state) => ({\n    ...provided,\n    fontSize: isMobile ? '14px' : isTablet ? '15px' : '16px',\n    height: isMobile ? '38px' : isTablet ? '38px' : '48px',\n    color: 'var(--second-text-color)',\n    pointerEvents: 'auto',\n    borderColor: state.isFocused ? 'white' : provided.borderColor,\n  }),\n  option: (styles, { isDisabled, isFocused, isSelected }) => {\n    const backgroundColor = isSelected\n        ? 'black'\n        : isFocused\n        ? 'rgba(0, 0, 0, 0.3)' \n        : 'white';\n\n    const textColor = isSelected ? 'white' : 'black';\n\n    return {\n        ...styles,\n        backgroundColor: isDisabled ? undefined : backgroundColor,\n        color: isDisabled ? '#ccc' : textColor,\n        height: isMobile ? '38px' : isTablet ? '38px' : '48px',\n        display: 'flex',\n        alignItems: 'center',\n        cursor: isDisabled ? 'not-allowed' : 'default',\n        ':active': {\n            ...styles[':active'],\n            backgroundColor: !isDisabled ? isSelected ? 'black' : 'rgba(0, 0, 0, 0.3)' : undefined,\n        },\n    };\n    },\n    menu: (provided, state) => ({\n      ...provided,\n      marginTop: isMobile ? '-8px' : isTablet ? '-8px' : '2px',\n    }),\n};\n\n  return (\n    <label className={labelClass}>\n      <Select\n        className={selectClass}\n        name={name}\n        value={value}\n        onChange={handleChange}\n        placeholder={placeholder}\n        required={required}\n        options={options}\n        styles={customStyles}\n        defaultValue={defaultValue}\n        theme={(theme) => ({\n          ...theme,\n          borderRadius: 0,\n          colors: {\n          ...theme.colors,\n          primary: 'black',\n          },\n        })}\n      />\n      {!defaultValue && value.value === '' && (\n        <span className={s.spanClass}>{placeholder}</span>\n      )}\n    </label>\n  );\n};\n\nexport default SelectField;\n","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"TextField_label__kp4Pv\",\"input\":\"TextField_input__JDykO\",\"error\":\"TextField_error__92ab9\",\"span\":\"TextField_span__qcPmc\",\"value\":\"TextField_value__Rhply\",\"createTodo\":\"TextField_createTodo__PD23L\",\"search\":\"TextField_search__dl4gh\",\"searchIST\":\"TextField_searchIST__LvGwH\"};","import { ChangeEvent, forwardRef, ChangeEventHandler, useState, useEffect, useCallback} from 'react';\nimport { FieldError, Control } from 'react-hook-form';\nimport { useMediaQuery } from 'react-responsive';\nimport { CiSearch } from 'react-icons/ci';\n\nimport s from './TextField.module.scss';\n\nexport interface ITextFieldProps {\n  type?: string;\n  name?: string;\n  value?: string;\n  handleChange?: ChangeEventHandler<HTMLInputElement>;\n  placeholder?: string | string[];\n  required?: boolean;\n  title?: string;\n  className?: string;\n  error?: FieldError;\n  control?: Control<any>;\n  onFocus?: () => void;\n  onBlur?: () => void;\n  clearTextField?: boolean;\n}\n\nconst TextField = forwardRef<HTMLInputElement, ITextFieldProps>((props, ref) => {\n  const labelClass = props.className ? `${s.label} ${s[props.className]}` : `${s.label}`;\n  const inputClass = props.className ? `${s.input} ${s[props.className]}` : `${s.input}`;\n  const spanClass = props.className ? `${s.span} ${s[props.className]}` : `${s.span}`;\n  const clearTextField = props.clearTextField;\n  const isTablet = useMediaQuery({ minWidth: 768, maxWidth: 1279 });\n  const [inputValue, setInputValue] = useState<string>(props.value || '');\n\n  const [isValue, setIsValue] = useState<boolean>(false);\n\n  const handleInputChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    const newValue = e.target.value; \n    setInputValue(newValue);\n\n    if (props.handleChange) {\n      props.handleChange(e);\n    }\n    if (newValue !== '') {\n      setIsValue(true);\n    } else {\n      setIsValue(false);\n    }\n  }, [props]);\n\n  useEffect(() => { \n    if (props.value === '') {\n      setInputValue('');\n    }\n  }, [props.value]);\n\n  //скидуэмо значення Input коли користувач був обраний\n  useEffect(() => {\n    if (clearTextField) {\n      setInputValue('');\n      setIsValue(false);\n      const fakeEvent = {\n        target: {\n          value: '',\n        },\n      } as ChangeEvent<HTMLInputElement>;\n\n      handleInputChange(fakeEvent);\n    } else {\n      return;\n    }\n  }, [clearTextField, handleInputChange]);\n  \n  const handleFocus = () => {\n    if (props.onFocus) {\n      props.onFocus();\n    }\n  };\n\n  const handleBlur = () => {\n    if (props.onBlur) {\n      props.onBlur();\n    }\n  };\n\n  return (\n      <label className={labelClass}>\n        <input\n          ref={ref}\n          className={inputClass}\n          type={props.type}\n          name={props.name}\n          value={inputValue}\n          onChange={handleInputChange}\n          onFocus={handleFocus}\n          onBlur={handleBlur}\n          required={props.required}\n          title={props.title}\n      />\n      {(props.className === 'search' || props.className === 'searchIST') && !isValue &&\n        <span className={spanClass}>\n          <CiSearch size={24} style={{ marginRight: isTablet ? '5px' : '10px', marginLeft: '10px'}}/>\n          {props.placeholder}\n        </span>\n      }\n      {props.className !== 'search' && props.className !== 'searchIST' && !isValue &&\n        <span className={spanClass}>\n          {props.placeholder}\n        </span>\n      }\n        {props.error && <p className={s.error}>{props.title}</p>}\n      </label>\n  );\n});\n\nexport default TextField;\n\n","import { ITextFieldProps } from \"./TextField\";\n\nexport const fields = {\n  username: {\n    label: 'User name',\n    name: 'username',\n    type: 'text',\n    placeholder: 'User name*',\n    title: '*The Name field must be more than 2 and less than 31 characters',\n    required: true,\n  } as ITextFieldProps,\n  email: {\n    label: 'Email',\n    name: 'email',\n    type: 'text',\n    placeholder: 'Email*',\n    title: '*Enter a valid email',\n    required: true,\n  } as ITextFieldProps,\n  password: {\n    label: 'Password',\n    name: 'password',\n    type: 'password',\n    placeholder: 'Password*',\n    title: '*The Password field must be more than 2 and less than 21 characters',\n    required: true,\n  } as ITextFieldProps,\n  subject: {\n    label: 'Subject',\n    name: 'subject',\n    type: 'text',\n    placeholder: '',\n    title: '*The Subject field must be more than 2 characters',\n    required: true,\n  } as ITextFieldProps,\n  search: {\n    label: 'Search',\n    name: 'search',\n    type: 'text',\n    placeholder: 'Введіть email для пошуку',\n    title: '*The Subject field must be more than 2 characters',\n    required: false,\n  } as ITextFieldProps,\n  searchByPhrase: {\n    label: 'searchByPhrase',\n    name: 'searchByPhrase',\n    type: 'text',\n    placeholder: 'Введіть слово чи фразу для пошуку',\n    title: '*The Subject field must be more than 2 characters',\n    required: false,\n  } as ITextFieldProps,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"todo\":\"Todo_todo__KBW37\",\"todoCard\":\"Todo_todoCard__VEgLx\",\"cardBorder\":\"Todo_cardBorder__bjTLN\",\"partData\":\"Todo_partData__JQyQq\",\"partDataAddInfoUser\":\"Todo_partDataAddInfoUser__Gt4CD\",\"partDataDate\":\"Todo_partDataDate__IPJq4\",\"cardGroup\":\"Todo_cardGroup__NtaSa\",\"cardGroupMobile\":\"Todo_cardGroupMobile__Jkeu6\",\"todoStatus\":\"Todo_todoStatus__GEFX5\",\"scroll\":\"Todo_scroll__ZLtcw\"};","import React from 'react';\nimport moment from 'moment';\nimport { useMediaQuery } from 'react-responsive';\nimport Text from '../Shared/Text'\nimport { FaClock, FaTimes } from 'react-icons/fa';\nimport s from './Todo.module.scss';\n\nexport interface ITodoProps {\n    additionalInfo: string ,\n    dateFrom: string,\n    dateTo: string,\n    otherMembers: string,\n    part: string,\n    subject: string,\n    saveAfterDeadline: boolean,\n}\n\nconst checkDate = (date: string) => {\n    const today = moment();\n    const dueDate = moment(date, 'DD.MM.YYYY');\n\n    if (dueDate.isSameOrAfter(today, 'day')) {\n        return 'Виконується';\n    } else {\n        return 'Термін виконання минув';\n    }\n}\n\nconst Todo: React.FC<ITodoProps> = ({ additionalInfo, dateFrom, dateTo, otherMembers, part, subject, saveAfterDeadline }) => {\n    const isMobile = useMediaQuery({ maxWidth: 767 });\n\n    return (\n        <div className={s.todo}>\n            <div>\n            <Text\n                text={'Перегляд завдання'}\n                textClass=\"title-form-list\"\n            />\n            <div className={s.todoCard}>\n                {dateFrom && dateTo && <div className={s.todoStatus}>\n                    <Text\n                        text={checkDate(dateTo)}\n                        textClass=\"title-form-todo\"\n                    />\n                    {checkDate(dateTo) === 'Виконується' ?\n                        <FaClock color=\"green\" size=\"30px\" style={{ marginLeft: '20px', marginRight: '20px' }} /> :\n                        <FaTimes color=\"red\" size=\"30px\" style={{ marginLeft: '20px', marginRight: '20px' }} />}\n                </div>}\n                    {!isMobile && (<ul className={s.cardBorder}>\n                        <li className={s.cardGroup}>\n                            <div>\n                                <Text\n                                    text={'Розділ'}\n                                    textClass=\"title-form-todo\"\n                                />\n                                <div className={s.partData}>\n                                    <Text\n                                        text={part}\n                                        textClass=\"hidenInputTodo\"\n                                    />\n                                </div>\n                            </div>\n                            <div>\n                                <Text\n                                    text={'Дата початку'}\n                                    textClass=\"title-form-todo\"\n                                />\n                                <div className={s.partDataDate}>\n                                    <Text\n                                        text={dateFrom}\n                                        textClass=\"hidenInput\"\n                                    />\n                                </div>\n                            </div>\n                        </li>\n                        <li className={s.cardGroup}>\n                            <div>\n                                <Text\n                                    text={'Тема'}\n                                    textClass=\"title-form-todo\"\n                                />\n                                <div className={s.partData}>\n                                    <Text\n                                        text={subject}\n                                        textClass=\"hidenInput\"\n                                    />\n                                </div>\n                            </div>\n                            <div>\n                                <Text\n                                    text={'Дата закінчення'}\n                                    textClass=\"title-form-todo\"\n                                />\n                                <div className={s.partDataDate}>\n                                    <Text\n                                        text={dateTo}\n                                        textClass=\"hidenInput\"\n                                    />\n                                </div>\n                            </div>\n                        </li>\n                        <li className={s.cardGroup}>\n                            <div>\n                                <Text\n                                    text={'Додаткова інформація'}\n                                    textClass=\"title-form-todo\"\n                                />\n                                <div className={s.partDataAddInfoUser}>\n                                    <div className={s.scroll}>\n                                        <Text\n                                            text={additionalInfo}\n                                            textClass=\"hidenInputAddInfoUser\"\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                        </li>\n                        {otherMembers && <li className={s.cardGroup}>\n                            <div>\n                                <Text\n                                    text={'Користувачі спільного завдання'}\n                                    textClass=\"title-form-todo\"\n                                />\n                                <div className={s.partDataAddInfoUser}>\n                                    <Text\n                                        text={otherMembers}\n                                        textClass=\"hidenInputAddInfoUser\"\n                                    />\n                                </div>\n                            </div>\n                        </li>}\n                        <Text\n                            text={saveAfterDeadline ?\n                                '*Ваше завдання буде збережене після закінчення терміну його виконання' :\n                                '*Ваше завдання буде видалено після закінчення терміну його виконання'}\n                            textClass=\"title-form-todo\"\n                        />\n                    </ul>)}\n                    {isMobile && (<ul className={s.cardBorder}>\n                        <li className={s.cardGroupMobile}>\n                            <div>\n                                <Text\n                                    text={'Розділ'}\n                                    textClass=\"title-form-todo\"\n                                />\n                                <div className={s.partData}>\n                                    <Text\n                                        text={part}\n                                        textClass=\"hidenInputTodo\"\n                                    />\n                                </div>\n                            </div>\n                            <div>\n                                <Text\n                                    text={'Тема'}\n                                    textClass=\"title-form-todo\"\n                                />\n                                <div className={s.partData}>\n                                    <Text\n                                        text={subject}\n                                        textClass=\"hidenInput\"\n                                    />\n                                </div>\n                            </div>\n                        </li>\n                        <li className={s.cardGroupMobile}>\n                            <div>\n                                <Text\n                                    text={'Дата початку'}\n                                    textClass=\"title-form-todo\"\n                                />\n                                <div className={s.partDataDate}>\n                                    <Text\n                                        text={dateFrom}\n                                        textClass=\"hidenInput\"\n                                    />\n                                </div>\n                            </div>\n                            <div>\n                                <Text\n                                    text={'Дата закінчення'}\n                                    textClass=\"title-form-todo\"\n                                />\n                                <div className={s.partDataDate}>\n                                    <Text\n                                        text={dateTo}\n                                        textClass=\"hidenInput\"\n                                    />\n                                </div>\n                            </div>\n                        </li>\n                        <li className={s.cardGroupMobile}>\n                            <div>\n                                <Text\n                                    text={'Додаткова інформація'}\n                                    textClass=\"title-form-todo\"\n                                />\n                                <div className={s.partDataAddInfoUser}>\n                                    <div className={s.scroll}>\n                                        <Text\n                                            text={additionalInfo}\n                                            textClass=\"hidenInputAddInfoUser\"\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                        </li>\n                        {otherMembers && (<li className={s.cardGroupMobile}>\n                            <div>\n                                <Text\n                                    text={'Користувачі спільного завдання'}\n                                    textClass=\"title-form-todo\"\n                                />\n                                <div className={s.partDataAddInfoUser}>\n                                    <Text\n                                        text={otherMembers}\n                                        textClass=\"hidenInputAddInfoUser\"\n                                    />\n                                </div>\n                            </div>\n                        </li>)}\n                        <Text\n                            text={saveAfterDeadline ?\n                                '*Ваше завдання буде збережене після закінчення терміну його виконання' :\n                                '*Ваше завдання буде видалено після закінчення терміну його виконання'}\n                            textClass=\"title-form-todo\"\n                        />\n                    </ul>)}\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Todo;"],"names":["_ref","arrayUser","selectedUsers","setSelectedUsers","_useState","useState","_useState2","_slicedToArray","finalListUser","setFinalListUser","_jsxs","_Fragment","children","_jsx","TextField","_objectSpread","className","handleChange","e","text","target","value","filteredUsers","filter","email","includes","length","fields","search","s","map","index","type","checked","onChange","user","concat","_toConsumableArray","handleUserSelection","width","height","viewBox","fill","xmlns","d","_ref$dateFormat","dateFormat","showMonthYearPicker","currentDate","Date","maxDate","setMonth","getMonth","moment","selectedDate","setSelectedDate","useEffect","CustomInput","forwardRef","_ref2","ref","onClick","_useState3","format","_useState4","displayDate","setDisplayDate","CalendarIcon","DatePicker","selected","toDate","date","handleDateChange","customInput","renderDayContents","dayOfMonth","selectedValue","startOf","currentValue","isSame","onDismiss","onChoice","dispatch","useDispatch","isDisplayed","setIsDisplayed","isShowChoiceBtn","setIsShowChoiceBtn","handleConfirmClick","choice","clearUserMessage","clearTodoMessage","statusStopResetMessage","FontAwesomeIcon","icon","faTimes","size","id","Text","textClass","name","placeholder","required","options","defaultValue","labelClass","label","selectClass","select","isMobile","useMediaQuery","maxWidth","isTablet","minWidth","customStyles","control","provided","state","fontSize","color","pointerEvents","borderColor","isFocused","option","styles","isDisabled","isSelected","backgroundColor","textColor","undefined","display","alignItems","cursor","menu","marginTop","Select","theme","borderRadius","colors","primary","spanClass","props","inputClass","input","span","clearTextField","inputValue","setInputValue","isValue","setIsValue","handleInputChange","useCallback","newValue","onFocus","onBlur","title","CiSearch","style","marginRight","marginLeft","error","username","password","subject","searchByPhrase","checkDate","today","isSameOrAfter","additionalInfo","dateFrom","dateTo","otherMembers","part","saveAfterDeadline","FaClock","FaTimes"],"sourceRoot":""}