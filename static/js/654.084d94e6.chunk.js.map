{"version":3,"file":"static/js/654.084d94e6.chunk.js","mappings":"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","sources":["webpack://notes-organizer/./src/components/Auth/Login/Login.module.scss?607d","components/Auth/Login/Login.tsx","webpack://notes-organizer/./src/components/Shared/Container/Container.module.scss?3aa5","components/Shared/Container/Container.tsx","webpack://notes-organizer/./src/components/Shared/TextField/TextField.module.scss?7131","components/Shared/TextField/TextField.tsx","components/Shared/TextField/fields.ts"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"Login_form__nrLsp\",\"wrap\":\"Login_wrap__HFcTg\",\"imgDesktop\":\"Login_imgDesktop__S1bZf\",\"auth\":\"Login_auth__qvC4J\",\"box\":\"Login_box__q1Trh\",\"linksWrapper\":\"Login_linksWrapper__DgSFm\",\"title\":\"Login_title__SJ-Fr\",\"authLink\":\"Login_authLink__BytdN\",\"activeLink\":\"Login_activeLink__cA0Jq\",\"linkHome\":\"Login_linkHome__FehlF\",\"googleBtn\":\"Login_googleBtn__loZP4\"};","import { useSelector } from 'react-redux';\nimport { useAppDispatch } from '../../../hooks/hooks';\nimport { useForm, Controller } from 'react-hook-form';\nimport { login } from '../../../Redux/auth/auth-operations';\nimport { NavLink, Navigate, Link, useLocation } from 'react-router-dom';\nimport { getLogin } from './../../../Redux/auth/auth-selectors';\nimport { IUserDataLogin } from '../../types/auth/auth';\nimport { fields } from '../../Shared/TextField/fields';\nimport TextField from '../../Shared/TextField/TextField';\nimport Text from '../../Shared/Text';\nimport Button from '../../Shared/Button/Button';\nimport Container from '../../Shared/Container/Container';\n\nimport { FcGoogle } from 'react-icons/fc';\n\nimport s from './Login.module.scss';\n\nconst Login: React.FC = () => {\n  const isLogin = useSelector(getLogin);\n  const dispatch = useAppDispatch();\n  const location = useLocation();\n\n  const currentOrigin = encodeURIComponent(window.location.origin);\n  const REACT_APP_API_URL =\n    'https://notes-organizer-backend-904276e13746.herokuapp.com';\n\n  const googleText =\n    location.pathname === '/auth/login'\n      ? 'Увійти швидко з Google'\n      : 'Зареєструватись швидко з Google';\n\n  const { control, handleSubmit, reset } = useForm<IUserDataLogin>({\n    defaultValues: {\n      email: '',\n      password: '',\n    },\n  });\n\n  const onSubmit = (data: IUserDataLogin) => {\n    dispatch(login(data));\n    reset();\n  };\n\n  const customClassName = (active: boolean) => {\n    if (active) {\n      return `${s.authLink} ${s.activeLink}`;\n    } else {\n      return s.authLink;\n    }\n  };\n\n  if (isLogin) {\n    return <Navigate to=\"/\" />;\n  }\n\n  return (\n    <section className={s.auth}>\n      <Container>\n        <div className={s.box}>\n          <div className={s.linksWrapper}>\n            <NavLink className={customClassName(true)} to=\"/auth/login\" end>\n              <h2 className={s.title}>Вхід</h2>\n            </NavLink>\n            <NavLink className={customClassName(false)} to=\"/auth/register\">\n              <h2 className={s.title}>Реєстрація</h2>\n            </NavLink>\n          </div>\n          <Text textClass=\"google-text\" text={googleText} />\n          <a href={`${REACT_APP_API_URL}/google?origin=${currentOrigin}`}>\n            <FcGoogle size={24} />\n            Google\n          </a>\n          <form className={s.form} onSubmit={handleSubmit(onSubmit)}>\n            <Controller\n              control={control}\n              name=\"email\"\n              rules={{\n                required: true,\n                pattern: /^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$/,\n              }}\n              render={({ field: { onChange, value }, fieldState }) => (\n                <TextField\n                  value={value}\n                  control={control}\n                  handleChange={onChange}\n                  error={fieldState.error}\n                  {...fields.email}\n                />\n              )}\n            />\n            <Controller\n              control={control}\n              name=\"password\"\n              rules={{ required: true, minLength: 8, maxLength: 20 }}\n              render={({ field: { onChange, value }, fieldState }) => (\n                <TextField\n                  value={value}\n                  control={control}\n                  handleChange={onChange}\n                  error={fieldState.error}\n                  {...fields.password}\n                />\n              )}\n            />\n            <div className={s.wrap}>\n              <Button text=\"Ввійти\" btnClass=\"btnLight\" />\n            </div>\n          </form>\n          <Link className={s.linkHome} to=\"/\">\n            Повернутися на головну\n          </Link>\n        </div>\n      </Container>\n    </section>\n  );\n};\n\nexport default Login;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Container_container__NXBJZ\"};","import React, { ReactNode } from 'react';\nimport s from './Container.module.scss';\n\ninterface ContainerProps {\n  children: ReactNode;\n}\n\nconst Container: React.FC<ContainerProps> = ({ children }) => {\n  return <div className={s.container}>{children}</div>;\n};\n\nexport default Container;\n","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"TextField_label__kp4Pv\",\"input\":\"TextField_input__JDykO\",\"error\":\"TextField_error__92ab9\",\"span\":\"TextField_span__qcPmc\",\"value\":\"TextField_value__Rhply\",\"createTodo\":\"TextField_createTodo__PD23L\",\"search\":\"TextField_search__dl4gh\",\"searchIST\":\"TextField_searchIST__LvGwH\"};","import {\n  ChangeEvent,\n  forwardRef,\n  ChangeEventHandler,\n  useState,\n  useEffect,\n  useCallback,\n} from 'react';\nimport { FieldError, Control } from 'react-hook-form';\nimport { useMediaQuery } from 'react-responsive';\nimport { CiSearch } from 'react-icons/ci';\n\nimport s from './TextField.module.scss';\n\nexport interface ITextFieldProps {\n  type?: string;\n  name?: string;\n  value?: string;\n  handleChange?: ChangeEventHandler<HTMLInputElement>;\n  placeholder?: string | string[];\n  required?: boolean;\n  title?: string;\n  className?: string;\n  error?: FieldError;\n  control?: Control<any>;\n  onFocus?: () => void;\n  onBlur?: () => void;\n  clearTextField?: boolean;\n}\n\nconst TextField = forwardRef<HTMLInputElement, ITextFieldProps>(\n  (props, ref) => {\n    const labelClass = props.className\n      ? `${s.label} ${s[props.className]}`\n      : `${s.label}`;\n    const inputClass = props.className\n      ? `${s.input} ${s[props.className]}`\n      : `${s.input}`;\n    const spanClass = props.className\n      ? `${s.span} ${s[props.className]}`\n      : `${s.span}`;\n    const clearTextField = props.clearTextField;\n    const isTablet = useMediaQuery({ minWidth: 768, maxWidth: 1279 });\n    const [inputValue, setInputValue] = useState<string>(props.value || '');\n\n    const [isValue, setIsValue] = useState<boolean>(false);\n\n    const handleInputChange = useCallback(\n      (e: ChangeEvent<HTMLInputElement>) => {\n        const newValue = e.target.value;\n        setInputValue(newValue);\n\n        if (props.handleChange) {\n          props.handleChange(e);\n        }\n        if (newValue !== '') {\n          setIsValue(true);\n        } else {\n          setIsValue(false);\n        }\n      },\n      [props]\n    );\n\n    useEffect(() => {\n      if (props.value === '') {\n        setInputValue('');\n      } else {\n        if (props.value) {\n          setInputValue(props.value);\n        }\n      }\n    }, [props.value]);\n\n    //скидуэмо значення Input коли користувач був обраний\n    useEffect(() => {\n      if (clearTextField) {\n        setInputValue('');\n        setIsValue(false);\n        const fakeEvent = {\n          target: {\n            value: '',\n          },\n        } as ChangeEvent<HTMLInputElement>;\n\n        handleInputChange(fakeEvent);\n      } else {\n        return;\n      }\n    }, [clearTextField, handleInputChange]);\n\n    const handleFocus = () => {\n      if (props.onFocus) {\n        props.onFocus();\n      }\n    };\n\n    const handleBlur = () => {\n      if (props.onBlur) {\n        props.onBlur();\n      }\n    };\n\n    return (\n      <label className={labelClass}>\n        <input\n          ref={ref}\n          className={inputClass}\n          type={props.type}\n          name={props.name}\n          value={inputValue}\n          onChange={handleInputChange}\n          onFocus={handleFocus}\n          onBlur={handleBlur}\n          required={props.required}\n          title={props.title}\n        />\n        {(props.className === 'search' || props.className === 'searchIST') &&\n          !isValue && (\n            <span className={spanClass}>\n              <CiSearch\n                size={24}\n                style={{\n                  marginRight: isTablet ? '5px' : '10px',\n                  marginLeft: '10px',\n                }}\n              />\n              {props.placeholder}\n            </span>\n          )}\n        {props.className !== 'search' &&\n          props.className !== 'searchIST' &&\n          !isValue && <span className={spanClass}>{props.placeholder}</span>}\n        {props.error && <p className={s.error}>{props.title}</p>}\n      </label>\n    );\n  }\n);\n\nexport default TextField;\n","import { ITextFieldProps } from './TextField';\n\nexport const fields = {\n  username: {\n    label: 'User name',\n    name: 'username',\n    type: 'text',\n    placeholder: 'User name*',\n    title: '*The Name field must be more than 2 and less than 31 characters',\n    required: true,\n  } as ITextFieldProps,\n  email: {\n    label: 'Email',\n    name: 'email',\n    type: 'text',\n    placeholder: 'Email*',\n    title: '*Enter a valid email',\n    required: true,\n  } as ITextFieldProps,\n  password: {\n    label: 'Password',\n    name: 'password',\n    type: 'password',\n    placeholder: 'Password*',\n    title:\n      '*The Password field must be more than 2 and less than 21 characters',\n    required: true,\n  } as ITextFieldProps,\n  subject: {\n    label: 'Subject',\n    name: 'subject',\n    type: 'text',\n    placeholder: '',\n    title: '*The Subject field must be more than 2 characters',\n    required: true,\n  } as ITextFieldProps,\n  search: {\n    label: 'Search',\n    name: 'search',\n    type: 'text',\n    placeholder: 'Введіть email для пошуку',\n    title: '*The Subject field must be more than 2 characters',\n    required: false,\n  } as ITextFieldProps,\n  searchByPhrase: {\n    label: 'searchByPhrase',\n    name: 'searchByPhrase',\n    type: 'text',\n    placeholder: 'Введіть слово чи фразу для пошуку',\n    title: '*The Subject field must be more than 2 characters',\n    required: false,\n  } as ITextFieldProps,\n};\n"],"names":["Login","isLogin","useSelector","getLogin","dispatch","useAppDispatch","location","useLocation","currentOrigin","encodeURIComponent","window","origin","googleText","pathname","control","handleSubmit","reset","useForm","defaultValues","email","password","customClassName","active","concat","s","_jsx","Navigate","to","className","children","Container","_jsxs","NavLink","end","Text","textClass","text","href","FcGoogle","size","onSubmit","data","login","Controller","name","rules","required","pattern","render","_ref","field","onChange","value","fieldState","TextField","_objectSpread","handleChange","error","fields","minLength","maxLength","_ref2","Button","btnClass","Link","forwardRef","props","ref","labelClass","label","inputClass","input","spanClass","span","clearTextField","isTablet","useMediaQuery","minWidth","maxWidth","inputValue","setInputValue","useState","isValue","setIsValue","handleInputChange","useCallback","e","newValue","target","useEffect","type","onFocus","handleFocus","onBlur","handleBlur","title","CiSearch","style","marginRight","marginLeft","placeholder","username","subject","search","searchByPhrase"],"sourceRoot":""}